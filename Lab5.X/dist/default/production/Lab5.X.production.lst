

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Aug 12 03:51:14 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374                           
   375                           	psect	idataBANK0
   376  03B6                     __pidataBANK0:
   377                           
   378                           ;initializer for _T
   379  03B6  3401               	retlw	1
   380  0018                     _RCSTAbits	set	24
   381  0019                     _TXREG	set	25
   382  0001                     _TMR0	set	1
   383  0009                     _PORTE	set	9
   384  0007                     _PORTC	set	7
   385  0006                     _PORTB	set	6
   386  0005                     _PORTA	set	5
   387  0008                     _PORTD	set	8
   388  0006                     _PORTBbits	set	6
   389  000B                     _INTCONbits	set	11
   390  001A                     _RCREG	set	26
   391  000C                     _PIR1bits	set	12
   392  0099                     _SPBRG	set	153
   393  009A                     _SPBRGH	set	154
   394  0098                     _TXSTAbits	set	152
   395  008C                     _PIE1bits	set	140
   396  0081                     _OPTION_REG	set	129
   397  0095                     _WPUBbits	set	149
   398  009F                     _ADCON1	set	159
   399  008F                     _OSCCONbits	set	143
   400  0096                     _IOCBbits	set	150
   401  0089                     _TRISE	set	137
   402  0088                     _TRISD	set	136
   403  0087                     _TRISC	set	135
   404  0086                     _TRISB	set	134
   405  0085                     _TRISA	set	133
   406  0187                     _BAUDCTLbits	set	391
   407  0189                     _ANSELH	set	393
   408  0188                     _ANSEL	set	392
   409                           
   410                           	psect	cinit
   411  000F                     start_initialization:	
   412                           ; #config settings
   413                           
   414  000F                     __initialization:
   415                           
   416                           ; Initialize objects allocated to BANK0
   417  000F  120A  118A  23B6  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   418  0014  00CA               	movwf	__pdataBANK0& (0+127)
   419                           
   420                           ; Clear objects allocated to BANK0
   421  0015  1383               	bcf	3,7	;select IRP bank0
   422  0016  3020               	movlw	low __pbssBANK0
   423  0017  0084               	movwf	4
   424  0018  3039               	movlw	low (__pbssBANK0+25)
   425  0019  120A  118A  23AE  120A  118A  	fcall	clear_ram0
   426                           
   427                           ; Clear objects allocated to COMMON
   428  001E  01F6               	clrf	__pbssCOMMON& (0+127)
   429  001F  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   430  0020  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   431  0021  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   432  0022                     end_of_initialization:	
   433                           ;End of C runtime variable initialization code
   434                           
   435  0022                     __end_of__initialization:
   436  0022  0183               	clrf	3
   437  0023  120A  118A  2AF8   	ljmp	_main	;jump to C main() function
   438                           
   439                           	psect	bssCOMMON
   440  0076                     __pbssCOMMON:
   441  0076                     _cc:
   442  0076                     	ds	1
   443  0077                     _CONT:
   444  0077                     	ds	1
   445  0078                     _signo:
   446  0078                     	ds	1
   447  0079                     _toggleTX:
   448  0079                     	ds	1
   449                           
   450                           	psect	bssBANK0
   451  0020                     __pbssBANK0:
   452  0020                     _BOTON:
   453  0020                     	ds	1
   454  0021                     _en:
   455  0021                     	ds	1
   456  0022                     _ABC:
   457  0022                     	ds	1
   458  0023                     _AB:
   459  0023                     	ds	1
   460  0024                     _C:
   461  0024                     	ds	1
   462  0025                     _B:
   463  0025                     	ds	1
   464  0026                     _A:
   465  0026                     	ds	1
   466  0027                     _AR4:
   467  0027                     	ds	1
   468  0028                     _AR3:
   469  0028                     	ds	1
   470  0029                     _AR2:
   471  0029                     	ds	1
   472  002A                     _AR1:
   473  002A                     	ds	1
   474  002B                     _res:
   475  002B                     	ds	1
   476  002C                     _sum:
   477  002C                     	ds	1
   478  002D                     _AU2:
   479  002D                     	ds	1
   480  002E                     _AD2:
   481  002E                     	ds	1
   482  002F                     _AC2:
   483  002F                     	ds	1
   484  0030                     _Un2:
   485  0030                     	ds	1
   486  0031                     _Dec2:
   487  0031                     	ds	1
   488  0032                     _Cen2:
   489  0032                     	ds	1
   490  0033                     _AU1:
   491  0033                     	ds	1
   492  0034                     _AD1:
   493  0034                     	ds	1
   494  0035                     _AC1:
   495  0035                     	ds	1
   496  0036                     _Un1:
   497  0036                     	ds	1
   498  0037                     _Dec1:
   499  0037                     	ds	1
   500  0038                     _Cen1:
   501  0038                     	ds	1
   502                           
   503                           	psect	dataBANK0
   504  004A                     __pdataBANK0:
   505  004A                     _T:
   506  004A                     	ds	1
   507                           
   508                           	psect	clrtext
   509  03AE                     clear_ram0:	
   510                           ;	Called with FSR containing the base address, and
   511                           ;	W with the last address+1
   512                           
   513  03AE  0064               	clrwdt	;clear the watchdog before getting into this loop
   514  03AF                     clrloop0:
   515  03AF  0180               	clrf	0	;clear RAM location pointed to by FSR
   516  03B0  0A84               	incf	4,f	;increment pointer
   517  03B1  0604               	xorwf	4,w	;XOR with final address
   518  03B2  1903               	btfsc	3,2	;have we reached the end yet?
   519  03B3  3400               	retlw	0	;all done for this memory range, return
   520  03B4  0604               	xorwf	4,w	;XOR again to restore value
   521  03B5  2BAF               	goto	clrloop0	;do the next byte
   522                           
   523                           	psect	cstackCOMMON
   524  0070                     __pcstackCOMMON:
   525  0070                     ?_envio:
   526  0070                     ??_envio:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_Setup:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_USARTcon:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_CONTADOR:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_LECT1:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_LECT2:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_num_ascii:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_ISR:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_main:	
   551                           ; 1 bytes @ 0x0
   552                           
   553                           
   554                           ; 1 bytes @ 0x0
   555  0070                     	ds	1
   556  0071                     ??_ISR:
   557                           
   558                           ; 1 bytes @ 0x1
   559  0071                     	ds	3
   560  0074                     ??_Setup:
   561  0074                     ??_USARTcon:	
   562                           ; 1 bytes @ 0x4
   563                           
   564  0074                     ??_num_ascii:	
   565                           ; 1 bytes @ 0x4
   566                           
   567  0074                     ??___wmul:	
   568                           ; 1 bytes @ 0x4
   569                           
   570  0074                     ?___bmul:	
   571                           ; 1 bytes @ 0x4
   572                           
   573  0074                     ___bmul@multiplicand:	
   574                           ; 1 bytes @ 0x4
   575                           
   576  0074                     ___wmul@product:	
   577                           ; 1 bytes @ 0x4
   578                           
   579                           
   580                           ; 2 bytes @ 0x4
   581  0074                     	ds	1
   582  0075                     ??___bmul:
   583                           
   584                           ; 1 bytes @ 0x5
   585  0075                     	ds	1
   586  0076                     ??_main:
   587                           
   588                           	psect	cstackBANK0
   589  0039                     __pcstackBANK0:	
   590                           ; 1 bytes @ 0x6
   591                           
   592  0039                     ?___wmul:
   593  0039                     num_ascii@num:	
   594                           ; 2 bytes @ 0x0
   595                           
   596  0039                     ___bmul@product:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0039                     ___wmul@multiplier:	
   600                           ; 1 bytes @ 0x0
   601                           
   602                           
   603                           ; 2 bytes @ 0x0
   604  0039                     	ds	1
   605  003A                     ___bmul@multiplier:
   606                           
   607                           ; 1 bytes @ 0x1
   608  003A                     	ds	1
   609  003B                     ??_CONTADOR:
   610  003B                     ___wmul@multiplicand:	
   611                           ; 1 bytes @ 0x2
   612                           
   613                           
   614                           ; 2 bytes @ 0x2
   615  003B                     	ds	2
   616  003D                     ?___awdiv:
   617  003D                     ___awdiv@divisor:	
   618                           ; 2 bytes @ 0x4
   619                           
   620                           
   621                           ; 2 bytes @ 0x4
   622  003D                     	ds	2
   623  003F                     ___awdiv@dividend:
   624                           
   625                           ; 2 bytes @ 0x6
   626  003F                     	ds	2
   627  0041                     ??___awdiv:
   628                           
   629                           ; 1 bytes @ 0x8
   630  0041                     	ds	1
   631  0042                     ___awdiv@counter:
   632                           
   633                           ; 1 bytes @ 0x9
   634  0042                     	ds	1
   635  0043                     ___awdiv@sign:
   636                           
   637                           ; 1 bytes @ 0xA
   638  0043                     	ds	1
   639  0044                     ___awdiv@quotient:
   640                           
   641                           ; 2 bytes @ 0xB
   642  0044                     	ds	2
   643  0046                     ??_LECT1:
   644  0046                     ??_LECT2:	
   645                           ; 1 bytes @ 0xD
   646                           
   647                           
   648                           ; 1 bytes @ 0xD
   649  0046                     	ds	4
   650                           
   651                           	psect	maintext
   652  02F8                     __pmaintext:	
   653 ;;
   654 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   655 ;;
   656 ;; *************** function _main *****************
   657 ;; Defined at:
   658 ;;		line 108 in file "main.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : B00/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0
   674 ;;      Temps:          0       0       0       0       0
   675 ;;      Totals:         0       0       0       0       0
   676 ;;Total ram usage:        0 bytes
   677 ;; Hardware stack levels required when called: 4
   678 ;; This function calls:
   679 ;;		_CONTADOR
   680 ;;		_LECT1
   681 ;;		_LECT2
   682 ;;		_Setup
   683 ;;		_USARTcon
   684 ;; This function is called by:
   685 ;;		Startup code after reset
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           
   690                           ;psect for function _main
   691  02F8                     _main:
   692  02F8                     l1743:	
   693                           ;incstack = 0
   694                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   695                           
   696                           
   697                           ;main.c: 109:     Setup();
   698  02F8  120A  118A  22C2  120A  118A  	fcall	_Setup
   699                           
   700                           ;main.c: 110:     USARTcon();
   701  02FD  120A  118A  2398  120A  118A  	fcall	_USARTcon
   702  0302                     l1745:
   703                           
   704                           ;main.c: 116:         if(57<signo && signo<48){
   705  0302  303A               	movlw	58
   706  0303  0278               	subwf	_signo,w
   707  0304  1C03               	skipc
   708  0305  2B07               	goto	u1051
   709  0306  2B08               	goto	u1050
   710  0307                     u1051:
   711  0307  2B10               	goto	l142
   712  0308                     u1050:
   713  0308                     l1747:
   714  0308  3030               	movlw	48
   715  0309  0278               	subwf	_signo,w
   716  030A  1803               	skipnc
   717  030B  2B0D               	goto	u1061
   718  030C  2B0E               	goto	u1060
   719  030D                     u1061:
   720  030D  2B10               	goto	l142
   721  030E                     u1060:
   722  030E                     l1749:
   723                           
   724                           ;main.c: 117:             cc = 0;
   725  030E  01F6               	clrf	_cc
   726                           
   727                           ;main.c: 118:         }
   728  030F  2B14               	goto	l1751
   729  0310                     l142:	
   730                           ;main.c: 119:         else{
   731                           
   732                           
   733                           ;main.c: 120:             en = 1;
   734  0310  1283               	bcf	3,5	;RP0=0, select bank0
   735  0311  1303               	bcf	3,6	;RP1=0, select bank0
   736  0312  01A1               	clrf	_en
   737  0313  0AA1               	incf	_en,f
   738  0314                     l1751:
   739                           
   740                           ;main.c: 122:         CONTADOR();
   741  0314  120A  118A  2026  120A  118A  	fcall	_CONTADOR
   742  0319                     l1753:
   743                           
   744                           ;main.c: 123:         LECT1();
   745  0319  120A  118A  2145  120A  118A  	fcall	_LECT1
   746  031E                     l1755:
   747                           
   748                           ;main.c: 124:         LECT2();
   749  031E  120A  118A  20C5  120A  118A  	fcall	_LECT2
   750  0323                     l1757:
   751                           
   752                           ;main.c: 125:         PORTD = BOTON;
   753  0323  1283               	bcf	3,5	;RP0=0, select bank0
   754  0324  1303               	bcf	3,6	;RP1=0, select bank0
   755  0325  0820               	movf	_BOTON,w
   756  0326  0088               	movwf	8	;volatile
   757  0327                     l1759:
   758                           
   759                           ;main.c: 126:         PORTA = CONT;
   760  0327  0877               	movf	_CONT,w
   761  0328  0085               	movwf	5	;volatile
   762  0329  2B02               	goto	l1745
   763  032A  120A  118A  280C   	ljmp	start
   764  032D                     __end_of_main:
   765                           
   766                           	psect	text1
   767  0398                     __ptext1:	
   768 ;; *************** function _USARTcon *****************
   769 ;; Defined at:
   770 ;;		line 3 in file "USART.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, status,2
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         0       0       0       0       0
   785 ;;      Locals:         0       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0
   787 ;;      Totals:         0       0       0       0       0
   788 ;;Total ram usage:        0 bytes
   789 ;; Hardware stack levels used: 1
   790 ;; Hardware stack levels required when called: 2
   791 ;; This function calls:
   792 ;;		Nothing
   793 ;; This function is called by:
   794 ;;		_main
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           
   799                           ;psect for function _USARTcon
   800  0398                     _USARTcon:
   801  0398                     l1417:	
   802                           ;incstack = 0
   803                           ; Regs used in _USARTcon: [wreg+status,2]
   804                           
   805                           
   806                           ;USART.c: 5:  TXSTAbits.SYNC = 0;
   807  0398  1683               	bsf	3,5	;RP0=1, select bank1
   808  0399  1303               	bcf	3,6	;RP1=0, select bank1
   809  039A  1218               	bcf	24,4	;volatile
   810                           
   811                           ;USART.c: 6:  TXSTAbits.BRGH = 1;
   812  039B  1518               	bsf	24,2	;volatile
   813                           
   814                           ;USART.c: 7:  TXSTAbits.TX9 = 0;
   815  039C  1318               	bcf	24,6	;volatile
   816                           
   817                           ;USART.c: 8:  BAUDCTLbits.BRG16 = 0;
   818  039D  1683               	bsf	3,5	;RP0=1, select bank3
   819  039E  1703               	bsf	3,6	;RP1=1, select bank3
   820  039F  1187               	bcf	7,3	;volatile
   821  03A0                     l1419:
   822                           
   823                           ;USART.c: 9:  SPBRGH = 0;
   824  03A0  1683               	bsf	3,5	;RP0=1, select bank1
   825  03A1  1303               	bcf	3,6	;RP1=0, select bank1
   826  03A2  019A               	clrf	26	;volatile
   827  03A3                     l1421:
   828                           
   829                           ;USART.c: 10:  SPBRG = 51;
   830  03A3  3033               	movlw	51
   831  03A4  0099               	movwf	25	;volatile
   832  03A5                     l1423:
   833                           
   834                           ;USART.c: 12:  RCSTAbits.SPEN = 1;
   835  03A5  1283               	bcf	3,5	;RP0=0, select bank0
   836  03A6  1303               	bcf	3,6	;RP1=0, select bank0
   837  03A7  1798               	bsf	24,7	;volatile
   838  03A8                     l1425:
   839                           
   840                           ;USART.c: 13:  RCSTAbits.RX9 = 0;
   841  03A8  1318               	bcf	24,6	;volatile
   842  03A9                     l1427:
   843                           
   844                           ;USART.c: 14:  RCSTAbits.CREN = 1;
   845  03A9  1618               	bsf	24,4	;volatile
   846  03AA                     l1429:
   847                           
   848                           ;USART.c: 15:  TXSTAbits.TXEN = 1;
   849  03AA  1683               	bsf	3,5	;RP0=1, select bank1
   850  03AB  1303               	bcf	3,6	;RP1=0, select bank1
   851  03AC  1698               	bsf	24,5	;volatile
   852  03AD                     l217:
   853  03AD  0008               	return
   854  03AE                     __end_of_USARTcon:
   855                           
   856                           	psect	text2
   857  02C2                     __ptext2:	
   858 ;; *************** function _Setup *****************
   859 ;; Defined at:
   860 ;;		line 131 in file "main.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, status,2
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0
   877 ;;      Totals:         0       0       0       0       0
   878 ;;Total ram usage:        0 bytes
   879 ;; Hardware stack levels used: 1
   880 ;; Hardware stack levels required when called: 2
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		_main
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _Setup
   890  02C2                     _Setup:
   891  02C2                     l1373:	
   892                           ;incstack = 0
   893                           ; Regs used in _Setup: [wreg+status,2]
   894                           
   895                           
   896                           ;main.c: 133:     ANSEL = 0;
   897  02C2  1683               	bsf	3,5	;RP0=1, select bank3
   898  02C3  1703               	bsf	3,6	;RP1=1, select bank3
   899  02C4  0188               	clrf	8	;volatile
   900                           
   901                           ;main.c: 134:     ANSELH = 0;
   902  02C5  0189               	clrf	9	;volatile
   903                           
   904                           ;main.c: 135:     ANSEL = 0;
   905  02C6  0188               	clrf	8	;volatile
   906                           
   907                           ;main.c: 136:     TRISA = 0;
   908  02C7  1683               	bsf	3,5	;RP0=1, select bank1
   909  02C8  1303               	bcf	3,6	;RP1=0, select bank1
   910  02C9  0185               	clrf	5	;volatile
   911  02CA                     l1375:
   912                           
   913                           ;main.c: 137:     TRISB = 0b00000011;
   914  02CA  3003               	movlw	3
   915  02CB  0086               	movwf	6	;volatile
   916  02CC                     l1377:
   917                           
   918                           ;main.c: 138:     TRISC = 0b10000000;
   919  02CC  3080               	movlw	128
   920  02CD  0087               	movwf	7	;volatile
   921                           
   922                           ;main.c: 139:     TRISD = 0;
   923  02CE  0188               	clrf	8	;volatile
   924                           
   925                           ;main.c: 140:     TRISE = 0;
   926  02CF  0189               	clrf	9	;volatile
   927                           
   928                           ;main.c: 141:     PORTA = 0;
   929  02D0  1283               	bcf	3,5	;RP0=0, select bank0
   930  02D1  1303               	bcf	3,6	;RP1=0, select bank0
   931  02D2  0185               	clrf	5	;volatile
   932                           
   933                           ;main.c: 142:     PORTB = 0;
   934  02D3  0186               	clrf	6	;volatile
   935                           
   936                           ;main.c: 143:     PORTC = 0;
   937  02D4  0187               	clrf	7	;volatile
   938                           
   939                           ;main.c: 144:     PORTD = 0;
   940  02D5  0188               	clrf	8	;volatile
   941                           
   942                           ;main.c: 145:     PORTE = 0;
   943  02D6  0189               	clrf	9	;volatile
   944  02D7                     l1379:
   945                           
   946                           ;main.c: 146:     INTCONbits.TMR0IF = 0;
   947  02D7  110B               	bcf	11,2	;volatile
   948  02D8                     l1381:
   949                           
   950                           ;main.c: 147:     INTCONbits.RBIF = 0;
   951  02D8  100B               	bcf	11,0	;volatile
   952  02D9                     l1383:
   953                           
   954                           ;main.c: 148:     INTCONbits.GIE = 1;
   955  02D9  178B               	bsf	11,7	;volatile
   956  02DA                     l1385:
   957                           
   958                           ;main.c: 149:     INTCONbits.PEIE = 1;
   959  02DA  170B               	bsf	11,6	;volatile
   960  02DB                     l1387:
   961                           
   962                           ;main.c: 150:     INTCONbits.T0IE = 0;
   963  02DB  128B               	bcf	11,5	;volatile
   964  02DC                     l1389:
   965                           
   966                           ;main.c: 151:     INTCONbits.RBIE = 1;
   967  02DC  158B               	bsf	11,3	;volatile
   968  02DD                     l1391:
   969                           
   970                           ;main.c: 152:     IOCBbits.IOCB0 = 1;
   971  02DD  1683               	bsf	3,5	;RP0=1, select bank1
   972  02DE  1303               	bcf	3,6	;RP1=0, select bank1
   973  02DF  1416               	bsf	22,0	;volatile
   974  02E0                     l1393:
   975                           
   976                           ;main.c: 153:     IOCBbits.IOCB1 = 1;
   977  02E0  1496               	bsf	22,1	;volatile
   978  02E1                     l1395:
   979                           
   980                           ;main.c: 154:     PIR1bits.ADIF = 0;
   981  02E1  1283               	bcf	3,5	;RP0=0, select bank0
   982  02E2  1303               	bcf	3,6	;RP1=0, select bank0
   983  02E3  130C               	bcf	12,6	;volatile
   984  02E4                     l1397:
   985                           
   986                           ;main.c: 155:     OSCCONbits.IRCF0 = 1;
   987  02E4  1683               	bsf	3,5	;RP0=1, select bank1
   988  02E5  1303               	bcf	3,6	;RP1=0, select bank1
   989  02E6  160F               	bsf	15,4	;volatile
   990  02E7                     l1399:
   991                           
   992                           ;main.c: 156:     OSCCONbits.IRCF1 = 1;
   993  02E7  168F               	bsf	15,5	;volatile
   994  02E8                     l1401:
   995                           
   996                           ;main.c: 157:     OSCCONbits.IRCF2 = 1;
   997  02E8  170F               	bsf	15,6	;volatile
   998                           
   999                           ;main.c: 158:     ADCON1 = 0;
  1000  02E9  019F               	clrf	31	;volatile
  1001  02EA                     l1403:
  1002                           
  1003                           ;main.c: 159:     TMR0 = 236;
  1004  02EA  30EC               	movlw	236
  1005  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1006  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1007  02ED  0081               	movwf	1	;volatile
  1008  02EE                     l1405:
  1009                           
  1010                           ;main.c: 160:     WPUBbits.WPUB0 = 1;
  1011  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  1012  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  1013  02F0  1415               	bsf	21,0	;volatile
  1014  02F1                     l1407:
  1015                           
  1016                           ;main.c: 161:     WPUBbits.WPUB1 = 1;
  1017  02F1  1495               	bsf	21,1	;volatile
  1018  02F2                     l1409:
  1019                           
  1020                           ;main.c: 162:     OPTION_REG = 0b01010111;
  1021  02F2  3057               	movlw	87
  1022  02F3  0081               	movwf	1	;volatile
  1023  02F4                     l1411:
  1024                           
  1025                           ;main.c: 163:     PIE1bits.ADIE = 0;
  1026  02F4  130C               	bcf	12,6	;volatile
  1027  02F5                     l1413:
  1028                           
  1029                           ;main.c: 164:     PIE1bits.RCIE = 1;
  1030  02F5  168C               	bsf	12,5	;volatile
  1031  02F6                     l1415:
  1032                           
  1033                           ;main.c: 165:     PIE1bits.TXIE = 1;
  1034  02F6  160C               	bsf	12,4	;volatile
  1035  02F7                     l149:
  1036  02F7  0008               	return
  1037  02F8                     __end_of_Setup:
  1038                           
  1039                           	psect	text3
  1040  00C5                     __ptext3:	
  1041 ;; *************** function _LECT2 *****************
  1042 ;; Defined at:
  1043 ;;		line 175 in file "main.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1057 ;;      Params:         0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0
  1059 ;;      Temps:          0       4       0       0       0
  1060 ;;      Totals:         0       4       0       0       0
  1061 ;;Total ram usage:        4 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; Hardware stack levels required when called: 3
  1064 ;; This function calls:
  1065 ;;		___awdiv
  1066 ;;		___bmul
  1067 ;;		___wmul
  1068 ;;		_num_ascii
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function _LECT2
  1076  00C5                     _LECT2:
  1077  00C5                     l1735:	
  1078                           ;incstack = 0
  1079                           ; Regs used in _LECT2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1080                           
  1081                           
  1082                           ;main.c: 176:     Cen2 = BOTON/100;
  1083  00C5  3064               	movlw	100
  1084  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1085  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1086  00C8  00BD               	movwf	___awdiv@divisor
  1087  00C9  3000               	movlw	0
  1088  00CA  00BE               	movwf	___awdiv@divisor+1
  1089  00CB  0820               	movf	_BOTON,w
  1090  00CC  00C6               	movwf	??_LECT2
  1091  00CD  01C7               	clrf	??_LECT2+1
  1092  00CE  0846               	movf	??_LECT2,w
  1093  00CF  00BF               	movwf	___awdiv@dividend
  1094  00D0  0847               	movf	??_LECT2+1,w
  1095  00D1  00C0               	movwf	___awdiv@dividend+1
  1096  00D2  120A  118A  21C5  120A  118A  	fcall	___awdiv
  1097  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1098  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1099  00D9  083D               	movf	?___awdiv,w
  1100  00DA  00C8               	movwf	??_LECT2+2
  1101  00DB  0848               	movf	??_LECT2+2,w
  1102  00DC  00B2               	movwf	_Cen2
  1103                           
  1104                           ;main.c: 177:     Dec2 = (BOTON-Cen2*100)/10;
  1105  00DD  300A               	movlw	10
  1106  00DE  00BD               	movwf	___awdiv@divisor
  1107  00DF  3000               	movlw	0
  1108  00E0  00BE               	movwf	___awdiv@divisor+1
  1109  00E1  0832               	movf	_Cen2,w
  1110  00E2  00C6               	movwf	??_LECT2
  1111  00E3  01C7               	clrf	??_LECT2+1
  1112  00E4  0846               	movf	??_LECT2,w
  1113  00E5  00B9               	movwf	___wmul@multiplier
  1114  00E6  0847               	movf	??_LECT2+1,w
  1115  00E7  00BA               	movwf	___wmul@multiplier+1
  1116  00E8  309C               	movlw	156
  1117  00E9  00BB               	movwf	___wmul@multiplicand
  1118  00EA  30FF               	movlw	255
  1119  00EB  00BC               	movwf	___wmul@multiplicand+1
  1120  00EC  120A  118A  235A  120A  118A  	fcall	___wmul
  1121  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1122  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1123  00F3  0820               	movf	_BOTON,w
  1124  00F4  0739               	addwf	?___wmul,w
  1125  00F5  00BF               	movwf	___awdiv@dividend
  1126  00F6  083A               	movf	?___wmul+1,w
  1127  00F7  1803               	skipnc
  1128  00F8  0A3A               	incf	?___wmul+1,w
  1129  00F9  00C0               	movwf	___awdiv@dividend+1
  1130  00FA  120A  118A  21C5  120A  118A  	fcall	___awdiv
  1131  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0101  083D               	movf	?___awdiv,w
  1134  0102  00C8               	movwf	??_LECT2+2
  1135  0103  0848               	movf	??_LECT2+2,w
  1136  0104  00B1               	movwf	_Dec2
  1137                           
  1138                           ;main.c: 178:     Un2 = (BOTON-Cen2*100-Dec2*10);
  1139  0105  309C               	movlw	156
  1140  0106  00C6               	movwf	??_LECT2
  1141  0107  0846               	movf	??_LECT2,w
  1142  0108  00F4               	movwf	___bmul@multiplicand
  1143  0109  0832               	movf	_Cen2,w
  1144  010A  120A  118A  2381  120A  118A  	fcall	___bmul
  1145  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1146  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1147  0111  00C7               	movwf	??_LECT2+1
  1148  0112  30F6               	movlw	246
  1149  0113  00C8               	movwf	??_LECT2+2
  1150  0114  0848               	movf	??_LECT2+2,w
  1151  0115  00F4               	movwf	___bmul@multiplicand
  1152  0116  0831               	movf	_Dec2,w
  1153  0117  120A  118A  2381  120A  118A  	fcall	___bmul
  1154  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1155  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1156  011E  0747               	addwf	??_LECT2+1,w
  1157  011F  0720               	addwf	_BOTON,w
  1158  0120  00C9               	movwf	??_LECT2+3
  1159  0121  0849               	movf	??_LECT2+3,w
  1160  0122  00B0               	movwf	_Un2
  1161  0123                     l1737:
  1162                           
  1163                           ;main.c: 179:     AC2 = num_ascii(Cen2);
  1164  0123  0832               	movf	_Cen2,w
  1165  0124  120A  118A  2281  120A  118A  	fcall	_num_ascii
  1166  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1167  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1168  012B  00C6               	movwf	??_LECT2
  1169  012C  0846               	movf	??_LECT2,w
  1170  012D  00AF               	movwf	_AC2
  1171  012E                     l1739:
  1172                           
  1173                           ;main.c: 180:     AD2 = num_ascii(Dec2);
  1174  012E  0831               	movf	_Dec2,w
  1175  012F  120A  118A  2281  120A  118A  	fcall	_num_ascii
  1176  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0136  00C6               	movwf	??_LECT2
  1179  0137  0846               	movf	??_LECT2,w
  1180  0138  00AE               	movwf	_AD2
  1181  0139                     l1741:
  1182                           
  1183                           ;main.c: 181:     AU2 = num_ascii(Un2);
  1184  0139  0830               	movf	_Un2,w
  1185  013A  120A  118A  2281  120A  118A  	fcall	_num_ascii
  1186  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1187  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1188  0141  00C6               	movwf	??_LECT2
  1189  0142  0846               	movf	??_LECT2,w
  1190  0143  00AD               	movwf	_AU2
  1191  0144                     l155:
  1192  0144  0008               	return
  1193  0145                     __end_of_LECT2:
  1194                           
  1195                           	psect	text4
  1196  0145                     __ptext4:	
  1197 ;; *************** function _LECT1 *****************
  1198 ;; Defined at:
  1199 ;;		line 167 in file "main.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1213 ;;      Params:         0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0
  1215 ;;      Temps:          0       4       0       0       0
  1216 ;;      Totals:         0       4       0       0       0
  1217 ;;Total ram usage:        4 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; Hardware stack levels required when called: 3
  1220 ;; This function calls:
  1221 ;;		___awdiv
  1222 ;;		___bmul
  1223 ;;		___wmul
  1224 ;;		_num_ascii
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           
  1231                           ;psect for function _LECT1
  1232  0145                     _LECT1:
  1233  0145                     l1727:	
  1234                           ;incstack = 0
  1235                           ; Regs used in _LECT1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1236                           
  1237                           
  1238                           ;main.c: 168:     Cen1 = CONT/100;
  1239  0145  3064               	movlw	100
  1240  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0148  00BD               	movwf	___awdiv@divisor
  1243  0149  3000               	movlw	0
  1244  014A  00BE               	movwf	___awdiv@divisor+1
  1245  014B  0877               	movf	_CONT,w
  1246  014C  00C6               	movwf	??_LECT1
  1247  014D  01C7               	clrf	??_LECT1+1
  1248  014E  0846               	movf	??_LECT1,w
  1249  014F  00BF               	movwf	___awdiv@dividend
  1250  0150  0847               	movf	??_LECT1+1,w
  1251  0151  00C0               	movwf	___awdiv@dividend+1
  1252  0152  120A  118A  21C5  120A  118A  	fcall	___awdiv
  1253  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0159  083D               	movf	?___awdiv,w
  1256  015A  00C8               	movwf	??_LECT1+2
  1257  015B  0848               	movf	??_LECT1+2,w
  1258  015C  00B8               	movwf	_Cen1
  1259                           
  1260                           ;main.c: 169:     Dec1 = (CONT-Cen1*100)/10;
  1261  015D  300A               	movlw	10
  1262  015E  00BD               	movwf	___awdiv@divisor
  1263  015F  3000               	movlw	0
  1264  0160  00BE               	movwf	___awdiv@divisor+1
  1265  0161  0838               	movf	_Cen1,w
  1266  0162  00C6               	movwf	??_LECT1
  1267  0163  01C7               	clrf	??_LECT1+1
  1268  0164  0846               	movf	??_LECT1,w
  1269  0165  00B9               	movwf	___wmul@multiplier
  1270  0166  0847               	movf	??_LECT1+1,w
  1271  0167  00BA               	movwf	___wmul@multiplier+1
  1272  0168  309C               	movlw	156
  1273  0169  00BB               	movwf	___wmul@multiplicand
  1274  016A  30FF               	movlw	255
  1275  016B  00BC               	movwf	___wmul@multiplicand+1
  1276  016C  120A  118A  235A  120A  118A  	fcall	___wmul
  1277  0171  0877               	movf	_CONT,w
  1278  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0174  0739               	addwf	?___wmul,w
  1281  0175  00BF               	movwf	___awdiv@dividend
  1282  0176  083A               	movf	?___wmul+1,w
  1283  0177  1803               	skipnc
  1284  0178  0A3A               	incf	?___wmul+1,w
  1285  0179  00C0               	movwf	___awdiv@dividend+1
  1286  017A  120A  118A  21C5  120A  118A  	fcall	___awdiv
  1287  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1288  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0181  083D               	movf	?___awdiv,w
  1290  0182  00C8               	movwf	??_LECT1+2
  1291  0183  0848               	movf	??_LECT1+2,w
  1292  0184  00B7               	movwf	_Dec1
  1293                           
  1294                           ;main.c: 170:     Un1 = (CONT-Cen1*100-Dec1*10);
  1295  0185  309C               	movlw	156
  1296  0186  00C6               	movwf	??_LECT1
  1297  0187  0846               	movf	??_LECT1,w
  1298  0188  00F4               	movwf	___bmul@multiplicand
  1299  0189  0838               	movf	_Cen1,w
  1300  018A  120A  118A  2381  120A  118A  	fcall	___bmul
  1301  018F  1283               	bcf	3,5	;RP0=0, select bank0
  1302  0190  1303               	bcf	3,6	;RP1=0, select bank0
  1303  0191  00C7               	movwf	??_LECT1+1
  1304  0192  30F6               	movlw	246
  1305  0193  00C8               	movwf	??_LECT1+2
  1306  0194  0848               	movf	??_LECT1+2,w
  1307  0195  00F4               	movwf	___bmul@multiplicand
  1308  0196  0837               	movf	_Dec1,w
  1309  0197  120A  118A  2381  120A  118A  	fcall	___bmul
  1310  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1311  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1312  019E  0747               	addwf	??_LECT1+1,w
  1313  019F  0777               	addwf	_CONT,w
  1314  01A0  00C9               	movwf	??_LECT1+3
  1315  01A1  0849               	movf	??_LECT1+3,w
  1316  01A2  00B6               	movwf	_Un1
  1317  01A3                     l1729:
  1318                           
  1319                           ;main.c: 171:     AC1 = num_ascii(Cen1);
  1320  01A3  0838               	movf	_Cen1,w
  1321  01A4  120A  118A  2281  120A  118A  	fcall	_num_ascii
  1322  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1323  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1324  01AB  00C6               	movwf	??_LECT1
  1325  01AC  0846               	movf	??_LECT1,w
  1326  01AD  00B5               	movwf	_AC1
  1327  01AE                     l1731:
  1328                           
  1329                           ;main.c: 172:     AD1 = num_ascii(Dec1);
  1330  01AE  0837               	movf	_Dec1,w
  1331  01AF  120A  118A  2281  120A  118A  	fcall	_num_ascii
  1332  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1333  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1334  01B6  00C6               	movwf	??_LECT1
  1335  01B7  0846               	movf	??_LECT1,w
  1336  01B8  00B4               	movwf	_AD1
  1337  01B9                     l1733:
  1338                           
  1339                           ;main.c: 173:     AU1 = num_ascii(Un1);
  1340  01B9  0836               	movf	_Un1,w
  1341  01BA  120A  118A  2281  120A  118A  	fcall	_num_ascii
  1342  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1343  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1344  01C1  00C6               	movwf	??_LECT1
  1345  01C2  0846               	movf	??_LECT1,w
  1346  01C3  00B3               	movwf	_AU1
  1347  01C4                     l152:
  1348  01C4  0008               	return
  1349  01C5                     __end_of_LECT1:
  1350                           
  1351                           	psect	text5
  1352  0281                     __ptext5:	
  1353 ;; *************** function _num_ascii *****************
  1354 ;; Defined at:
  1355 ;;		line 3 in file "ASCII.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  num             1    wreg     unsigned char 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  num             1    0[BANK0 ] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      unsigned char 
  1362 ;; Registers used:
  1363 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         0       1       0       0       0
  1371 ;;      Temps:          2       0       0       0       0
  1372 ;;      Totals:         2       1       0       0       0
  1373 ;;Total ram usage:        3 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; Hardware stack levels required when called: 2
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_LECT1
  1380 ;;		_LECT2
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           
  1385                           ;psect for function _num_ascii
  1386  0281                     _num_ascii:
  1387                           
  1388                           ;incstack = 0
  1389                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  1390                           ;num_ascii@num stored from wreg
  1391  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1392  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1393  0283  00B9               	movwf	num_ascii@num
  1394  0284                     l1573:
  1395                           
  1396                           ;ASCII.c: 4:  switch(num){
  1397  0284  2A99               	goto	l1643
  1398  0285                     l1575:
  1399                           
  1400                           ;ASCII.c: 6:   return 0x30;
  1401  0285  3030               	movlw	48
  1402  0286  2AC1               	goto	l177
  1403  0287                     l1587:
  1404                           
  1405                           ;ASCII.c: 14:   return 0x31;
  1406  0287  3031               	movlw	49
  1407  0288  2AC1               	goto	l177
  1408  0289                     l1593:
  1409                           
  1410                           ;ASCII.c: 18:   return 0x32;
  1411  0289  3032               	movlw	50
  1412  028A  2AC1               	goto	l177
  1413  028B                     l1599:
  1414                           
  1415                           ;ASCII.c: 22:   return 0x33;
  1416  028B  3033               	movlw	51
  1417  028C  2AC1               	goto	l177
  1418  028D                     l1605:
  1419                           
  1420                           ;ASCII.c: 26:   return 0x34;
  1421  028D  3034               	movlw	52
  1422  028E  2AC1               	goto	l177
  1423  028F                     l1611:
  1424                           
  1425                           ;ASCII.c: 30:   return 0x35;
  1426  028F  3035               	movlw	53
  1427  0290  2AC1               	goto	l177
  1428  0291                     l1617:
  1429                           
  1430                           ;ASCII.c: 34:   return 0x36;
  1431  0291  3036               	movlw	54
  1432  0292  2AC1               	goto	l177
  1433  0293                     l1623:
  1434                           
  1435                           ;ASCII.c: 38:   return 0x37;
  1436  0293  3037               	movlw	55
  1437  0294  2AC1               	goto	l177
  1438  0295                     l1629:
  1439                           
  1440                           ;ASCII.c: 42:   return 0x38;
  1441  0295  3038               	movlw	56
  1442  0296  2AC1               	goto	l177
  1443  0297                     l1635:
  1444                           
  1445                           ;ASCII.c: 46:   return 0x39;
  1446  0297  3039               	movlw	57
  1447  0298  2AC1               	goto	l177
  1448  0299                     l1643:
  1449  0299  0839               	movf	num_ascii@num,w
  1450  029A  00F4               	movwf	??_num_ascii
  1451  029B  01F5               	clrf	??_num_ascii+1
  1452                           
  1453                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1454                           ; Switch size 1, requested type "simple"
  1455                           ; Number of cases is 1, Range of values is 0 to 0
  1456                           ; switch strategies available:
  1457                           ; Name         Instructions Cycles
  1458                           ; simple_byte            4     3 (average)
  1459                           ; direct_byte           11     8 (fixed)
  1460                           ; jumptable            260     6 (fixed)
  1461                           ;	Chosen strategy is simple_byte
  1462  029C  0875               	movf	??_num_ascii+1,w
  1463  029D  3A00               	xorlw	0	; case 0
  1464  029E  1903               	skipnz
  1465  029F  2AA1               	goto	l1791
  1466  02A0  2A85               	goto	l1575
  1467  02A1                     l1791:
  1468                           
  1469                           ; Switch size 1, requested type "simple"
  1470                           ; Number of cases is 10, Range of values is 0 to 9
  1471                           ; switch strategies available:
  1472                           ; Name         Instructions Cycles
  1473                           ; simple_byte           31    16 (average)
  1474                           ; direct_byte           38     8 (fixed)
  1475                           ; jumptable            260     6 (fixed)
  1476                           ;	Chosen strategy is simple_byte
  1477  02A1  0874               	movf	??_num_ascii,w
  1478  02A2  3A00               	xorlw	0	; case 0
  1479  02A3  1903               	skipnz
  1480  02A4  2A85               	goto	l1575
  1481  02A5  3A01               	xorlw	1	; case 1
  1482  02A6  1903               	skipnz
  1483  02A7  2A87               	goto	l1587
  1484  02A8  3A03               	xorlw	3	; case 2
  1485  02A9  1903               	skipnz
  1486  02AA  2A89               	goto	l1593
  1487  02AB  3A01               	xorlw	1	; case 3
  1488  02AC  1903               	skipnz
  1489  02AD  2A8B               	goto	l1599
  1490  02AE  3A07               	xorlw	7	; case 4
  1491  02AF  1903               	skipnz
  1492  02B0  2A8D               	goto	l1605
  1493  02B1  3A01               	xorlw	1	; case 5
  1494  02B2  1903               	skipnz
  1495  02B3  2A8F               	goto	l1611
  1496  02B4  3A03               	xorlw	3	; case 6
  1497  02B5  1903               	skipnz
  1498  02B6  2A91               	goto	l1617
  1499  02B7  3A01               	xorlw	1	; case 7
  1500  02B8  1903               	skipnz
  1501  02B9  2A93               	goto	l1623
  1502  02BA  3A0F               	xorlw	15	; case 8
  1503  02BB  1903               	skipnz
  1504  02BC  2A95               	goto	l1629
  1505  02BD  3A01               	xorlw	1	; case 9
  1506  02BE  1903               	skipnz
  1507  02BF  2A97               	goto	l1635
  1508  02C0  2A85               	goto	l1575
  1509  02C1                     l177:
  1510  02C1  0008               	return
  1511  02C2                     __end_of_num_ascii:
  1512                           
  1513                           	psect	text6
  1514  035A                     __ptext6:	
  1515 ;; *************** function ___wmul *****************
  1516 ;; Defined at:
  1517 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1520 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  product         2    4[COMMON] unsigned int 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  2    0[BANK0 ] unsigned int 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2, status,0
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1532 ;;      Params:         0       4       0       0       0
  1533 ;;      Locals:         2       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0
  1535 ;;      Totals:         2       4       0       0       0
  1536 ;;Total ram usage:        6 bytes
  1537 ;; Hardware stack levels used: 1
  1538 ;; Hardware stack levels required when called: 2
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_LECT1
  1543 ;;		_LECT2
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function ___wmul
  1549  035A                     ___wmul:
  1550  035A                     l1651:	
  1551                           ;incstack = 0
  1552                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1553                           
  1554  035A  01F4               	clrf	___wmul@product
  1555  035B  01F5               	clrf	___wmul@product+1
  1556  035C                     l1653:
  1557  035C  1283               	bcf	3,5	;RP0=0, select bank0
  1558  035D  1303               	bcf	3,6	;RP1=0, select bank0
  1559  035E  1C39               	btfss	___wmul@multiplier,0
  1560  035F  2B61               	goto	u871
  1561  0360  2B62               	goto	u870
  1562  0361                     u871:
  1563  0361  2B68               	goto	l303
  1564  0362                     u870:
  1565  0362                     l1655:
  1566  0362  083B               	movf	___wmul@multiplicand,w
  1567  0363  07F4               	addwf	___wmul@product,f
  1568  0364  1803               	skipnc
  1569  0365  0AF5               	incf	___wmul@product+1,f
  1570  0366  083C               	movf	___wmul@multiplicand+1,w
  1571  0367  07F5               	addwf	___wmul@product+1,f
  1572  0368                     l303:
  1573  0368  3001               	movlw	1
  1574  0369                     u885:
  1575  0369  1003               	clrc
  1576  036A  0DBB               	rlf	___wmul@multiplicand,f
  1577  036B  0DBC               	rlf	___wmul@multiplicand+1,f
  1578  036C  3EFF               	addlw	-1
  1579  036D  1D03               	skipz
  1580  036E  2B69               	goto	u885
  1581  036F                     l1657:
  1582  036F  3001               	movlw	1
  1583  0370                     u895:
  1584  0370  1003               	clrc
  1585  0371  0CBA               	rrf	___wmul@multiplier+1,f
  1586  0372  0CB9               	rrf	___wmul@multiplier,f
  1587  0373  3EFF               	addlw	-1
  1588  0374  1D03               	skipz
  1589  0375  2B70               	goto	u895
  1590  0376                     l1659:
  1591  0376  0839               	movf	___wmul@multiplier,w
  1592  0377  043A               	iorwf	___wmul@multiplier+1,w
  1593  0378  1D03               	btfss	3,2
  1594  0379  2B7B               	goto	u901
  1595  037A  2B7C               	goto	u900
  1596  037B                     u901:
  1597  037B  2B5C               	goto	l1653
  1598  037C                     u900:
  1599  037C                     l1661:
  1600  037C  0875               	movf	___wmul@product+1,w
  1601  037D  00BA               	movwf	?___wmul+1
  1602  037E  0874               	movf	___wmul@product,w
  1603  037F  00B9               	movwf	?___wmul
  1604  0380                     l305:
  1605  0380  0008               	return
  1606  0381                     __end_of___wmul:
  1607                           
  1608                           	psect	text7
  1609  01C5                     __ptext7:	
  1610 ;; *************** function ___awdiv *****************
  1611 ;; Defined at:
  1612 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  divisor         2    4[BANK0 ] int 
  1615 ;;  dividend        2    6[BANK0 ] int 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  quotient        2   11[BANK0 ] int 
  1618 ;;  sign            1   10[BANK0 ] unsigned char 
  1619 ;;  counter         1    9[BANK0 ] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  2    4[BANK0 ] int 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       4       0       0       0
  1630 ;;      Locals:         0       4       0       0       0
  1631 ;;      Temps:          0       1       0       0       0
  1632 ;;      Totals:         0       9       0       0       0
  1633 ;;Total ram usage:        9 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; Hardware stack levels required when called: 2
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_LECT1
  1640 ;;		_LECT2
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function ___awdiv
  1646  01C5                     ___awdiv:
  1647  01C5                     l1311:	
  1648                           ;incstack = 0
  1649                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1650                           
  1651  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1652  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1653  01C7  01C3               	clrf	___awdiv@sign
  1654  01C8                     l1313:
  1655  01C8  1FBE               	btfss	___awdiv@divisor+1,7
  1656  01C9  29CB               	goto	u501
  1657  01CA  29CC               	goto	u500
  1658  01CB                     u501:
  1659  01CB  29D3               	goto	l1319
  1660  01CC                     u500:
  1661  01CC                     l1315:
  1662  01CC  09BD               	comf	___awdiv@divisor,f
  1663  01CD  09BE               	comf	___awdiv@divisor+1,f
  1664  01CE  0ABD               	incf	___awdiv@divisor,f
  1665  01CF  1903               	skipnz
  1666  01D0  0ABE               	incf	___awdiv@divisor+1,f
  1667  01D1                     l1317:
  1668  01D1  01C3               	clrf	___awdiv@sign
  1669  01D2  0AC3               	incf	___awdiv@sign,f
  1670  01D3                     l1319:
  1671  01D3  1FC0               	btfss	___awdiv@dividend+1,7
  1672  01D4  29D6               	goto	u511
  1673  01D5  29D7               	goto	u510
  1674  01D6                     u511:
  1675  01D6  29E0               	goto	l1325
  1676  01D7                     u510:
  1677  01D7                     l1321:
  1678  01D7  09BF               	comf	___awdiv@dividend,f
  1679  01D8  09C0               	comf	___awdiv@dividend+1,f
  1680  01D9  0ABF               	incf	___awdiv@dividend,f
  1681  01DA  1903               	skipnz
  1682  01DB  0AC0               	incf	___awdiv@dividend+1,f
  1683  01DC                     l1323:
  1684  01DC  3001               	movlw	1
  1685  01DD  00C1               	movwf	??___awdiv
  1686  01DE  0841               	movf	??___awdiv,w
  1687  01DF  06C3               	xorwf	___awdiv@sign,f
  1688  01E0                     l1325:
  1689  01E0  01C4               	clrf	___awdiv@quotient
  1690  01E1  01C5               	clrf	___awdiv@quotient+1
  1691  01E2                     l1327:
  1692  01E2  083D               	movf	___awdiv@divisor,w
  1693  01E3  043E               	iorwf	___awdiv@divisor+1,w
  1694  01E4  1903               	btfsc	3,2
  1695  01E5  29E7               	goto	u521
  1696  01E6  29E8               	goto	u520
  1697  01E7                     u521:
  1698  01E7  2A1F               	goto	l1347
  1699  01E8                     u520:
  1700  01E8                     l1329:
  1701  01E8  01C2               	clrf	___awdiv@counter
  1702  01E9  0AC2               	incf	___awdiv@counter,f
  1703  01EA  29F6               	goto	l1335
  1704  01EB                     l1331:
  1705  01EB  3001               	movlw	1
  1706  01EC                     u535:
  1707  01EC  1003               	clrc
  1708  01ED  0DBD               	rlf	___awdiv@divisor,f
  1709  01EE  0DBE               	rlf	___awdiv@divisor+1,f
  1710  01EF  3EFF               	addlw	-1
  1711  01F0  1D03               	skipz
  1712  01F1  29EC               	goto	u535
  1713  01F2                     l1333:
  1714  01F2  3001               	movlw	1
  1715  01F3  00C1               	movwf	??___awdiv
  1716  01F4  0841               	movf	??___awdiv,w
  1717  01F5  07C2               	addwf	___awdiv@counter,f
  1718  01F6                     l1335:
  1719  01F6  1FBE               	btfss	___awdiv@divisor+1,7
  1720  01F7  29F9               	goto	u541
  1721  01F8  29FA               	goto	u540
  1722  01F9                     u541:
  1723  01F9  29EB               	goto	l1331
  1724  01FA                     u540:
  1725  01FA                     l1337:
  1726  01FA  3001               	movlw	1
  1727  01FB                     u555:
  1728  01FB  1003               	clrc
  1729  01FC  0DC4               	rlf	___awdiv@quotient,f
  1730  01FD  0DC5               	rlf	___awdiv@quotient+1,f
  1731  01FE  3EFF               	addlw	-1
  1732  01FF  1D03               	skipz
  1733  0200  29FB               	goto	u555
  1734  0201  083E               	movf	___awdiv@divisor+1,w
  1735  0202  0240               	subwf	___awdiv@dividend+1,w
  1736  0203  1D03               	skipz
  1737  0204  2A07               	goto	u565
  1738  0205  083D               	movf	___awdiv@divisor,w
  1739  0206  023F               	subwf	___awdiv@dividend,w
  1740  0207                     u565:
  1741  0207  1C03               	skipc
  1742  0208  2A0A               	goto	u561
  1743  0209  2A0B               	goto	u560
  1744  020A                     u561:
  1745  020A  2A12               	goto	l1343
  1746  020B                     u560:
  1747  020B                     l1339:
  1748  020B  083D               	movf	___awdiv@divisor,w
  1749  020C  02BF               	subwf	___awdiv@dividend,f
  1750  020D  083E               	movf	___awdiv@divisor+1,w
  1751  020E  1C03               	skipc
  1752  020F  03C0               	decf	___awdiv@dividend+1,f
  1753  0210  02C0               	subwf	___awdiv@dividend+1,f
  1754  0211                     l1341:
  1755  0211  1444               	bsf	___awdiv@quotient,0
  1756  0212                     l1343:
  1757  0212  3001               	movlw	1
  1758  0213                     u575:
  1759  0213  1003               	clrc
  1760  0214  0CBE               	rrf	___awdiv@divisor+1,f
  1761  0215  0CBD               	rrf	___awdiv@divisor,f
  1762  0216  3EFF               	addlw	-1
  1763  0217  1D03               	skipz
  1764  0218  2A13               	goto	u575
  1765  0219                     l1345:
  1766  0219  3001               	movlw	1
  1767  021A  02C2               	subwf	___awdiv@counter,f
  1768  021B  1D03               	btfss	3,2
  1769  021C  2A1E               	goto	u581
  1770  021D  2A1F               	goto	u580
  1771  021E                     u581:
  1772  021E  29FA               	goto	l1337
  1773  021F                     u580:
  1774  021F                     l1347:
  1775  021F  0843               	movf	___awdiv@sign,w
  1776  0220  1903               	btfsc	3,2
  1777  0221  2A23               	goto	u591
  1778  0222  2A24               	goto	u590
  1779  0223                     u591:
  1780  0223  2A29               	goto	l1351
  1781  0224                     u590:
  1782  0224                     l1349:
  1783  0224  09C4               	comf	___awdiv@quotient,f
  1784  0225  09C5               	comf	___awdiv@quotient+1,f
  1785  0226  0AC4               	incf	___awdiv@quotient,f
  1786  0227  1903               	skipnz
  1787  0228  0AC5               	incf	___awdiv@quotient+1,f
  1788  0229                     l1351:
  1789  0229  0845               	movf	___awdiv@quotient+1,w
  1790  022A  00BE               	movwf	?___awdiv+1
  1791  022B  0844               	movf	___awdiv@quotient,w
  1792  022C  00BD               	movwf	?___awdiv
  1793  022D                     l456:
  1794  022D  0008               	return
  1795  022E                     __end_of___awdiv:
  1796                           
  1797                           	psect	text8
  1798  0026                     __ptext8:	
  1799 ;; *************** function _CONTADOR *****************
  1800 ;; Defined at:
  1801 ;;		line 200 in file "main.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0, pclath, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1815 ;;      Params:         0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0
  1817 ;;      Temps:          0       4       0       0       0
  1818 ;;      Totals:         0       4       0       0       0
  1819 ;;Total ram usage:        4 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 3
  1822 ;; This function calls:
  1823 ;;		___bmul
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           
  1830                           ;psect for function _CONTADOR
  1831  0026                     _CONTADOR:
  1832  0026                     l1679:	
  1833                           ;incstack = 0
  1834                           ; Regs used in _CONTADOR: [wreg+status,2+status,0+pclath+cstack]
  1835                           
  1836                           
  1837                           ;main.c: 218:     if(47<signo && signo<58 && en==1){
  1838  0026  3030               	movlw	48
  1839  0027  0278               	subwf	_signo,w
  1840  0028  1C03               	skipc
  1841  0029  282B               	goto	u931
  1842  002A  282C               	goto	u930
  1843  002B                     u931:
  1844  002B  288C               	goto	l1703
  1845  002C                     u930:
  1846  002C                     l1681:
  1847  002C  303A               	movlw	58
  1848  002D  0278               	subwf	_signo,w
  1849  002E  1803               	skipnc
  1850  002F  2831               	goto	u941
  1851  0030  2832               	goto	u940
  1852  0031                     u941:
  1853  0031  288C               	goto	l1703
  1854  0032                     u940:
  1855  0032                     l1683:
  1856  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1858  0034  0321               	decf	_en,w
  1859  0035  1D03               	btfss	3,2
  1860  0036  2838               	goto	u951
  1861  0037  2839               	goto	u950
  1862  0038                     u951:
  1863  0038  288C               	goto	l1703
  1864  0039                     u950:
  1865  0039                     l1685:
  1866                           
  1867                           ;main.c: 219:         cc++;
  1868  0039  3001               	movlw	1
  1869  003A  00BB               	movwf	??_CONTADOR
  1870  003B  083B               	movf	??_CONTADOR,w
  1871  003C  07F6               	addwf	_cc,f
  1872  003D                     l1687:
  1873                           
  1874                           ;main.c: 220:         en=0;
  1875  003D  01A1               	clrf	_en
  1876  003E                     l1689:
  1877                           
  1878                           ;main.c: 221:         if (cc==1){
  1879  003E  0376               	decf	_cc,w
  1880  003F  1D03               	btfss	3,2
  1881  0040  2842               	goto	u961
  1882  0041  2843               	goto	u960
  1883  0042                     u961:
  1884  0042  2848               	goto	l166
  1885  0043                     u960:
  1886  0043                     l1691:
  1887                           
  1888                           ;main.c: 222:             A = signo-48;
  1889  0043  0878               	movf	_signo,w
  1890  0044  3ED0               	addlw	208
  1891  0045  00BB               	movwf	??_CONTADOR
  1892  0046  083B               	movf	??_CONTADOR,w
  1893  0047  00A6               	movwf	_A
  1894  0048                     l166:	
  1895                           ;main.c: 223:         }
  1896                           
  1897                           
  1898                           ;main.c: 224:         if (cc==2){
  1899  0048  3002               	movlw	2
  1900  0049  0676               	xorwf	_cc,w
  1901  004A  1D03               	btfss	3,2
  1902  004B  284D               	goto	u971
  1903  004C  284E               	goto	u970
  1904  004D                     u971:
  1905  004D  2863               	goto	l1697
  1906  004E                     u970:
  1907  004E                     l1693:
  1908                           
  1909                           ;main.c: 225:             B = signo-48;
  1910  004E  0878               	movf	_signo,w
  1911  004F  3ED0               	addlw	208
  1912  0050  00BB               	movwf	??_CONTADOR
  1913  0051  083B               	movf	??_CONTADOR,w
  1914  0052  00A5               	movwf	_B
  1915  0053                     l1695:
  1916                           
  1917                           ;main.c: 226:             AB = A*10+B;
  1918  0053  300A               	movlw	10
  1919  0054  00BB               	movwf	??_CONTADOR
  1920  0055  083B               	movf	??_CONTADOR,w
  1921  0056  00F4               	movwf	___bmul@multiplicand
  1922  0057  0826               	movf	_A,w
  1923  0058  120A  118A  2381  120A  118A  	fcall	___bmul
  1924  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1925  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1926  005F  0725               	addwf	_B,w
  1927  0060  00BC               	movwf	??_CONTADOR+1
  1928  0061  083C               	movf	??_CONTADOR+1,w
  1929  0062  00A3               	movwf	_AB
  1930  0063                     l1697:
  1931                           
  1932                           ;main.c: 228:         if (cc==3){
  1933  0063  3003               	movlw	3
  1934  0064  0676               	xorwf	_cc,w
  1935  0065  1D03               	btfss	3,2
  1936  0066  2868               	goto	u981
  1937  0067  2869               	goto	u980
  1938  0068                     u981:
  1939  0068  288C               	goto	l1703
  1940  0069                     u980:
  1941  0069                     l1699:
  1942                           
  1943                           ;main.c: 229:             C = signo-48;
  1944  0069  0878               	movf	_signo,w
  1945  006A  3ED0               	addlw	208
  1946  006B  00BB               	movwf	??_CONTADOR
  1947  006C  083B               	movf	??_CONTADOR,w
  1948  006D  00A4               	movwf	_C
  1949  006E                     l1701:
  1950                           
  1951                           ;main.c: 230:             ABC = A*100+B*10+C;
  1952  006E  300A               	movlw	10
  1953  006F  00BB               	movwf	??_CONTADOR
  1954  0070  083B               	movf	??_CONTADOR,w
  1955  0071  00F4               	movwf	___bmul@multiplicand
  1956  0072  0825               	movf	_B,w
  1957  0073  120A  118A  2381  120A  118A  	fcall	___bmul
  1958  0078  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0079  1303               	bcf	3,6	;RP1=0, select bank0
  1960  007A  00BC               	movwf	??_CONTADOR+1
  1961  007B  3064               	movlw	100
  1962  007C  00BD               	movwf	??_CONTADOR+2
  1963  007D  083D               	movf	??_CONTADOR+2,w
  1964  007E  00F4               	movwf	___bmul@multiplicand
  1965  007F  0826               	movf	_A,w
  1966  0080  120A  118A  2381  120A  118A  	fcall	___bmul
  1967  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1969  0087  073C               	addwf	??_CONTADOR+1,w
  1970  0088  0724               	addwf	_C,w
  1971  0089  00BE               	movwf	??_CONTADOR+3
  1972  008A  083E               	movf	??_CONTADOR+3,w
  1973  008B  00A2               	movwf	_ABC
  1974  008C                     l1703:
  1975                           
  1976                           ;main.c: 233:     if (signo==13 && cc==1){
  1977  008C  300D               	movlw	13
  1978  008D  0678               	xorwf	_signo,w
  1979  008E  1D03               	btfss	3,2
  1980  008F  2891               	goto	u991
  1981  0090  2892               	goto	u990
  1982  0091                     u991:
  1983  0091  289E               	goto	l1711
  1984  0092                     u990:
  1985  0092                     l1705:
  1986  0092  0376               	decf	_cc,w
  1987  0093  1D03               	btfss	3,2
  1988  0094  2896               	goto	u1001
  1989  0095  2897               	goto	u1000
  1990  0096                     u1001:
  1991  0096  289E               	goto	l1711
  1992  0097                     u1000:
  1993  0097                     l1707:
  1994                           
  1995                           ;main.c: 234:         cc = 0;
  1996  0097  01F6               	clrf	_cc
  1997  0098                     l1709:
  1998                           
  1999                           ;main.c: 235:         CONT=A;
  2000  0098  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0099  1303               	bcf	3,6	;RP1=0, select bank0
  2002  009A  0826               	movf	_A,w
  2003  009B  00BB               	movwf	??_CONTADOR
  2004  009C  083B               	movf	??_CONTADOR,w
  2005  009D  00F7               	movwf	_CONT
  2006  009E                     l1711:
  2007                           
  2008                           ;main.c: 237:     if (signo==13 && cc==2){
  2009  009E  300D               	movlw	13
  2010  009F  0678               	xorwf	_signo,w
  2011  00A0  1D03               	btfss	3,2
  2012  00A1  28A3               	goto	u1011
  2013  00A2  28A4               	goto	u1010
  2014  00A3                     u1011:
  2015  00A3  28B1               	goto	l1719
  2016  00A4                     u1010:
  2017  00A4                     l1713:
  2018  00A4  3002               	movlw	2
  2019  00A5  0676               	xorwf	_cc,w
  2020  00A6  1D03               	btfss	3,2
  2021  00A7  28A9               	goto	u1021
  2022  00A8  28AA               	goto	u1020
  2023  00A9                     u1021:
  2024  00A9  28B1               	goto	l1719
  2025  00AA                     u1020:
  2026  00AA                     l1715:
  2027                           
  2028                           ;main.c: 238:         cc = 0;
  2029  00AA  01F6               	clrf	_cc
  2030  00AB                     l1717:
  2031                           
  2032                           ;main.c: 239:         CONT=AB;
  2033  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  2034  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  2035  00AD  0823               	movf	_AB,w
  2036  00AE  00BB               	movwf	??_CONTADOR
  2037  00AF  083B               	movf	??_CONTADOR,w
  2038  00B0  00F7               	movwf	_CONT
  2039  00B1                     l1719:
  2040                           
  2041                           ;main.c: 241:     if (signo==13 && cc==3){
  2042  00B1  300D               	movlw	13
  2043  00B2  0678               	xorwf	_signo,w
  2044  00B3  1D03               	btfss	3,2
  2045  00B4  28B6               	goto	u1031
  2046  00B5  28B7               	goto	u1030
  2047  00B6                     u1031:
  2048  00B6  28C4               	goto	l172
  2049  00B7                     u1030:
  2050  00B7                     l1721:
  2051  00B7  3003               	movlw	3
  2052  00B8  0676               	xorwf	_cc,w
  2053  00B9  1D03               	btfss	3,2
  2054  00BA  28BC               	goto	u1041
  2055  00BB  28BD               	goto	u1040
  2056  00BC                     u1041:
  2057  00BC  28C4               	goto	l172
  2058  00BD                     u1040:
  2059  00BD                     l1723:
  2060                           
  2061                           ;main.c: 242:         cc = 0;
  2062  00BD  01F6               	clrf	_cc
  2063  00BE                     l1725:
  2064                           
  2065                           ;main.c: 243:         CONT=ABC;
  2066  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  2067  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  2068  00C0  0822               	movf	_ABC,w
  2069  00C1  00BB               	movwf	??_CONTADOR
  2070  00C2  083B               	movf	??_CONTADOR,w
  2071  00C3  00F7               	movwf	_CONT
  2072  00C4                     l172:
  2073  00C4  0008               	return
  2074  00C5                     __end_of_CONTADOR:
  2075                           
  2076                           	psect	text9
  2077  0381                     __ptext9:	
  2078 ;; *************** function ___bmul *****************
  2079 ;; Defined at:
  2080 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  multiplier      1    wreg     unsigned char 
  2083 ;;  multiplicand    1    4[COMMON] unsigned char 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  multiplier      1    1[BANK0 ] unsigned char 
  2086 ;;  product         1    0[BANK0 ] unsigned char 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      unsigned char 
  2089 ;; Registers used:
  2090 ;;		wreg, status,2, status,0
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2096 ;;      Params:         1       0       0       0       0
  2097 ;;      Locals:         0       2       0       0       0
  2098 ;;      Temps:          1       0       0       0       0
  2099 ;;      Totals:         2       2       0       0       0
  2100 ;;Total ram usage:        4 bytes
  2101 ;; Hardware stack levels used: 1
  2102 ;; Hardware stack levels required when called: 2
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_LECT1
  2107 ;;		_LECT2
  2108 ;;		_CONTADOR
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           
  2113                           ;psect for function ___bmul
  2114  0381                     ___bmul:
  2115                           
  2116                           ;incstack = 0
  2117                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2118                           ;___bmul@multiplier stored from wreg
  2119  0381  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0382  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0383  00BA               	movwf	___bmul@multiplier
  2122  0384                     l1665:
  2123  0384  01B9               	clrf	___bmul@product
  2124  0385                     l1667:
  2125  0385  1C3A               	btfss	___bmul@multiplier,0
  2126  0386  2B88               	goto	u911
  2127  0387  2B89               	goto	u910
  2128  0388                     u911:
  2129  0388  2B8D               	goto	l1671
  2130  0389                     u910:
  2131  0389                     l1669:
  2132  0389  0874               	movf	___bmul@multiplicand,w
  2133  038A  00F5               	movwf	??___bmul
  2134  038B  0875               	movf	??___bmul,w
  2135  038C  07B9               	addwf	___bmul@product,f
  2136  038D                     l1671:
  2137  038D  1003               	clrc
  2138  038E  0DF4               	rlf	___bmul@multiplicand,f
  2139  038F                     l1673:
  2140  038F  1003               	clrc
  2141  0390  0CBA               	rrf	___bmul@multiplier,f
  2142  0391  083A               	movf	___bmul@multiplier,w
  2143  0392  1D03               	btfss	3,2
  2144  0393  2B95               	goto	u921
  2145  0394  2B96               	goto	u920
  2146  0395                     u921:
  2147  0395  2B85               	goto	l1667
  2148  0396                     u920:
  2149  0396                     l1675:
  2150  0396  0839               	movf	___bmul@product,w
  2151  0397                     l329:
  2152  0397  0008               	return
  2153  0398                     __end_of___bmul:
  2154                           
  2155                           	psect	text10
  2156  022E                     __ptext10:	
  2157 ;; *************** function _ISR *****************
  2158 ;; Defined at:
  2159 ;;		line 75 in file "main.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;		None
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0, pclath, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2173 ;;      Params:         0       0       0       0       0
  2174 ;;      Locals:         0       0       0       0       0
  2175 ;;      Temps:          3       0       0       0       0
  2176 ;;      Totals:         3       0       0       0       0
  2177 ;;Total ram usage:        3 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 1
  2180 ;; This function calls:
  2181 ;;		_envio
  2182 ;; This function is called by:
  2183 ;;		Interrupt level 1
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           
  2188                           ;psect for function _ISR
  2189  022E                     _ISR:
  2190  022E                     i1l1495:
  2191                           
  2192                           ;main.c: 76:     if (PIR1bits.RCIF == 1){
  2193  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2194  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2195  0230  1E8C               	btfss	12,5	;volatile
  2196  0231  2A33               	goto	u76_21
  2197  0232  2A34               	goto	u76_20
  2198  0233                     u76_21:
  2199  0233  2A38               	goto	i1l1499
  2200  0234                     u76_20:
  2201  0234                     i1l1497:
  2202                           
  2203                           ;main.c: 77:         signo = RCREG;
  2204  0234  081A               	movf	26,w	;volatile
  2205  0235  00F1               	movwf	??_ISR
  2206  0236  0871               	movf	??_ISR,w
  2207  0237  00F8               	movwf	_signo
  2208  0238                     i1l1499:
  2209                           
  2210                           ;main.c: 79:     if (PIR1bits.TXIF == 1){
  2211  0238  1E0C               	btfss	12,4	;volatile
  2212  0239  2A3B               	goto	u77_21
  2213  023A  2A3C               	goto	u77_20
  2214  023B                     u77_21:
  2215  023B  2A41               	goto	i1l1503
  2216  023C                     u77_20:
  2217  023C                     i1l1501:
  2218                           
  2219                           ;main.c: 80:         envio();
  2220  023C  120A  118A  232D  120A  118A  	fcall	_envio
  2221  0241                     i1l1503:
  2222                           
  2223                           ;main.c: 82:     if (INTCONbits.RBIF == 1){
  2224  0241  1C0B               	btfss	11,0	;volatile
  2225  0242  2A44               	goto	u78_21
  2226  0243  2A45               	goto	u78_20
  2227  0244                     u78_21:
  2228  0244  2A7A               	goto	i1l136
  2229  0245                     u78_20:
  2230  0245                     i1l1505:
  2231                           
  2232                           ;main.c: 83:         INTCONbits.RBIF = 0;
  2233  0245  100B               	bcf	11,0	;volatile
  2234  0246                     i1l1507:
  2235                           
  2236                           ;main.c: 85:         AR1 = PORTBbits.RB0;
  2237  0246  3000               	movlw	0
  2238  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2240  0249  1806               	btfsc	6,0	;volatile
  2241  024A  3001               	movlw	1
  2242  024B  00AA               	movwf	_AR1
  2243  024C                     i1l1509:
  2244                           
  2245                           ;main.c: 86:         if (AR1==0){
  2246  024C  082A               	movf	_AR1,w
  2247  024D  1D03               	btfss	3,2
  2248  024E  2A50               	goto	u79_21
  2249  024F  2A51               	goto	u79_20
  2250  0250                     u79_21:
  2251  0250  2A52               	goto	i1l1513
  2252  0251                     u79_20:
  2253  0251                     i1l1511:
  2254                           
  2255                           ;main.c: 87:             AR2=0;
  2256  0251  01A9               	clrf	_AR2
  2257  0252                     i1l1513:
  2258                           
  2259                           ;main.c: 89:         if (AR2==0){
  2260  0252  0829               	movf	_AR2,w
  2261  0253  1D03               	btfss	3,2
  2262  0254  2A56               	goto	u80_21
  2263  0255  2A57               	goto	u80_20
  2264  0256                     u80_21:
  2265  0256  2A62               	goto	i1l1521
  2266  0257                     u80_20:
  2267  0257                     i1l1515:
  2268                           
  2269                           ;main.c: 90:             if (AR1==1){
  2270  0257  032A               	decf	_AR1,w
  2271  0258  1D03               	btfss	3,2
  2272  0259  2A5B               	goto	u81_21
  2273  025A  2A5C               	goto	u81_20
  2274  025B                     u81_21:
  2275  025B  2A62               	goto	i1l1521
  2276  025C                     u81_20:
  2277  025C                     i1l1517:
  2278                           
  2279                           ;main.c: 91:                 BOTON++;
  2280  025C  3001               	movlw	1
  2281  025D  00F1               	movwf	??_ISR
  2282  025E  0871               	movf	??_ISR,w
  2283  025F  07A0               	addwf	_BOTON,f
  2284  0260                     i1l1519:
  2285                           
  2286                           ;main.c: 92:                 AR2=1;
  2287  0260  01A9               	clrf	_AR2
  2288  0261  0AA9               	incf	_AR2,f
  2289  0262                     i1l1521:
  2290                           
  2291                           ;main.c: 95:         AR3 = PORTBbits.RB1;
  2292  0262  3000               	movlw	0
  2293  0263  1886               	btfsc	6,1	;volatile
  2294  0264  3001               	movlw	1
  2295  0265  00A8               	movwf	_AR3
  2296  0266                     i1l1523:
  2297                           
  2298                           ;main.c: 96:         if (AR3==0){
  2299  0266  0828               	movf	_AR3,w
  2300  0267  1D03               	btfss	3,2
  2301  0268  2A6A               	goto	u82_21
  2302  0269  2A6B               	goto	u82_20
  2303  026A                     u82_21:
  2304  026A  2A6C               	goto	i1l1527
  2305  026B                     u82_20:
  2306  026B                     i1l1525:
  2307                           
  2308                           ;main.c: 97:             AR4=0;
  2309  026B  01A7               	clrf	_AR4
  2310  026C                     i1l1527:
  2311                           
  2312                           ;main.c: 99:         if (AR4==0){
  2313  026C  0827               	movf	_AR4,w
  2314  026D  1D03               	btfss	3,2
  2315  026E  2A70               	goto	u83_21
  2316  026F  2A71               	goto	u83_20
  2317  0270                     u83_21:
  2318  0270  2A7A               	goto	i1l136
  2319  0271                     u83_20:
  2320  0271                     i1l1529:
  2321                           
  2322                           ;main.c: 100:             if (AR3==1){
  2323  0271  0328               	decf	_AR3,w
  2324  0272  1D03               	btfss	3,2
  2325  0273  2A75               	goto	u84_21
  2326  0274  2A76               	goto	u84_20
  2327  0275                     u84_21:
  2328  0275  2A7A               	goto	i1l136
  2329  0276                     u84_20:
  2330  0276                     i1l1531:
  2331                           
  2332                           ;main.c: 101:                 BOTON--;
  2333  0276  3001               	movlw	1
  2334  0277  02A0               	subwf	_BOTON,f
  2335  0278                     i1l1533:
  2336                           
  2337                           ;main.c: 102:                 AR4=1;
  2338  0278  01A7               	clrf	_AR4
  2339  0279  0AA7               	incf	_AR4,f
  2340  027A                     i1l136:
  2341  027A  0873               	movf	??_ISR+2,w
  2342  027B  008A               	movwf	10
  2343  027C  0E72               	swapf	??_ISR+1,w
  2344  027D  0083               	movwf	3
  2345  027E  0EFE               	swapf	btemp,f
  2346  027F  0E7E               	swapf	btemp,w
  2347  0280  0009               	retfie
  2348  0281                     __end_of_ISR:
  2349                           
  2350                           	psect	intentry
  2351  0004                     __pintentry:	
  2352                           ;incstack = 0
  2353                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2354                           
  2355  0004                     interrupt_function:
  2356  007E                     saved_w	set	btemp
  2357  0004  00FE               	movwf	btemp
  2358  0005  0E03               	swapf	3,w
  2359  0006  00F2               	movwf	??_ISR+1
  2360  0007  080A               	movf	10,w
  2361  0008  00F3               	movwf	??_ISR+2
  2362  0009  120A  118A  2A2E   	ljmp	_ISR
  2363                           
  2364                           	psect	text11
  2365  032D                     __ptext11:	
  2366 ;; *************** function _envio *****************
  2367 ;; Defined at:
  2368 ;;		line 183 in file "main.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2382 ;;      Params:         0       0       0       0       0
  2383 ;;      Locals:         0       0       0       0       0
  2384 ;;      Temps:          1       0       0       0       0
  2385 ;;      Totals:         1       0       0       0       0
  2386 ;;Total ram usage:        1 bytes
  2387 ;; Hardware stack levels used: 1
  2388 ;; This function calls:
  2389 ;;		Nothing
  2390 ;; This function is called by:
  2391 ;;		_ISR
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           
  2396                           ;psect for function _envio
  2397  032D                     _envio:
  2398  032D                     i1l1355:	
  2399                           ;incstack = 0
  2400                           ; Regs used in _envio: [wreg+status,2+status,0]
  2401                           
  2402                           
  2403                           ;main.c: 184:     toggleTX++;
  2404  032D  3001               	movlw	1
  2405  032E  00F0               	movwf	??_envio
  2406  032F  0870               	movf	??_envio,w
  2407  0330  07F9               	addwf	_toggleTX,f
  2408                           
  2409                           ;main.c: 185:     if (toggleTX == 1){
  2410  0331  0379               	decf	_toggleTX,w
  2411  0332  1D03               	btfss	3,2
  2412  0333  2B35               	goto	u60_21
  2413  0334  2B36               	goto	u60_20
  2414  0335                     u60_21:
  2415  0335  2B3A               	goto	i1l1359
  2416  0336                     u60_20:
  2417  0336                     i1l1357:
  2418                           
  2419                           ;main.c: 186:         TXREG = AC2;
  2420  0336  1283               	bcf	3,5	;RP0=0, select bank0
  2421  0337  1303               	bcf	3,6	;RP1=0, select bank0
  2422  0338  082F               	movf	_AC2,w
  2423  0339  0099               	movwf	25	;volatile
  2424  033A                     i1l1359:
  2425                           
  2426                           ;main.c: 188:     if (toggleTX == 2){
  2427  033A  3002               	movlw	2
  2428  033B  0679               	xorwf	_toggleTX,w
  2429  033C  1D03               	btfss	3,2
  2430  033D  2B3F               	goto	u61_21
  2431  033E  2B40               	goto	u61_20
  2432  033F                     u61_21:
  2433  033F  2B44               	goto	i1l1363
  2434  0340                     u61_20:
  2435  0340                     i1l1361:
  2436                           
  2437                           ;main.c: 189:         TXREG = AD2;
  2438  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2439  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0342  082E               	movf	_AD2,w
  2441  0343  0099               	movwf	25	;volatile
  2442  0344                     i1l1363:
  2443                           
  2444                           ;main.c: 191:     if (toggleTX == 3){
  2445  0344  3003               	movlw	3
  2446  0345  0679               	xorwf	_toggleTX,w
  2447  0346  1D03               	btfss	3,2
  2448  0347  2B49               	goto	u62_21
  2449  0348  2B4A               	goto	u62_20
  2450  0349                     u62_21:
  2451  0349  2B4E               	goto	i1l1367
  2452  034A                     u62_20:
  2453  034A                     i1l1365:
  2454                           
  2455                           ;main.c: 192:         TXREG = AU2;
  2456  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2457  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2458  034C  082D               	movf	_AU2,w
  2459  034D  0099               	movwf	25	;volatile
  2460  034E                     i1l1367:
  2461                           
  2462                           ;main.c: 194:     if (toggleTX == 4){
  2463  034E  3004               	movlw	4
  2464  034F  0679               	xorwf	_toggleTX,w
  2465  0350  1D03               	btfss	3,2
  2466  0351  2B53               	goto	u63_21
  2467  0352  2B54               	goto	u63_20
  2468  0353                     u63_21:
  2469  0353  2B59               	goto	i1l162
  2470  0354                     u63_20:
  2471  0354                     i1l1369:
  2472                           
  2473                           ;main.c: 195:         TXREG = 13;
  2474  0354  300D               	movlw	13
  2475  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0357  0099               	movwf	25	;volatile
  2478  0358                     i1l1371:
  2479                           
  2480                           ;main.c: 196:         toggleTX = 0;
  2481  0358  01F9               	clrf	_toggleTX
  2482  0359                     i1l162:
  2483  0359  0008               	return
  2484  035A                     __end_of_envio:
  2485  007E                     btemp	set	126	;btemp
  2486  007E                     wtemp0	set	126
  2487                           
  2488                           	psect	config
  2489                           
  2490                           ;Config register CONFIG1 @ 0x2007
  2491                           ;	Oscillator Selection bits
  2492                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2493                           ;	Watchdog Timer Enable bit
  2494                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2495                           ;	Power-up Timer Enable bit
  2496                           ;	PWRTE = OFF, PWRT disabled
  2497                           ;	RE3/MCLR pin function select bit
  2498                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2499                           ;	Code Protection bit
  2500                           ;	CP = OFF, Program memory code protection is disabled
  2501                           ;	Data Code Protection bit
  2502                           ;	CPD = OFF, Data memory code protection is disabled
  2503                           ;	Brown Out Reset Selection bits
  2504                           ;	BOREN = OFF, BOR disabled
  2505                           ;	Internal External Switchover bit
  2506                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2507                           ;	Fail-Safe Clock Monitor Enabled bit
  2508                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2509                           ;	Low Voltage Programming Enable bit
  2510                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2511                           ;	In-Circuit Debugger Mode bit
  2512                           ;	DEBUG = 0x1, unprogrammed default
  2513  2007                     	org	8199
  2514  2007  20D4               	dw	8404
  2515                           
  2516                           ;Config register CONFIG2 @ 0x2008
  2517                           ;	Brown-out Reset Selection bit
  2518                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2519                           ;	Flash Program Memory Self Write Enable bits
  2520                           ;	WRT = OFF, Write protection off
  2521  2008                     	org	8200
  2522  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     17      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LECT2->___bmul
    _LECT2->___wmul
    _LECT2->_num_ascii
    _LECT1->___bmul
    _LECT1->___wmul
    _LECT1->_num_ascii
    ___awdiv->___wmul
    _CONTADOR->___bmul

Critical Paths under _ISR in COMMON

    _ISR->_envio

Critical Paths under _main in BANK0

    _main->_LECT1
    _main->_LECT2
    _LECT2->___awdiv
    _LECT1->___awdiv
    ___awdiv->___wmul
    _CONTADOR->___bmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5168
                           _CONTADOR
                              _LECT1
                              _LECT2
                              _Setup
                           _USARTcon
 ---------------------------------------------------------------------------------
 (1) _USARTcon                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LECT2                                                4     4      0    2201
                                             13 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (1) _LECT1                                                4     4      0    2201
                                             13 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            3     3      0      31
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     496
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              4 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CONTADOR                                             4     4      0     766
                                              2 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     766
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              1 COMMON     3     3      0
                              _envio
 ---------------------------------------------------------------------------------
 (4) _envio                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONTADOR
     ___bmul
   _LECT1
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
     _num_ascii
   _LECT2
     ___awdiv
     ___bmul
     ___wmul
     _num_ascii
   _Setup
   _USARTcon

 _ISR (ROOT)
   _envio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      2B       5       53.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Aug 12 03:51:14 2021

                      _A 0026                        _B 0025                        _C 0024  
                      _T 004A           ___bmul@product 0039                       _AB 0023  
           ___awdiv@sign 0043                       _cc 0076                       _en 0021  
                     fsr 0004      ___wmul@multiplicand 003B                      _AC1 0035  
                    _AC2 002F                      _AD1 0034                      _AD2 002E  
                    l142 0310                      l303 0368                      l152 01C4  
                    l305 0380                      l217 03AD                      l155 0144  
                    _ABC 0022                      l172 00C4                      l149 02F7  
                    l166 0048                      l329 0397                      l177 02C1  
                    l456 022D                      _AR1 002A                      _AR2 0029  
                    _AR3 0028                      _AR4 0027                      _AU1 0033  
                    _AU2 002D                      u500 01CC                      u501 01CB  
                    u510 01D7                      u511 01D6                      u520 01E8  
                    u521 01E7                      u540 01FA                      _ISR 022E  
                    u541 01F9                      u535 01EC                      u560 020B  
                    u561 020A                      u555 01FB                      u580 021F  
                    u900 037C                      u581 021E                      u565 0207  
                    u901 037B                      u910 0389                      u590 0224  
                    u911 0388                      u591 0223                      u575 0213  
                    u920 0396                      u921 0395                      u930 002C  
                    u931 002B                      u940 0032                      u941 0031  
                    u950 0039                      u870 0362                      u951 0038  
                    u871 0361                      u960 0043                      u961 0042  
                    u970 004E                      u971 004D                      u980 0069  
                    u981 0068                      u885 0369                      u990 0092  
                    u991 0091                      u895 0370                      _Un1 0036  
                    _Un2 0030                      _res 002B                      _sum 002C  
                    indf 0000                     ?_ISR 0070                     l1311 01C5  
                   l1321 01D7                     l1313 01C8                     l1401 02E8  
                   l1331 01EB                     l1323 01DC                     l1315 01CC  
                   l1411 02F4                     l1403 02EA                     l1341 0211  
                   l1333 01F2                     l1325 01E0                     l1317 01D1  
                   l1413 02F5                     l1405 02EE                     l1421 03A3  
                   l1351 0229                     l1343 0212                     l1335 01F6  
                   l1327 01E2                     l1319 01D3                     l1415 02F6  
                   l1407 02F1                     l1423 03A5                     l1345 0219  
                   l1337 01FA                     l1329 01E8                     l1409 02F2  
                   l1425 03A8                     l1417 0398                     l1339 020B  
                   l1347 021F                     l1611 028F                     l1427 03A9  
                   l1419 03A0                     l1701 006E                     l1349 0224  
                   l1605 028D                     l1381 02D8                     l1373 02C2  
                   l1429 03AA                     l1711 009E                     l1703 008C  
                   l1623 0293                     l1391 02DD                     l1383 02D9  
                   l1375 02CA                     l1721 00B7                     l1713 00A4  
                   l1705 0092                     l1617 0291                     l1393 02E0  
                   l1385 02DA                     l1377 02CC                     l1723 00BD  
                   l1715 00AA                     l1707 0097                     l1651 035A  
                   l1635 0297                     l1643 0299                     l1731 01AE  
                   l1395 02E1                     l1387 02DB                     l1379 02D7  
                   l1725 00BE                     l1717 00AB                     l1709 0098  
                   l1661 037C                     l1653 035C                     l1629 0295  
                   l1573 0284                     l1733 01B9                     l1741 0139  
                   l1397 02E4                     l1389 02DC                     l1671 038D  
                   l1719 00B1                     l1655 0362                     l1575 0285  
                   l1727 0145                     l1735 00C5                     l1399 02E7  
                   l1751 0314                     l1743 02F8                     l1673 038F  
                   l1665 0384                     l1681 002C                     l1657 036F  
                   l1593 0289                     l1729 01A3                     l1737 0123  
                   l1753 0319                     l1745 0302                     l1675 0396  
                   l1667 0385                     l1691 0043                     l1683 0032  
                   l1659 0376                     l1587 0287                     l1739 012E  
                   l1755 031E                     l1747 0308                     l1669 0389  
                   l1693 004E                     l1685 0039                     l1757 0323  
                   l1749 030E                     l1695 0053                     l1687 003D  
                   l1679 0026                     l1791 02A1                     l1599 028B  
                   l1759 0327                     l1697 0063                     l1689 003E  
                   l1699 0069                     u1000 0097                     u1001 0096  
                   u1010 00A4                     u1011 00A3                     u1020 00AA  
                   u1021 00A9                     u1030 00B7                     u1031 00B6  
                   u1040 00BD                     u1041 00BC                     u1050 0308  
                   u1051 0307                     u1060 030E                     _CONT 0077  
                   u1061 030D                     _TMR0 0001                     _Dec1 0037  
                   _Dec2 0031                     _Cen1 0038                     _Cen2 0032  
                   _main 02F8                     btemp 007E                     start 000C  
      ___bmul@multiplier 003A         __end_of_CONTADOR 00C5                    ??_ISR 0071  
                  ?_main 0070          __end_of___awdiv 022E                    _ANSEL 0188  
        ___awdiv@divisor 003D                    _LECT1 0145                    _LECT2 00C5  
                  _BOTON 0020                    i1l136 027A                    i1l162 0359  
        ___awdiv@counter 0042                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u60_20 0336  
                  u60_21 0335                    u61_20 0340                    u61_21 033F  
                  u62_20 034A                    u62_21 0349                    u63_20 0354  
                  u63_21 0353                    u80_20 0257                    u80_21 0256  
                  u81_20 025C                    u81_21 025B                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    u82_20 026B                    u82_21 026A  
                  u83_20 0271                    u83_21 0270                    u84_20 0276  
                  u76_20 0234                    u84_21 0275                    u76_21 0233  
                  u77_20 023C                    u77_21 023B                    u78_20 0245  
                  u78_21 0244                    u79_20 0251                    u79_21 0250  
                  _TXREG 0019                    _Setup 02C2                    _envio 032D  
                  _signo 0078         __end_of_USARTcon 03AE                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 032D                   ??_main 0076                   ?_LECT1 0070  
                 ?_LECT2 0070                   ?_Setup 0070                   _ADCON1 009F  
                 ?_envio 0070         ___awdiv@dividend 003F                   _ANSELH 0189  
                 i1l1501 023C                   i1l1511 0251                   i1l1503 0241  
                 i1l1361 0340                   i1l1521 0262                   i1l1513 0252  
                 i1l1505 0245                   i1l1371 0358                   i1l1363 0344  
                 i1l1355 032D                   i1l1531 0276                   i1l1523 0266  
                 i1l1515 0257                   i1l1507 0246                   i1l1365 034A  
                 i1l1357 0336                   i1l1533 0278                   i1l1525 026B  
                 i1l1517 025C                   i1l1509 024C                   i1l1367 034E  
                 i1l1359 033A                   i1l1527 026C                   i1l1519 0260  
                 i1l1369 0354                   i1l1529 0271                   i1l1495 022E  
                 i1l1497 0234                   i1l1499 0238                   _SPBRGH 009A  
                 ___bmul 0381                   ___wmul 035A                ??___awdiv 0041  
       ___awdiv@quotient 0044                   saved_w 007E                ?_CONTADOR 0070  
__end_of__initialization 0022            __end_of_LECT1 01C5            __end_of_LECT2 0145  
    ___bmul@multiplicand 0074           __pcstackCOMMON 0070            __end_of_Setup 02F8  
           __pidataBANK0 03B6            __end_of_envio 035A                ?_USARTcon 0070  
                ??_LECT1 0046                  ??_LECT2 0046                  ??_Setup 0074  
                ??_envio 0070               ??_CONTADOR 003B               __pbssBANK0 0020  
             __pmaintext 02F8                  ?___bmul 0074                  ?___wmul 0039  
             __pintentry 0004               ??_USARTcon 0074       __size_of_num_ascii 0041  
        __size_of___bmul 0017                  ___awdiv 01C5          __size_of___wmul 0027  
                __ptext1 0398                  __ptext2 02C2                  __ptext3 00C5  
                __ptext4 0145                  __ptext5 0281                  __ptext6 035A  
                __ptext7 01C5                  __ptext8 0026                  __ptext9 0381  
           __size_of_ISR 0053                  clrloop0 03AF     end_of_initialization 0022  
      __end_of_num_ascii 02C2                _RCSTAbits 0018                _PORTBbits 0006  
      __size_of_CONTADOR 009F                _TXSTAbits 0098           __end_of___bmul 0398  
         __end_of___wmul 0381              _BAUDCTLbits 0187        __size_of_USARTcon 0016  
    start_initialization 000F              __end_of_ISR 0281                 ??___bmul 0075  
               ??___wmul 0074              __pdataBANK0 004A              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0039                 ?___awdiv 003D  
         __size_of_LECT1 0080           __size_of_LECT2 0080           __size_of_Setup 0036  
         __size_of_envio 002D                 _CONTADOR 0026        interrupt_function 0004  
         ___wmul@product 0074                 _IOCBbits 0096                clear_ram0 03AE  
               _PIE1bits 008C                 _PIR1bits 000C                _num_ascii 0281  
               _USARTcon 0398        ___wmul@multiplier 0039                 _WPUBbits 0095  
             ?_num_ascii 0070         __size_of___awdiv 0069                 __ptext10 022E  
               __ptext11 032D            __size_of_main 0035                 _toggleTX 0079  
             _INTCONbits 000B                 intlevel1 0000             num_ascii@num 0039  
             _OSCCONbits 008F              ??_num_ascii 0074               _OPTION_REG 0081  
