

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Aug 15 20:44:27 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376                           
   377                           	psect	idataBANK0
   378  042C                     __pidataBANK0:
   379                           
   380                           ;initializer for _T
   381  042C  3401               	retlw	1
   382  0018                     _RCSTAbits	set	24
   383  0019                     _TXREG	set	25
   384  0001                     _TMR0	set	1
   385  0009                     _PORTE	set	9
   386  0007                     _PORTC	set	7
   387  0006                     _PORTB	set	6
   388  0005                     _PORTA	set	5
   389  0008                     _PORTD	set	8
   390  0006                     _PORTBbits	set	6
   391  000B                     _INTCONbits	set	11
   392  001A                     _RCREG	set	26
   393  000C                     _PIR1bits	set	12
   394  0099                     _SPBRG	set	153
   395  009A                     _SPBRGH	set	154
   396  0098                     _TXSTAbits	set	152
   397  008C                     _PIE1bits	set	140
   398  0081                     _OPTION_REG	set	129
   399  0095                     _WPUBbits	set	149
   400  009F                     _ADCON1	set	159
   401  008F                     _OSCCONbits	set	143
   402  0096                     _IOCBbits	set	150
   403  0089                     _TRISE	set	137
   404  0088                     _TRISD	set	136
   405  0087                     _TRISC	set	135
   406  0086                     _TRISB	set	134
   407  0085                     _TRISA	set	133
   408  0187                     _BAUDCTLbits	set	391
   409  0189                     _ANSELH	set	393
   410  0188                     _ANSEL	set	392
   411                           
   412                           	psect	cinit
   413  0011                     start_initialization:	
   414                           ; #config settings
   415                           
   416  0011                     __initialization:
   417                           
   418                           ; Initialize objects allocated to BANK0
   419  0011  120A  118A  242C  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   420  0016  00CF               	movwf	__pdataBANK0& (0+127)
   421                           
   422                           ; Clear objects allocated to BANK0
   423  0017  1383               	bcf	3,7	;select IRP bank0
   424  0018  3020               	movlw	low __pbssBANK0
   425  0019  0084               	movwf	4
   426  001A  303C               	movlw	low (__pbssBANK0+28)
   427  001B  120A  118A  2424  120A  118A  	fcall	clear_ram0
   428                           
   429                           ; Clear objects allocated to COMMON
   430  0020  01FC               	clrf	__pbssCOMMON& (0+127)
   431  0021  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   432  0022                     end_of_initialization:	
   433                           ;End of C runtime variable initialization code
   434                           
   435  0022                     __end_of__initialization:
   436  0022  0183               	clrf	3
   437  0023  120A  118A  2A97   	ljmp	_main	;jump to C main() function
   438                           
   439                           	psect	bssCOMMON
   440  007C                     __pbssCOMMON:
   441  007C                     _cc:
   442  007C                     	ds	1
   443  007D                     _toggleTX:
   444  007D                     	ds	1
   445                           
   446                           	psect	bssBANK0
   447  0020                     __pbssBANK0:
   448  0020                     _BOTON:
   449  0020                     	ds	1
   450  0021                     _A3:
   451  0021                     	ds	1
   452  0022                     _A2:
   453  0022                     	ds	1
   454  0023                     _A1:
   455  0023                     	ds	1
   456  0024                     _ABC:
   457  0024                     	ds	1
   458  0025                     _C:
   459  0025                     	ds	1
   460  0026                     _B:
   461  0026                     	ds	1
   462  0027                     _A:
   463  0027                     	ds	1
   464  0028                     _AR4:
   465  0028                     	ds	1
   466  0029                     _AR3:
   467  0029                     	ds	1
   468  002A                     _AR2:
   469  002A                     	ds	1
   470  002B                     _AR1:
   471  002B                     	ds	1
   472  002C                     _CONT:
   473  002C                     	ds	1
   474  002D                     _res:
   475  002D                     	ds	1
   476  002E                     _sum:
   477  002E                     	ds	1
   478  002F                     _signo:
   479  002F                     	ds	1
   480  0030                     _AU2:
   481  0030                     	ds	1
   482  0031                     _AD2:
   483  0031                     	ds	1
   484  0032                     _AC2:
   485  0032                     	ds	1
   486  0033                     _Un2:
   487  0033                     	ds	1
   488  0034                     _Dec2:
   489  0034                     	ds	1
   490  0035                     _Cen2:
   491  0035                     	ds	1
   492  0036                     _AU1:
   493  0036                     	ds	1
   494  0037                     _AD1:
   495  0037                     	ds	1
   496  0038                     _AC1:
   497  0038                     	ds	1
   498  0039                     _Un1:
   499  0039                     	ds	1
   500  003A                     _Dec1:
   501  003A                     	ds	1
   502  003B                     _Cen1:
   503  003B                     	ds	1
   504                           
   505                           	psect	dataBANK0
   506  004F                     __pdataBANK0:
   507  004F                     _T:
   508  004F                     	ds	1
   509                           
   510                           	psect	clrtext
   511  0424                     clear_ram0:	
   512                           ;	Called with FSR containing the base address, and
   513                           ;	W with the last address+1
   514                           
   515  0424  0064               	clrwdt	;clear the watchdog before getting into this loop
   516  0425                     clrloop0:
   517  0425  0180               	clrf	0	;clear RAM location pointed to by FSR
   518  0426  0A84               	incf	4,f	;increment pointer
   519  0427  0604               	xorwf	4,w	;XOR with final address
   520  0428  1903               	btfsc	3,2	;have we reached the end yet?
   521  0429  3400               	retlw	0	;all done for this memory range, return
   522  042A  0604               	xorwf	4,w	;XOR again to restore value
   523  042B  2C25               	goto	clrloop0	;do the next byte
   524                           
   525                           	psect	cstackCOMMON
   526  0070                     __pcstackCOMMON:
   527  0070                     ?_CONTADOR:
   528  0070                     ?_envio:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ??_envio:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_Setup:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_USARTcon:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_LECT1:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_LECT2:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_num_ascii:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_num_ascii_dec:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ??_num_ascii_dec:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_ISR:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_main:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?i1___bmul:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     i1___bmul@multiplicand:	
   565                           ; 1 bytes @ 0x0
   566                           
   567                           
   568                           ; 1 bytes @ 0x0
   569  0070                     	ds	1
   570  0071                     ??i1___bmul:
   571                           
   572                           ; 1 bytes @ 0x1
   573  0071                     	ds	1
   574  0072                     num_ascii_dec@num:
   575  0072                     i1___bmul@product:	
   576                           ; 1 bytes @ 0x2
   577                           
   578                           
   579                           ; 1 bytes @ 0x2
   580  0072                     	ds	1
   581  0073                     i1___bmul@multiplier:
   582                           
   583                           ; 1 bytes @ 0x3
   584  0073                     	ds	1
   585  0074                     ??_CONTADOR:
   586                           
   587                           ; 1 bytes @ 0x4
   588  0074                     	ds	4
   589  0078                     ??_ISR:
   590                           
   591                           ; 1 bytes @ 0x8
   592  0078                     	ds	4
   593                           
   594                           	psect	cstackBANK0
   595  003C                     __pcstackBANK0:
   596  003C                     ??_Setup:
   597  003C                     ??_USARTcon:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  003C                     ??_num_ascii:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  003C                     ?___bmul:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  003C                     ?___wmul:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  003C                     ___bmul@multiplicand:	
   610                           ; 2 bytes @ 0x0
   611                           
   612  003C                     ___wmul@multiplier:	
   613                           ; 1 bytes @ 0x0
   614                           
   615                           
   616                           ; 2 bytes @ 0x0
   617  003C                     	ds	1
   618  003D                     ??___bmul:
   619                           
   620                           ; 1 bytes @ 0x1
   621  003D                     	ds	1
   622  003E                     num_ascii@num:
   623  003E                     ___bmul@product:	
   624                           ; 1 bytes @ 0x2
   625                           
   626  003E                     ___wmul@multiplicand:	
   627                           ; 1 bytes @ 0x2
   628                           
   629                           
   630                           ; 2 bytes @ 0x2
   631  003E                     	ds	1
   632  003F                     ___bmul@multiplier:
   633                           
   634                           ; 1 bytes @ 0x3
   635  003F                     	ds	1
   636  0040                     ??___wmul:
   637  0040                     ___wmul@product:	
   638                           ; 1 bytes @ 0x4
   639                           
   640                           
   641                           ; 2 bytes @ 0x4
   642  0040                     	ds	2
   643  0042                     ?___awdiv:
   644  0042                     ___awdiv@divisor:	
   645                           ; 2 bytes @ 0x6
   646                           
   647                           
   648                           ; 2 bytes @ 0x6
   649  0042                     	ds	2
   650  0044                     ___awdiv@dividend:
   651                           
   652                           ; 2 bytes @ 0x8
   653  0044                     	ds	2
   654  0046                     ??___awdiv:
   655                           
   656                           ; 1 bytes @ 0xA
   657  0046                     	ds	1
   658  0047                     ___awdiv@counter:
   659                           
   660                           ; 1 bytes @ 0xB
   661  0047                     	ds	1
   662  0048                     ___awdiv@sign:
   663                           
   664                           ; 1 bytes @ 0xC
   665  0048                     	ds	1
   666  0049                     ___awdiv@quotient:
   667                           
   668                           ; 2 bytes @ 0xD
   669  0049                     	ds	2
   670  004B                     ??_LECT1:
   671  004B                     ??_LECT2:	
   672                           ; 1 bytes @ 0xF
   673                           
   674                           
   675                           ; 1 bytes @ 0xF
   676  004B                     	ds	4
   677  004F                     ??_main:
   678                           
   679                           	psect	maintext
   680  0297                     __pmaintext:	
   681                           ; 1 bytes @ 0x13
   682 ;;
   683 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   684 ;;
   685 ;; *************** function _main *****************
   686 ;; Defined at:
   687 ;;		line 110 in file "main.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : B00/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels required when called: 5
   707 ;; This function calls:
   708 ;;		_LECT1
   709 ;;		_LECT2
   710 ;;		_Setup
   711 ;;		_USARTcon
   712 ;; This function is called by:
   713 ;;		Startup code after reset
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           
   718                           ;psect for function _main
   719  0297                     _main:
   720  0297                     l1736:	
   721                           ;incstack = 0
   722                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   723                           
   724                           
   725                           ;main.c: 111:     Setup();
   726  0297  120A  118A  2358  120A  118A  	fcall	_Setup
   727                           
   728                           ;main.c: 112:     USARTcon();
   729  029C  120A  118A  23F9  120A  118A  	fcall	_USARTcon
   730  02A1                     l1738:
   731                           
   732                           ;main.c: 114:         if(signo != 13 && signo != 43 && signo != 45){
   733  02A1  300D               	movlw	13
   734  02A2  1283               	bcf	3,5	;RP0=0, select bank0
   735  02A3  1303               	bcf	3,6	;RP1=0, select bank0
   736  02A4  062F               	xorwf	_signo,w
   737  02A5  1903               	btfsc	3,2
   738  02A6  2AA8               	goto	u961
   739  02A7  2AA9               	goto	u960
   740  02A8                     u961:
   741  02A8  2AB7               	goto	l1746
   742  02A9                     u960:
   743  02A9                     l1740:
   744  02A9  302B               	movlw	43
   745  02AA  062F               	xorwf	_signo,w
   746  02AB  1903               	btfsc	3,2
   747  02AC  2AAE               	goto	u971
   748  02AD  2AAF               	goto	u970
   749  02AE                     u971:
   750  02AE  2AB7               	goto	l1746
   751  02AF                     u970:
   752  02AF                     l1742:
   753  02AF  302D               	movlw	45
   754  02B0  062F               	xorwf	_signo,w
   755  02B1  1903               	btfsc	3,2
   756  02B2  2AB4               	goto	u981
   757  02B3  2AB5               	goto	u980
   758  02B4                     u981:
   759  02B4  2AB7               	goto	l1746
   760  02B5                     u980:
   761  02B5                     l1744:
   762                           
   763                           ;main.c: 115:             sum = 0;
   764  02B5  01AE               	clrf	_sum
   765                           
   766                           ;main.c: 116:             res = 0;
   767  02B6  01AD               	clrf	_res
   768  02B7                     l1746:
   769                           
   770                           ;main.c: 118:         if(57<signo && signo<48){
   771  02B7  303A               	movlw	58
   772  02B8  022F               	subwf	_signo,w
   773  02B9  1C03               	skipc
   774  02BA  2ABC               	goto	u991
   775  02BB  2ABD               	goto	u990
   776  02BC                     u991:
   777  02BC  2AC4               	goto	l1752
   778  02BD                     u990:
   779  02BD                     l1748:
   780  02BD  3030               	movlw	48
   781  02BE  022F               	subwf	_signo,w
   782  02BF  1803               	skipnc
   783  02C0  2AC2               	goto	u1001
   784  02C1  2AC3               	goto	u1000
   785  02C2                     u1001:
   786  02C2  2AC4               	goto	l1752
   787  02C3                     u1000:
   788  02C3                     l1750:
   789                           
   790                           ;main.c: 119:             cc = 0;
   791  02C3  01FC               	clrf	_cc
   792  02C4                     l1752:
   793                           
   794                           ;main.c: 121:         LECT1();
   795  02C4  120A  118A  2152  120A  118A  	fcall	_LECT1
   796  02C9                     l1754:
   797                           
   798                           ;main.c: 122:         LECT2();
   799  02C9  120A  118A  20D2  120A  118A  	fcall	_LECT2
   800  02CE                     l1756:
   801                           
   802                           ;main.c: 123:         PORTD = A1;
   803  02CE  1283               	bcf	3,5	;RP0=0, select bank0
   804  02CF  1303               	bcf	3,6	;RP1=0, select bank0
   805  02D0  0823               	movf	_A1,w
   806  02D1  0088               	movwf	8	;volatile
   807  02D2                     l1758:
   808                           
   809                           ;main.c: 124:         PORTA = CONT;
   810  02D2  082C               	movf	_CONT,w
   811  02D3  0085               	movwf	5	;volatile
   812  02D4  2AA1               	goto	l1738
   813  02D5  120A  118A  280E   	ljmp	start
   814  02D8                     __end_of_main:
   815                           
   816                           	psect	text1
   817  03F9                     __ptext1:	
   818 ;; *************** function _USARTcon *****************
   819 ;; Defined at:
   820 ;;		line 3 in file "USART.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;		None
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, status,2
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   834 ;;      Params:         0       0       0       0       0
   835 ;;      Locals:         0       0       0       0       0
   836 ;;      Temps:          0       0       0       0       0
   837 ;;      Totals:         0       0       0       0       0
   838 ;;Total ram usage:        0 bytes
   839 ;; Hardware stack levels used: 1
   840 ;; Hardware stack levels required when called: 3
   841 ;; This function calls:
   842 ;;		Nothing
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           
   849                           ;psect for function _USARTcon
   850  03F9                     _USARTcon:
   851  03F9                     l1664:	
   852                           ;incstack = 0
   853                           ; Regs used in _USARTcon: [wreg+status,2]
   854                           
   855                           
   856                           ;USART.c: 5:  TXSTAbits.SYNC = 0;
   857  03F9  1683               	bsf	3,5	;RP0=1, select bank1
   858  03FA  1303               	bcf	3,6	;RP1=0, select bank1
   859  03FB  1218               	bcf	24,4	;volatile
   860                           
   861                           ;USART.c: 6:  TXSTAbits.BRGH = 1;
   862  03FC  1518               	bsf	24,2	;volatile
   863                           
   864                           ;USART.c: 7:  TXSTAbits.TX9 = 0;
   865  03FD  1318               	bcf	24,6	;volatile
   866                           
   867                           ;USART.c: 8:  BAUDCTLbits.BRG16 = 0;
   868  03FE  1683               	bsf	3,5	;RP0=1, select bank3
   869  03FF  1703               	bsf	3,6	;RP1=1, select bank3
   870  0400  1187               	bcf	7,3	;volatile
   871  0401                     l1666:
   872                           
   873                           ;USART.c: 9:  SPBRGH = 0;
   874  0401  1683               	bsf	3,5	;RP0=1, select bank1
   875  0402  1303               	bcf	3,6	;RP1=0, select bank1
   876  0403  019A               	clrf	26	;volatile
   877  0404                     l1668:
   878                           
   879                           ;USART.c: 10:  SPBRG = 51;
   880  0404  3033               	movlw	51
   881  0405  0099               	movwf	25	;volatile
   882  0406                     l1670:
   883                           
   884                           ;USART.c: 12:  RCSTAbits.SPEN = 1;
   885  0406  1283               	bcf	3,5	;RP0=0, select bank0
   886  0407  1303               	bcf	3,6	;RP1=0, select bank0
   887  0408  1798               	bsf	24,7	;volatile
   888  0409                     l1672:
   889                           
   890                           ;USART.c: 13:  RCSTAbits.RX9 = 0;
   891  0409  1318               	bcf	24,6	;volatile
   892  040A                     l1674:
   893                           
   894                           ;USART.c: 14:  RCSTAbits.CREN = 1;
   895  040A  1618               	bsf	24,4	;volatile
   896  040B                     l1676:
   897                           
   898                           ;USART.c: 15:  TXSTAbits.TXEN = 1;
   899  040B  1683               	bsf	3,5	;RP0=1, select bank1
   900  040C  1303               	bcf	3,6	;RP1=0, select bank1
   901  040D  1698               	bsf	24,5	;volatile
   902  040E                     l226:
   903  040E  0008               	return
   904  040F                     __end_of_USARTcon:
   905                           
   906                           	psect	text2
   907  0358                     __ptext2:	
   908 ;; *************** function _Setup *****************
   909 ;; Defined at:
   910 ;;		line 129 in file "main.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;		None
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, status,2
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   924 ;;      Params:         0       0       0       0       0
   925 ;;      Locals:         0       0       0       0       0
   926 ;;      Temps:          0       0       0       0       0
   927 ;;      Totals:         0       0       0       0       0
   928 ;;Total ram usage:        0 bytes
   929 ;; Hardware stack levels used: 1
   930 ;; Hardware stack levels required when called: 3
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _Setup
   940  0358                     _Setup:
   941  0358                     l1620:	
   942                           ;incstack = 0
   943                           ; Regs used in _Setup: [wreg+status,2]
   944                           
   945                           
   946                           ;main.c: 131:     ANSEL = 0;
   947  0358  1683               	bsf	3,5	;RP0=1, select bank3
   948  0359  1703               	bsf	3,6	;RP1=1, select bank3
   949  035A  0188               	clrf	8	;volatile
   950                           
   951                           ;main.c: 132:     ANSELH = 0;
   952  035B  0189               	clrf	9	;volatile
   953                           
   954                           ;main.c: 133:     ANSEL = 0;
   955  035C  0188               	clrf	8	;volatile
   956                           
   957                           ;main.c: 134:     TRISA = 0;
   958  035D  1683               	bsf	3,5	;RP0=1, select bank1
   959  035E  1303               	bcf	3,6	;RP1=0, select bank1
   960  035F  0185               	clrf	5	;volatile
   961  0360                     l1622:
   962                           
   963                           ;main.c: 135:     TRISB = 0b00000011;
   964  0360  3003               	movlw	3
   965  0361  0086               	movwf	6	;volatile
   966  0362                     l1624:
   967                           
   968                           ;main.c: 136:     TRISC = 0b10000000;
   969  0362  3080               	movlw	128
   970  0363  0087               	movwf	7	;volatile
   971                           
   972                           ;main.c: 137:     TRISD = 0;
   973  0364  0188               	clrf	8	;volatile
   974                           
   975                           ;main.c: 138:     TRISE = 0;
   976  0365  0189               	clrf	9	;volatile
   977                           
   978                           ;main.c: 139:     PORTA = 0;
   979  0366  1283               	bcf	3,5	;RP0=0, select bank0
   980  0367  1303               	bcf	3,6	;RP1=0, select bank0
   981  0368  0185               	clrf	5	;volatile
   982                           
   983                           ;main.c: 140:     PORTB = 0;
   984  0369  0186               	clrf	6	;volatile
   985                           
   986                           ;main.c: 141:     PORTC = 0;
   987  036A  0187               	clrf	7	;volatile
   988                           
   989                           ;main.c: 142:     PORTD = 0;
   990  036B  0188               	clrf	8	;volatile
   991                           
   992                           ;main.c: 143:     PORTE = 0;
   993  036C  0189               	clrf	9	;volatile
   994  036D                     l1626:
   995                           
   996                           ;main.c: 144:     INTCONbits.TMR0IF = 0;
   997  036D  110B               	bcf	11,2	;volatile
   998  036E                     l1628:
   999                           
  1000                           ;main.c: 145:     INTCONbits.RBIF = 0;
  1001  036E  100B               	bcf	11,0	;volatile
  1002  036F                     l1630:
  1003                           
  1004                           ;main.c: 146:     INTCONbits.GIE = 1;
  1005  036F  178B               	bsf	11,7	;volatile
  1006  0370                     l1632:
  1007                           
  1008                           ;main.c: 147:     INTCONbits.PEIE = 1;
  1009  0370  170B               	bsf	11,6	;volatile
  1010  0371                     l1634:
  1011                           
  1012                           ;main.c: 148:     INTCONbits.T0IE = 0;
  1013  0371  128B               	bcf	11,5	;volatile
  1014  0372                     l1636:
  1015                           
  1016                           ;main.c: 149:     INTCONbits.RBIE = 1;
  1017  0372  158B               	bsf	11,3	;volatile
  1018  0373                     l1638:
  1019                           
  1020                           ;main.c: 150:     IOCBbits.IOCB0 = 1;
  1021  0373  1683               	bsf	3,5	;RP0=1, select bank1
  1022  0374  1303               	bcf	3,6	;RP1=0, select bank1
  1023  0375  1416               	bsf	22,0	;volatile
  1024  0376                     l1640:
  1025                           
  1026                           ;main.c: 151:     IOCBbits.IOCB1 = 1;
  1027  0376  1496               	bsf	22,1	;volatile
  1028  0377                     l1642:
  1029                           
  1030                           ;main.c: 152:     PIR1bits.ADIF = 0;
  1031  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0378  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0379  130C               	bcf	12,6	;volatile
  1034  037A                     l1644:
  1035                           
  1036                           ;main.c: 153:     OSCCONbits.IRCF0 = 1;
  1037  037A  1683               	bsf	3,5	;RP0=1, select bank1
  1038  037B  1303               	bcf	3,6	;RP1=0, select bank1
  1039  037C  160F               	bsf	15,4	;volatile
  1040  037D                     l1646:
  1041                           
  1042                           ;main.c: 154:     OSCCONbits.IRCF1 = 1;
  1043  037D  168F               	bsf	15,5	;volatile
  1044  037E                     l1648:
  1045                           
  1046                           ;main.c: 155:     OSCCONbits.IRCF2 = 1;
  1047  037E  170F               	bsf	15,6	;volatile
  1048                           
  1049                           ;main.c: 156:     ADCON1 = 0;
  1050  037F  019F               	clrf	31	;volatile
  1051  0380                     l1650:
  1052                           
  1053                           ;main.c: 157:     TMR0 = 236;
  1054  0380  30EC               	movlw	236
  1055  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1056  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1057  0383  0081               	movwf	1	;volatile
  1058  0384                     l1652:
  1059                           
  1060                           ;main.c: 158:     WPUBbits.WPUB0 = 1;
  1061  0384  1683               	bsf	3,5	;RP0=1, select bank1
  1062  0385  1303               	bcf	3,6	;RP1=0, select bank1
  1063  0386  1415               	bsf	21,0	;volatile
  1064  0387                     l1654:
  1065                           
  1066                           ;main.c: 159:     WPUBbits.WPUB1 = 1;
  1067  0387  1495               	bsf	21,1	;volatile
  1068  0388                     l1656:
  1069                           
  1070                           ;main.c: 160:     OPTION_REG = 0b01010111;
  1071  0388  3057               	movlw	87
  1072  0389  0081               	movwf	1	;volatile
  1073  038A                     l1658:
  1074                           
  1075                           ;main.c: 161:     PIE1bits.ADIE = 0;
  1076  038A  130C               	bcf	12,6	;volatile
  1077  038B                     l1660:
  1078                           
  1079                           ;main.c: 162:     PIE1bits.RCIE = 1;
  1080  038B  168C               	bsf	12,5	;volatile
  1081  038C                     l1662:
  1082                           
  1083                           ;main.c: 163:     PIE1bits.TXIE = 1;
  1084  038C  160C               	bsf	12,4	;volatile
  1085  038D                     l153:
  1086  038D  0008               	return
  1087  038E                     __end_of_Setup:
  1088                           
  1089                           	psect	text3
  1090  00D2                     __ptext3:	
  1091 ;; *************** function _LECT2 *****************
  1092 ;; Defined at:
  1093 ;;		line 173 in file "main.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0
  1109 ;;      Temps:          0       4       0       0       0
  1110 ;;      Totals:         0       4       0       0       0
  1111 ;;Total ram usage:        4 bytes
  1112 ;; Hardware stack levels used: 1
  1113 ;; Hardware stack levels required when called: 4
  1114 ;; This function calls:
  1115 ;;		___awdiv
  1116 ;;		___bmul
  1117 ;;		___wmul
  1118 ;;		_num_ascii
  1119 ;; This function is called by:
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           
  1125                           ;psect for function _LECT2
  1126  00D2                     _LECT2:
  1127  00D2                     l1686:	
  1128                           ;incstack = 0
  1129                           ; Regs used in _LECT2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1130                           
  1131                           
  1132                           ;main.c: 174:     Cen2 = BOTON/100;
  1133  00D2  3064               	movlw	100
  1134  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1135  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1136  00D5  00C2               	movwf	___awdiv@divisor
  1137  00D6  3000               	movlw	0
  1138  00D7  00C3               	movwf	___awdiv@divisor+1
  1139  00D8  0820               	movf	_BOTON,w
  1140  00D9  00CB               	movwf	??_LECT2
  1141  00DA  01CC               	clrf	??_LECT2+1
  1142  00DB  084B               	movf	??_LECT2,w
  1143  00DC  00C4               	movwf	___awdiv@dividend
  1144  00DD  084C               	movf	??_LECT2+1,w
  1145  00DE  00C5               	movwf	___awdiv@dividend+1
  1146  00DF  120A  118A  21D2  120A  118A  	fcall	___awdiv
  1147  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1148  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1149  00E6  0842               	movf	?___awdiv,w
  1150  00E7  00CD               	movwf	??_LECT2+2
  1151  00E8  084D               	movf	??_LECT2+2,w
  1152  00E9  00B5               	movwf	_Cen2
  1153                           
  1154                           ;main.c: 175:     Dec2 = (BOTON-Cen2*100)/10;
  1155  00EA  300A               	movlw	10
  1156  00EB  00C2               	movwf	___awdiv@divisor
  1157  00EC  3000               	movlw	0
  1158  00ED  00C3               	movwf	___awdiv@divisor+1
  1159  00EE  0835               	movf	_Cen2,w
  1160  00EF  00CB               	movwf	??_LECT2
  1161  00F0  01CC               	clrf	??_LECT2+1
  1162  00F1  084B               	movf	??_LECT2,w
  1163  00F2  00BC               	movwf	___wmul@multiplier
  1164  00F3  084C               	movf	??_LECT2+1,w
  1165  00F4  00BD               	movwf	___wmul@multiplier+1
  1166  00F5  309C               	movlw	156
  1167  00F6  00BE               	movwf	___wmul@multiplicand
  1168  00F7  30FF               	movlw	255
  1169  00F8  00BF               	movwf	___wmul@multiplicand+1
  1170  00F9  120A  118A  23BB  120A  118A  	fcall	___wmul
  1171  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1172  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1173  0100  0820               	movf	_BOTON,w
  1174  0101  073C               	addwf	?___wmul,w
  1175  0102  00C4               	movwf	___awdiv@dividend
  1176  0103  083D               	movf	?___wmul+1,w
  1177  0104  1803               	skipnc
  1178  0105  0A3D               	incf	?___wmul+1,w
  1179  0106  00C5               	movwf	___awdiv@dividend+1
  1180  0107  120A  118A  21D2  120A  118A  	fcall	___awdiv
  1181  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1182  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1183  010E  0842               	movf	?___awdiv,w
  1184  010F  00CD               	movwf	??_LECT2+2
  1185  0110  084D               	movf	??_LECT2+2,w
  1186  0111  00B4               	movwf	_Dec2
  1187                           
  1188                           ;main.c: 176:     Un2 = (BOTON-Cen2*100-Dec2*10);
  1189  0112  309C               	movlw	156
  1190  0113  00CB               	movwf	??_LECT2
  1191  0114  084B               	movf	??_LECT2,w
  1192  0115  00BC               	movwf	___bmul@multiplicand
  1193  0116  0835               	movf	_Cen2,w
  1194  0117  120A  118A  23E2  120A  118A  	fcall	___bmul
  1195  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1196  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1197  011E  00CC               	movwf	??_LECT2+1
  1198  011F  30F6               	movlw	246
  1199  0120  00CD               	movwf	??_LECT2+2
  1200  0121  084D               	movf	??_LECT2+2,w
  1201  0122  00BC               	movwf	___bmul@multiplicand
  1202  0123  0834               	movf	_Dec2,w
  1203  0124  120A  118A  23E2  120A  118A  	fcall	___bmul
  1204  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1205  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1206  012B  074C               	addwf	??_LECT2+1,w
  1207  012C  0720               	addwf	_BOTON,w
  1208  012D  00CE               	movwf	??_LECT2+3
  1209  012E  084E               	movf	??_LECT2+3,w
  1210  012F  00B3               	movwf	_Un2
  1211  0130                     l1688:
  1212                           
  1213                           ;main.c: 177:     AC2 = num_ascii(Cen2);
  1214  0130  0835               	movf	_Cen2,w
  1215  0131  120A  118A  22D8  120A  118A  	fcall	_num_ascii
  1216  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1217  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0138  00CB               	movwf	??_LECT2
  1219  0139  084B               	movf	??_LECT2,w
  1220  013A  00B2               	movwf	_AC2
  1221  013B                     l1690:
  1222                           
  1223                           ;main.c: 178:     AD2 = num_ascii(Dec2);
  1224  013B  0834               	movf	_Dec2,w
  1225  013C  120A  118A  22D8  120A  118A  	fcall	_num_ascii
  1226  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0143  00CB               	movwf	??_LECT2
  1229  0144  084B               	movf	??_LECT2,w
  1230  0145  00B1               	movwf	_AD2
  1231  0146                     l1692:
  1232                           
  1233                           ;main.c: 179:     AU2 = num_ascii(Un2);
  1234  0146  0833               	movf	_Un2,w
  1235  0147  120A  118A  22D8  120A  118A  	fcall	_num_ascii
  1236  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1237  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1238  014E  00CB               	movwf	??_LECT2
  1239  014F  084B               	movf	??_LECT2,w
  1240  0150  00B0               	movwf	_AU2
  1241  0151                     l159:
  1242  0151  0008               	return
  1243  0152                     __end_of_LECT2:
  1244                           
  1245                           	psect	text4
  1246  0152                     __ptext4:	
  1247 ;; *************** function _LECT1 *****************
  1248 ;; Defined at:
  1249 ;;		line 165 in file "main.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1263 ;;      Params:         0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0
  1265 ;;      Temps:          0       4       0       0       0
  1266 ;;      Totals:         0       4       0       0       0
  1267 ;;Total ram usage:        4 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; Hardware stack levels required when called: 4
  1270 ;; This function calls:
  1271 ;;		___awdiv
  1272 ;;		___bmul
  1273 ;;		___wmul
  1274 ;;		_num_ascii
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           
  1281                           ;psect for function _LECT1
  1282  0152                     _LECT1:
  1283  0152                     l1678:	
  1284                           ;incstack = 0
  1285                           ; Regs used in _LECT1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1286                           
  1287                           
  1288                           ;main.c: 166:     Cen1 = CONT/100;
  1289  0152  3064               	movlw	100
  1290  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0155  00C2               	movwf	___awdiv@divisor
  1293  0156  3000               	movlw	0
  1294  0157  00C3               	movwf	___awdiv@divisor+1
  1295  0158  082C               	movf	_CONT,w
  1296  0159  00CB               	movwf	??_LECT1
  1297  015A  01CC               	clrf	??_LECT1+1
  1298  015B  084B               	movf	??_LECT1,w
  1299  015C  00C4               	movwf	___awdiv@dividend
  1300  015D  084C               	movf	??_LECT1+1,w
  1301  015E  00C5               	movwf	___awdiv@dividend+1
  1302  015F  120A  118A  21D2  120A  118A  	fcall	___awdiv
  1303  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1304  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1305  0166  0842               	movf	?___awdiv,w
  1306  0167  00CD               	movwf	??_LECT1+2
  1307  0168  084D               	movf	??_LECT1+2,w
  1308  0169  00BB               	movwf	_Cen1
  1309                           
  1310                           ;main.c: 167:     Dec1 = (CONT-Cen1*100)/10;
  1311  016A  300A               	movlw	10
  1312  016B  00C2               	movwf	___awdiv@divisor
  1313  016C  3000               	movlw	0
  1314  016D  00C3               	movwf	___awdiv@divisor+1
  1315  016E  083B               	movf	_Cen1,w
  1316  016F  00CB               	movwf	??_LECT1
  1317  0170  01CC               	clrf	??_LECT1+1
  1318  0171  084B               	movf	??_LECT1,w
  1319  0172  00BC               	movwf	___wmul@multiplier
  1320  0173  084C               	movf	??_LECT1+1,w
  1321  0174  00BD               	movwf	___wmul@multiplier+1
  1322  0175  309C               	movlw	156
  1323  0176  00BE               	movwf	___wmul@multiplicand
  1324  0177  30FF               	movlw	255
  1325  0178  00BF               	movwf	___wmul@multiplicand+1
  1326  0179  120A  118A  23BB  120A  118A  	fcall	___wmul
  1327  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1328  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0180  082C               	movf	_CONT,w
  1330  0181  073C               	addwf	?___wmul,w
  1331  0182  00C4               	movwf	___awdiv@dividend
  1332  0183  083D               	movf	?___wmul+1,w
  1333  0184  1803               	skipnc
  1334  0185  0A3D               	incf	?___wmul+1,w
  1335  0186  00C5               	movwf	___awdiv@dividend+1
  1336  0187  120A  118A  21D2  120A  118A  	fcall	___awdiv
  1337  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1338  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1339  018E  0842               	movf	?___awdiv,w
  1340  018F  00CD               	movwf	??_LECT1+2
  1341  0190  084D               	movf	??_LECT1+2,w
  1342  0191  00BA               	movwf	_Dec1
  1343                           
  1344                           ;main.c: 168:     Un1 = (CONT-Cen1*100-Dec1*10);
  1345  0192  309C               	movlw	156
  1346  0193  00CB               	movwf	??_LECT1
  1347  0194  084B               	movf	??_LECT1,w
  1348  0195  00BC               	movwf	___bmul@multiplicand
  1349  0196  083B               	movf	_Cen1,w
  1350  0197  120A  118A  23E2  120A  118A  	fcall	___bmul
  1351  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1352  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1353  019E  00CC               	movwf	??_LECT1+1
  1354  019F  30F6               	movlw	246
  1355  01A0  00CD               	movwf	??_LECT1+2
  1356  01A1  084D               	movf	??_LECT1+2,w
  1357  01A2  00BC               	movwf	___bmul@multiplicand
  1358  01A3  083A               	movf	_Dec1,w
  1359  01A4  120A  118A  23E2  120A  118A  	fcall	___bmul
  1360  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1361  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1362  01AB  074C               	addwf	??_LECT1+1,w
  1363  01AC  072C               	addwf	_CONT,w
  1364  01AD  00CE               	movwf	??_LECT1+3
  1365  01AE  084E               	movf	??_LECT1+3,w
  1366  01AF  00B9               	movwf	_Un1
  1367  01B0                     l1680:
  1368                           
  1369                           ;main.c: 169:     AC1 = num_ascii(Cen1);
  1370  01B0  083B               	movf	_Cen1,w
  1371  01B1  120A  118A  22D8  120A  118A  	fcall	_num_ascii
  1372  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1373  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1374  01B8  00CB               	movwf	??_LECT1
  1375  01B9  084B               	movf	??_LECT1,w
  1376  01BA  00B8               	movwf	_AC1
  1377  01BB                     l1682:
  1378                           
  1379                           ;main.c: 170:     AD1 = num_ascii(Dec1);
  1380  01BB  083A               	movf	_Dec1,w
  1381  01BC  120A  118A  22D8  120A  118A  	fcall	_num_ascii
  1382  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1383  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1384  01C3  00CB               	movwf	??_LECT1
  1385  01C4  084B               	movf	??_LECT1,w
  1386  01C5  00B7               	movwf	_AD1
  1387  01C6                     l1684:
  1388                           
  1389                           ;main.c: 171:     AU1 = num_ascii(Un1);
  1390  01C6  0839               	movf	_Un1,w
  1391  01C7  120A  118A  22D8  120A  118A  	fcall	_num_ascii
  1392  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1393  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1394  01CE  00CB               	movwf	??_LECT1
  1395  01CF  084B               	movf	??_LECT1,w
  1396  01D0  00B6               	movwf	_AU1
  1397  01D1                     l156:
  1398  01D1  0008               	return
  1399  01D2                     __end_of_LECT1:
  1400                           
  1401                           	psect	text5
  1402  02D8                     __ptext5:	
  1403 ;; *************** function _num_ascii *****************
  1404 ;; Defined at:
  1405 ;;		line 3 in file "ASCII.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;  num             1    wreg     unsigned char 
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  num             1    2[BANK0 ] unsigned char 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      unsigned char 
  1412 ;; Registers used:
  1413 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1419 ;;      Params:         0       0       0       0       0
  1420 ;;      Locals:         0       1       0       0       0
  1421 ;;      Temps:          0       2       0       0       0
  1422 ;;      Totals:         0       3       0       0       0
  1423 ;;Total ram usage:        3 bytes
  1424 ;; Hardware stack levels used: 1
  1425 ;; Hardware stack levels required when called: 3
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_LECT1
  1430 ;;		_LECT2
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           
  1435                           ;psect for function _num_ascii
  1436  02D8                     _num_ascii:
  1437                           
  1438                           ;incstack = 0
  1439                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  1440                           ;num_ascii@num stored from wreg
  1441  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1442  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1443  02DA  00BE               	movwf	num_ascii@num
  1444  02DB                     l1308:
  1445                           
  1446                           ;ASCII.c: 4:  switch(num){
  1447  02DB  2AF0               	goto	l1378
  1448  02DC                     l1310:
  1449                           
  1450                           ;ASCII.c: 6:   return 0x30;
  1451  02DC  3030               	movlw	48
  1452  02DD  2B18               	goto	l186
  1453  02DE                     l1322:
  1454                           
  1455                           ;ASCII.c: 14:   return 0x31;
  1456  02DE  3031               	movlw	49
  1457  02DF  2B18               	goto	l186
  1458  02E0                     l1328:
  1459                           
  1460                           ;ASCII.c: 18:   return 0x32;
  1461  02E0  3032               	movlw	50
  1462  02E1  2B18               	goto	l186
  1463  02E2                     l1334:
  1464                           
  1465                           ;ASCII.c: 22:   return 0x33;
  1466  02E2  3033               	movlw	51
  1467  02E3  2B18               	goto	l186
  1468  02E4                     l1340:
  1469                           
  1470                           ;ASCII.c: 26:   return 0x34;
  1471  02E4  3034               	movlw	52
  1472  02E5  2B18               	goto	l186
  1473  02E6                     l1346:
  1474                           
  1475                           ;ASCII.c: 30:   return 0x35;
  1476  02E6  3035               	movlw	53
  1477  02E7  2B18               	goto	l186
  1478  02E8                     l1352:
  1479                           
  1480                           ;ASCII.c: 34:   return 0x36;
  1481  02E8  3036               	movlw	54
  1482  02E9  2B18               	goto	l186
  1483  02EA                     l1358:
  1484                           
  1485                           ;ASCII.c: 38:   return 0x37;
  1486  02EA  3037               	movlw	55
  1487  02EB  2B18               	goto	l186
  1488  02EC                     l1364:
  1489                           
  1490                           ;ASCII.c: 42:   return 0x38;
  1491  02EC  3038               	movlw	56
  1492  02ED  2B18               	goto	l186
  1493  02EE                     l1370:
  1494                           
  1495                           ;ASCII.c: 46:   return 0x39;
  1496  02EE  3039               	movlw	57
  1497  02EF  2B18               	goto	l186
  1498  02F0                     l1378:
  1499  02F0  083E               	movf	num_ascii@num,w
  1500  02F1  00BC               	movwf	??_num_ascii
  1501  02F2  01BD               	clrf	??_num_ascii+1
  1502                           
  1503                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1504                           ; Switch size 1, requested type "simple"
  1505                           ; Number of cases is 1, Range of values is 0 to 0
  1506                           ; switch strategies available:
  1507                           ; Name         Instructions Cycles
  1508                           ; simple_byte            4     3 (average)
  1509                           ; direct_byte           11     8 (fixed)
  1510                           ; jumptable            260     6 (fixed)
  1511                           ;	Chosen strategy is simple_byte
  1512  02F3  083D               	movf	??_num_ascii+1,w
  1513  02F4  3A00               	xorlw	0	; case 0
  1514  02F5  1903               	skipnz
  1515  02F6  2AF8               	goto	l1810
  1516  02F7  2ADC               	goto	l1310
  1517  02F8                     l1810:
  1518                           
  1519                           ; Switch size 1, requested type "simple"
  1520                           ; Number of cases is 10, Range of values is 0 to 9
  1521                           ; switch strategies available:
  1522                           ; Name         Instructions Cycles
  1523                           ; simple_byte           31    16 (average)
  1524                           ; direct_byte           38     8 (fixed)
  1525                           ; jumptable            260     6 (fixed)
  1526                           ;	Chosen strategy is simple_byte
  1527  02F8  083C               	movf	??_num_ascii,w
  1528  02F9  3A00               	xorlw	0	; case 0
  1529  02FA  1903               	skipnz
  1530  02FB  2ADC               	goto	l1310
  1531  02FC  3A01               	xorlw	1	; case 1
  1532  02FD  1903               	skipnz
  1533  02FE  2ADE               	goto	l1322
  1534  02FF  3A03               	xorlw	3	; case 2
  1535  0300  1903               	skipnz
  1536  0301  2AE0               	goto	l1328
  1537  0302  3A01               	xorlw	1	; case 3
  1538  0303  1903               	skipnz
  1539  0304  2AE2               	goto	l1334
  1540  0305  3A07               	xorlw	7	; case 4
  1541  0306  1903               	skipnz
  1542  0307  2AE4               	goto	l1340
  1543  0308  3A01               	xorlw	1	; case 5
  1544  0309  1903               	skipnz
  1545  030A  2AE6               	goto	l1346
  1546  030B  3A03               	xorlw	3	; case 6
  1547  030C  1903               	skipnz
  1548  030D  2AE8               	goto	l1352
  1549  030E  3A01               	xorlw	1	; case 7
  1550  030F  1903               	skipnz
  1551  0310  2AEA               	goto	l1358
  1552  0311  3A0F               	xorlw	15	; case 8
  1553  0312  1903               	skipnz
  1554  0313  2AEC               	goto	l1364
  1555  0314  3A01               	xorlw	1	; case 9
  1556  0315  1903               	skipnz
  1557  0316  2AEE               	goto	l1370
  1558  0317  2ADC               	goto	l1310
  1559  0318                     l186:
  1560  0318  0008               	return
  1561  0319                     __end_of_num_ascii:
  1562                           
  1563                           	psect	text6
  1564  03BB                     __ptext6:	
  1565 ;; *************** function ___wmul *****************
  1566 ;; Defined at:
  1567 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1570 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  product         2    4[BANK0 ] unsigned int 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  2    0[BANK0 ] unsigned int 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1582 ;;      Params:         0       4       0       0       0
  1583 ;;      Locals:         0       2       0       0       0
  1584 ;;      Temps:          0       0       0       0       0
  1585 ;;      Totals:         0       6       0       0       0
  1586 ;;Total ram usage:        6 bytes
  1587 ;; Hardware stack levels used: 1
  1588 ;; Hardware stack levels required when called: 3
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_LECT1
  1593 ;;		_LECT2
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function ___wmul
  1599  03BB                     ___wmul:
  1600  03BB                     l1462:	
  1601                           ;incstack = 0
  1602                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1603                           
  1604  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  1605  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  1606  03BD  01C0               	clrf	___wmul@product
  1607  03BE  01C1               	clrf	___wmul@product+1
  1608  03BF                     l1464:
  1609  03BF  1C3C               	btfss	___wmul@multiplier,0
  1610  03C0  2BC2               	goto	u511
  1611  03C1  2BC3               	goto	u510
  1612  03C2                     u511:
  1613  03C2  2BC9               	goto	l312
  1614  03C3                     u510:
  1615  03C3                     l1466:
  1616  03C3  083E               	movf	___wmul@multiplicand,w
  1617  03C4  07C0               	addwf	___wmul@product,f
  1618  03C5  1803               	skipnc
  1619  03C6  0AC1               	incf	___wmul@product+1,f
  1620  03C7  083F               	movf	___wmul@multiplicand+1,w
  1621  03C8  07C1               	addwf	___wmul@product+1,f
  1622  03C9                     l312:
  1623  03C9  3001               	movlw	1
  1624  03CA                     u525:
  1625  03CA  1003               	clrc
  1626  03CB  0DBE               	rlf	___wmul@multiplicand,f
  1627  03CC  0DBF               	rlf	___wmul@multiplicand+1,f
  1628  03CD  3EFF               	addlw	-1
  1629  03CE  1D03               	skipz
  1630  03CF  2BCA               	goto	u525
  1631  03D0                     l1468:
  1632  03D0  3001               	movlw	1
  1633  03D1                     u535:
  1634  03D1  1003               	clrc
  1635  03D2  0CBD               	rrf	___wmul@multiplier+1,f
  1636  03D3  0CBC               	rrf	___wmul@multiplier,f
  1637  03D4  3EFF               	addlw	-1
  1638  03D5  1D03               	skipz
  1639  03D6  2BD1               	goto	u535
  1640  03D7                     l1470:
  1641  03D7  083C               	movf	___wmul@multiplier,w
  1642  03D8  043D               	iorwf	___wmul@multiplier+1,w
  1643  03D9  1D03               	btfss	3,2
  1644  03DA  2BDC               	goto	u541
  1645  03DB  2BDD               	goto	u540
  1646  03DC                     u541:
  1647  03DC  2BBF               	goto	l1464
  1648  03DD                     u540:
  1649  03DD                     l1472:
  1650  03DD  0841               	movf	___wmul@product+1,w
  1651  03DE  00BD               	movwf	?___wmul+1
  1652  03DF  0840               	movf	___wmul@product,w
  1653  03E0  00BC               	movwf	?___wmul
  1654  03E1                     l314:
  1655  03E1  0008               	return
  1656  03E2                     __end_of___wmul:
  1657                           
  1658                           	psect	text7
  1659  03E2                     __ptext7:	
  1660 ;; *************** function ___bmul *****************
  1661 ;; Defined at:
  1662 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  multiplier      1    wreg     unsigned char 
  1665 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1668 ;;  product         1    2[BANK0 ] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      unsigned char 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       1       0       0       0
  1679 ;;      Locals:         0       2       0       0       0
  1680 ;;      Temps:          0       1       0       0       0
  1681 ;;      Totals:         0       4       0       0       0
  1682 ;;Total ram usage:        4 bytes
  1683 ;; Hardware stack levels used: 1
  1684 ;; Hardware stack levels required when called: 3
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_LECT1
  1689 ;;		_LECT2
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           
  1694                           ;psect for function ___bmul
  1695  03E2                     ___bmul:
  1696                           
  1697                           ;incstack = 0
  1698                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1699                           ;___bmul@multiplier stored from wreg
  1700  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1701  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1702  03E4  00BF               	movwf	___bmul@multiplier
  1703  03E5                     l1476:
  1704  03E5  01BE               	clrf	___bmul@product
  1705  03E6                     l1478:
  1706  03E6  1C3F               	btfss	___bmul@multiplier,0
  1707  03E7  2BE9               	goto	u551
  1708  03E8  2BEA               	goto	u550
  1709  03E9                     u551:
  1710  03E9  2BEE               	goto	l1482
  1711  03EA                     u550:
  1712  03EA                     l1480:
  1713  03EA  083C               	movf	___bmul@multiplicand,w
  1714  03EB  00BD               	movwf	??___bmul
  1715  03EC  083D               	movf	??___bmul,w
  1716  03ED  07BE               	addwf	___bmul@product,f
  1717  03EE                     l1482:
  1718  03EE  1003               	clrc
  1719  03EF  0DBC               	rlf	___bmul@multiplicand,f
  1720  03F0                     l1484:
  1721  03F0  1003               	clrc
  1722  03F1  0CBF               	rrf	___bmul@multiplier,f
  1723  03F2  083F               	movf	___bmul@multiplier,w
  1724  03F3  1D03               	btfss	3,2
  1725  03F4  2BF6               	goto	u561
  1726  03F5  2BF7               	goto	u560
  1727  03F6                     u561:
  1728  03F6  2BE6               	goto	l1478
  1729  03F7                     u560:
  1730  03F7                     l1486:
  1731  03F7  083E               	movf	___bmul@product,w
  1732  03F8                     l338:
  1733  03F8  0008               	return
  1734  03F9                     __end_of___bmul:
  1735                           
  1736                           	psect	text8
  1737  01D2                     __ptext8:	
  1738 ;; *************** function ___awdiv *****************
  1739 ;; Defined at:
  1740 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  divisor         2    6[BANK0 ] int 
  1743 ;;  dividend        2    8[BANK0 ] int 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  quotient        2   13[BANK0 ] int 
  1746 ;;  sign            1   12[BANK0 ] unsigned char 
  1747 ;;  counter         1   11[BANK0 ] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  2    6[BANK0 ] int 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1757 ;;      Params:         0       4       0       0       0
  1758 ;;      Locals:         0       4       0       0       0
  1759 ;;      Temps:          0       1       0       0       0
  1760 ;;      Totals:         0       9       0       0       0
  1761 ;;Total ram usage:        9 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 3
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_LECT1
  1768 ;;		_LECT2
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function ___awdiv
  1774  01D2                     ___awdiv:
  1775  01D2                     l1490:	
  1776                           ;incstack = 0
  1777                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1778                           
  1779  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1780  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1781  01D4  01C8               	clrf	___awdiv@sign
  1782  01D5                     l1492:
  1783  01D5  1FC3               	btfss	___awdiv@divisor+1,7
  1784  01D6  29D8               	goto	u571
  1785  01D7  29D9               	goto	u570
  1786  01D8                     u571:
  1787  01D8  29E0               	goto	l1498
  1788  01D9                     u570:
  1789  01D9                     l1494:
  1790  01D9  09C2               	comf	___awdiv@divisor,f
  1791  01DA  09C3               	comf	___awdiv@divisor+1,f
  1792  01DB  0AC2               	incf	___awdiv@divisor,f
  1793  01DC  1903               	skipnz
  1794  01DD  0AC3               	incf	___awdiv@divisor+1,f
  1795  01DE                     l1496:
  1796  01DE  01C8               	clrf	___awdiv@sign
  1797  01DF  0AC8               	incf	___awdiv@sign,f
  1798  01E0                     l1498:
  1799  01E0  1FC5               	btfss	___awdiv@dividend+1,7
  1800  01E1  29E3               	goto	u581
  1801  01E2  29E4               	goto	u580
  1802  01E3                     u581:
  1803  01E3  29ED               	goto	l1504
  1804  01E4                     u580:
  1805  01E4                     l1500:
  1806  01E4  09C4               	comf	___awdiv@dividend,f
  1807  01E5  09C5               	comf	___awdiv@dividend+1,f
  1808  01E6  0AC4               	incf	___awdiv@dividend,f
  1809  01E7  1903               	skipnz
  1810  01E8  0AC5               	incf	___awdiv@dividend+1,f
  1811  01E9                     l1502:
  1812  01E9  3001               	movlw	1
  1813  01EA  00C6               	movwf	??___awdiv
  1814  01EB  0846               	movf	??___awdiv,w
  1815  01EC  06C8               	xorwf	___awdiv@sign,f
  1816  01ED                     l1504:
  1817  01ED  01C9               	clrf	___awdiv@quotient
  1818  01EE  01CA               	clrf	___awdiv@quotient+1
  1819  01EF                     l1506:
  1820  01EF  0842               	movf	___awdiv@divisor,w
  1821  01F0  0443               	iorwf	___awdiv@divisor+1,w
  1822  01F1  1903               	btfsc	3,2
  1823  01F2  29F4               	goto	u591
  1824  01F3  29F5               	goto	u590
  1825  01F4                     u591:
  1826  01F4  2A2C               	goto	l1526
  1827  01F5                     u590:
  1828  01F5                     l1508:
  1829  01F5  01C7               	clrf	___awdiv@counter
  1830  01F6  0AC7               	incf	___awdiv@counter,f
  1831  01F7  2A03               	goto	l1514
  1832  01F8                     l1510:
  1833  01F8  3001               	movlw	1
  1834  01F9                     u605:
  1835  01F9  1003               	clrc
  1836  01FA  0DC2               	rlf	___awdiv@divisor,f
  1837  01FB  0DC3               	rlf	___awdiv@divisor+1,f
  1838  01FC  3EFF               	addlw	-1
  1839  01FD  1D03               	skipz
  1840  01FE  29F9               	goto	u605
  1841  01FF                     l1512:
  1842  01FF  3001               	movlw	1
  1843  0200  00C6               	movwf	??___awdiv
  1844  0201  0846               	movf	??___awdiv,w
  1845  0202  07C7               	addwf	___awdiv@counter,f
  1846  0203                     l1514:
  1847  0203  1FC3               	btfss	___awdiv@divisor+1,7
  1848  0204  2A06               	goto	u611
  1849  0205  2A07               	goto	u610
  1850  0206                     u611:
  1851  0206  29F8               	goto	l1510
  1852  0207                     u610:
  1853  0207                     l1516:
  1854  0207  3001               	movlw	1
  1855  0208                     u625:
  1856  0208  1003               	clrc
  1857  0209  0DC9               	rlf	___awdiv@quotient,f
  1858  020A  0DCA               	rlf	___awdiv@quotient+1,f
  1859  020B  3EFF               	addlw	-1
  1860  020C  1D03               	skipz
  1861  020D  2A08               	goto	u625
  1862  020E  0843               	movf	___awdiv@divisor+1,w
  1863  020F  0245               	subwf	___awdiv@dividend+1,w
  1864  0210  1D03               	skipz
  1865  0211  2A14               	goto	u635
  1866  0212  0842               	movf	___awdiv@divisor,w
  1867  0213  0244               	subwf	___awdiv@dividend,w
  1868  0214                     u635:
  1869  0214  1C03               	skipc
  1870  0215  2A17               	goto	u631
  1871  0216  2A18               	goto	u630
  1872  0217                     u631:
  1873  0217  2A1F               	goto	l1522
  1874  0218                     u630:
  1875  0218                     l1518:
  1876  0218  0842               	movf	___awdiv@divisor,w
  1877  0219  02C4               	subwf	___awdiv@dividend,f
  1878  021A  0843               	movf	___awdiv@divisor+1,w
  1879  021B  1C03               	skipc
  1880  021C  03C5               	decf	___awdiv@dividend+1,f
  1881  021D  02C5               	subwf	___awdiv@dividend+1,f
  1882  021E                     l1520:
  1883  021E  1449               	bsf	___awdiv@quotient,0
  1884  021F                     l1522:
  1885  021F  3001               	movlw	1
  1886  0220                     u645:
  1887  0220  1003               	clrc
  1888  0221  0CC3               	rrf	___awdiv@divisor+1,f
  1889  0222  0CC2               	rrf	___awdiv@divisor,f
  1890  0223  3EFF               	addlw	-1
  1891  0224  1D03               	skipz
  1892  0225  2A20               	goto	u645
  1893  0226                     l1524:
  1894  0226  3001               	movlw	1
  1895  0227  02C7               	subwf	___awdiv@counter,f
  1896  0228  1D03               	btfss	3,2
  1897  0229  2A2B               	goto	u651
  1898  022A  2A2C               	goto	u650
  1899  022B                     u651:
  1900  022B  2A07               	goto	l1516
  1901  022C                     u650:
  1902  022C                     l1526:
  1903  022C  0848               	movf	___awdiv@sign,w
  1904  022D  1903               	btfsc	3,2
  1905  022E  2A30               	goto	u661
  1906  022F  2A31               	goto	u660
  1907  0230                     u661:
  1908  0230  2A36               	goto	l1530
  1909  0231                     u660:
  1910  0231                     l1528:
  1911  0231  09C9               	comf	___awdiv@quotient,f
  1912  0232  09CA               	comf	___awdiv@quotient+1,f
  1913  0233  0AC9               	incf	___awdiv@quotient,f
  1914  0234  1903               	skipnz
  1915  0235  0ACA               	incf	___awdiv@quotient+1,f
  1916  0236                     l1530:
  1917  0236  084A               	movf	___awdiv@quotient+1,w
  1918  0237  00C3               	movwf	?___awdiv+1
  1919  0238  0849               	movf	___awdiv@quotient,w
  1920  0239  00C2               	movwf	?___awdiv
  1921  023A                     l465:
  1922  023A  0008               	return
  1923  023B                     __end_of___awdiv:
  1924                           
  1925                           	psect	text9
  1926  023B                     __ptext9:	
  1927 ;; *************** function _ISR *****************
  1928 ;; Defined at:
  1929 ;;		line 76 in file "main.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1943 ;;      Params:         0       0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0
  1945 ;;      Temps:          4       0       0       0       0
  1946 ;;      Totals:         4       0       0       0       0
  1947 ;;Total ram usage:        4 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; Hardware stack levels required when called: 2
  1950 ;; This function calls:
  1951 ;;		_CONTADOR
  1952 ;;		_envio
  1953 ;; This function is called by:
  1954 ;;		Interrupt level 1
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           
  1959                           ;psect for function _ISR
  1960  023B                     _ISR:
  1961  023B                     i1l1694:
  1962                           
  1963                           ;main.c: 77:     if (PIR1bits.RCIF == 1){
  1964  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1965  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1966  023D  1E8C               	btfss	12,5	;volatile
  1967  023E  2A40               	goto	u87_21
  1968  023F  2A41               	goto	u87_20
  1969  0240                     u87_21:
  1970  0240  2A4A               	goto	i1l1700
  1971  0241                     u87_20:
  1972  0241                     i1l1696:
  1973                           
  1974                           ;main.c: 78:         signo = RCREG;
  1975  0241  081A               	movf	26,w	;volatile
  1976  0242  00F8               	movwf	??_ISR
  1977  0243  0878               	movf	??_ISR,w
  1978  0244  00AF               	movwf	_signo
  1979  0245                     i1l1698:
  1980                           
  1981                           ;main.c: 79:         CONTADOR();
  1982  0245  120A  118A  2026  120A  118A  	fcall	_CONTADOR
  1983  024A                     i1l1700:
  1984                           
  1985                           ;main.c: 81:     if (PIR1bits.TXIF == 1){
  1986  024A  1283               	bcf	3,5	;RP0=0, select bank0
  1987  024B  1303               	bcf	3,6	;RP1=0, select bank0
  1988  024C  1E0C               	btfss	12,4	;volatile
  1989  024D  2A4F               	goto	u88_21
  1990  024E  2A50               	goto	u88_20
  1991  024F                     u88_21:
  1992  024F  2A55               	goto	i1l1704
  1993  0250                     u88_20:
  1994  0250                     i1l1702:
  1995                           
  1996                           ;main.c: 82:         envio();
  1997  0250  120A  118A  238E  120A  118A  	fcall	_envio
  1998  0255                     i1l1704:
  1999                           
  2000                           ;main.c: 84:     if (INTCONbits.RBIF == 1){
  2001  0255  1C0B               	btfss	11,0	;volatile
  2002  0256  2A58               	goto	u89_21
  2003  0257  2A59               	goto	u89_20
  2004  0258                     u89_21:
  2005  0258  2A8E               	goto	i1l140
  2006  0259                     u89_20:
  2007  0259                     i1l1706:
  2008                           
  2009                           ;main.c: 85:         INTCONbits.RBIF = 0;
  2010  0259  100B               	bcf	11,0	;volatile
  2011  025A                     i1l1708:
  2012                           
  2013                           ;main.c: 87:         AR1 = PORTBbits.RB0;
  2014  025A  3000               	movlw	0
  2015  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2016  025C  1303               	bcf	3,6	;RP1=0, select bank0
  2017  025D  1806               	btfsc	6,0	;volatile
  2018  025E  3001               	movlw	1
  2019  025F  00AB               	movwf	_AR1
  2020  0260                     i1l1710:
  2021                           
  2022                           ;main.c: 88:         if (AR1==0){
  2023  0260  082B               	movf	_AR1,w
  2024  0261  1D03               	btfss	3,2
  2025  0262  2A64               	goto	u90_21
  2026  0263  2A65               	goto	u90_20
  2027  0264                     u90_21:
  2028  0264  2A66               	goto	i1l1714
  2029  0265                     u90_20:
  2030  0265                     i1l1712:
  2031                           
  2032                           ;main.c: 89:             AR2=0;
  2033  0265  01AA               	clrf	_AR2
  2034  0266                     i1l1714:
  2035                           
  2036                           ;main.c: 91:         if (AR2==0){
  2037  0266  082A               	movf	_AR2,w
  2038  0267  1D03               	btfss	3,2
  2039  0268  2A6A               	goto	u91_21
  2040  0269  2A6B               	goto	u91_20
  2041  026A                     u91_21:
  2042  026A  2A76               	goto	i1l1722
  2043  026B                     u91_20:
  2044  026B                     i1l1716:
  2045                           
  2046                           ;main.c: 92:             if (AR1==1){
  2047  026B  032B               	decf	_AR1,w
  2048  026C  1D03               	btfss	3,2
  2049  026D  2A6F               	goto	u92_21
  2050  026E  2A70               	goto	u92_20
  2051  026F                     u92_21:
  2052  026F  2A76               	goto	i1l1722
  2053  0270                     u92_20:
  2054  0270                     i1l1718:
  2055                           
  2056                           ;main.c: 93:                 BOTON++;
  2057  0270  3001               	movlw	1
  2058  0271  00F8               	movwf	??_ISR
  2059  0272  0878               	movf	??_ISR,w
  2060  0273  07A0               	addwf	_BOTON,f
  2061  0274                     i1l1720:
  2062                           
  2063                           ;main.c: 94:                 AR2=1;
  2064  0274  01AA               	clrf	_AR2
  2065  0275  0AAA               	incf	_AR2,f
  2066  0276                     i1l1722:
  2067                           
  2068                           ;main.c: 97:         AR3 = PORTBbits.RB1;
  2069  0276  3000               	movlw	0
  2070  0277  1886               	btfsc	6,1	;volatile
  2071  0278  3001               	movlw	1
  2072  0279  00A9               	movwf	_AR3
  2073  027A                     i1l1724:
  2074                           
  2075                           ;main.c: 98:         if (AR3==0){
  2076  027A  0829               	movf	_AR3,w
  2077  027B  1D03               	btfss	3,2
  2078  027C  2A7E               	goto	u93_21
  2079  027D  2A7F               	goto	u93_20
  2080  027E                     u93_21:
  2081  027E  2A80               	goto	i1l1728
  2082  027F                     u93_20:
  2083  027F                     i1l1726:
  2084                           
  2085                           ;main.c: 99:             AR4=0;
  2086  027F  01A8               	clrf	_AR4
  2087  0280                     i1l1728:
  2088                           
  2089                           ;main.c: 101:         if (AR4==0){
  2090  0280  0828               	movf	_AR4,w
  2091  0281  1D03               	btfss	3,2
  2092  0282  2A84               	goto	u94_21
  2093  0283  2A85               	goto	u94_20
  2094  0284                     u94_21:
  2095  0284  2A8E               	goto	i1l140
  2096  0285                     u94_20:
  2097  0285                     i1l1730:
  2098                           
  2099                           ;main.c: 102:             if (AR3==1){
  2100  0285  0329               	decf	_AR3,w
  2101  0286  1D03               	btfss	3,2
  2102  0287  2A89               	goto	u95_21
  2103  0288  2A8A               	goto	u95_20
  2104  0289                     u95_21:
  2105  0289  2A8E               	goto	i1l140
  2106  028A                     u95_20:
  2107  028A                     i1l1732:
  2108                           
  2109                           ;main.c: 103:                 BOTON--;
  2110  028A  3001               	movlw	1
  2111  028B  02A0               	subwf	_BOTON,f
  2112  028C                     i1l1734:
  2113                           
  2114                           ;main.c: 104:                 AR4=1;
  2115  028C  01A8               	clrf	_AR4
  2116  028D  0AA8               	incf	_AR4,f
  2117  028E                     i1l140:
  2118  028E  087B               	movf	??_ISR+3,w
  2119  028F  008A               	movwf	10
  2120  0290  087A               	movf	??_ISR+2,w
  2121  0291  0084               	movwf	4
  2122  0292  0E79               	swapf	??_ISR+1,w
  2123  0293  0083               	movwf	3
  2124  0294  0EFE               	swapf	btemp,f
  2125  0295  0E7E               	swapf	btemp,w
  2126  0296  0009               	retfie
  2127  0297                     __end_of_ISR:
  2128                           
  2129                           	psect	intentry
  2130  0004                     __pintentry:	
  2131                           ;incstack = 0
  2132                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2133                           
  2134  0004                     interrupt_function:
  2135  007E                     saved_w	set	btemp
  2136  0004  00FE               	movwf	btemp
  2137  0005  0E03               	swapf	3,w
  2138  0006  00F9               	movwf	??_ISR+1
  2139  0007  0804               	movf	4,w
  2140  0008  00FA               	movwf	??_ISR+2
  2141  0009  080A               	movf	10,w
  2142  000A  00FB               	movwf	??_ISR+3
  2143  000B  120A  118A  2A3B   	ljmp	_ISR
  2144                           
  2145                           	psect	text10
  2146  038E                     __ptext10:	
  2147 ;; *************** function _envio *****************
  2148 ;; Defined at:
  2149 ;;		line 181 in file "main.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2163 ;;      Params:         0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0
  2165 ;;      Temps:          1       0       0       0       0
  2166 ;;      Totals:         1       0       0       0       0
  2167 ;;Total ram usage:        1 bytes
  2168 ;; Hardware stack levels used: 1
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_ISR
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           
  2177                           ;psect for function _envio
  2178  038E                     _envio:
  2179  038E                     i1l1602:	
  2180                           ;incstack = 0
  2181                           ; Regs used in _envio: [wreg+status,2+status,0]
  2182                           
  2183                           
  2184                           ;main.c: 182:     toggleTX++;
  2185  038E  3001               	movlw	1
  2186  038F  00F0               	movwf	??_envio
  2187  0390  0870               	movf	??_envio,w
  2188  0391  07FD               	addwf	_toggleTX,f
  2189                           
  2190                           ;main.c: 183:     if (toggleTX == 1){
  2191  0392  037D               	decf	_toggleTX,w
  2192  0393  1D03               	btfss	3,2
  2193  0394  2B96               	goto	u83_21
  2194  0395  2B97               	goto	u83_20
  2195  0396                     u83_21:
  2196  0396  2B9B               	goto	i1l1606
  2197  0397                     u83_20:
  2198  0397                     i1l1604:
  2199                           
  2200                           ;main.c: 184:         TXREG = AC2;
  2201  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0399  0832               	movf	_AC2,w
  2204  039A  0099               	movwf	25	;volatile
  2205  039B                     i1l1606:
  2206                           
  2207                           ;main.c: 186:     if (toggleTX == 2){
  2208  039B  3002               	movlw	2
  2209  039C  067D               	xorwf	_toggleTX,w
  2210  039D  1D03               	btfss	3,2
  2211  039E  2BA0               	goto	u84_21
  2212  039F  2BA1               	goto	u84_20
  2213  03A0                     u84_21:
  2214  03A0  2BA5               	goto	i1l1610
  2215  03A1                     u84_20:
  2216  03A1                     i1l1608:
  2217                           
  2218                           ;main.c: 187:         TXREG = AD2;
  2219  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2220  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2221  03A3  0831               	movf	_AD2,w
  2222  03A4  0099               	movwf	25	;volatile
  2223  03A5                     i1l1610:
  2224                           
  2225                           ;main.c: 189:     if (toggleTX == 3){
  2226  03A5  3003               	movlw	3
  2227  03A6  067D               	xorwf	_toggleTX,w
  2228  03A7  1D03               	btfss	3,2
  2229  03A8  2BAA               	goto	u85_21
  2230  03A9  2BAB               	goto	u85_20
  2231  03AA                     u85_21:
  2232  03AA  2BAF               	goto	i1l1614
  2233  03AB                     u85_20:
  2234  03AB                     i1l1612:
  2235                           
  2236                           ;main.c: 190:         TXREG = AU2;
  2237  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2238  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2239  03AD  0830               	movf	_AU2,w
  2240  03AE  0099               	movwf	25	;volatile
  2241  03AF                     i1l1614:
  2242                           
  2243                           ;main.c: 192:     if (toggleTX == 4){
  2244  03AF  3004               	movlw	4
  2245  03B0  067D               	xorwf	_toggleTX,w
  2246  03B1  1D03               	btfss	3,2
  2247  03B2  2BB4               	goto	u86_21
  2248  03B3  2BB5               	goto	u86_20
  2249  03B4                     u86_21:
  2250  03B4  2BBA               	goto	i1l166
  2251  03B5                     u86_20:
  2252  03B5                     i1l1616:
  2253                           
  2254                           ;main.c: 193:         TXREG = 10;
  2255  03B5  300A               	movlw	10
  2256  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2257  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2258  03B8  0099               	movwf	25	;volatile
  2259  03B9                     i1l1618:
  2260                           
  2261                           ;main.c: 194:         toggleTX = 0;
  2262  03B9  01FD               	clrf	_toggleTX
  2263  03BA                     i1l166:
  2264  03BA  0008               	return
  2265  03BB                     __end_of_envio:
  2266                           
  2267                           	psect	text11
  2268  0026                     __ptext11:	
  2269 ;; *************** function _CONTADOR *****************
  2270 ;; Defined at:
  2271 ;;		line 198 in file "main.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2285 ;;      Params:         0       0       0       0       0
  2286 ;;      Locals:         0       0       0       0       0
  2287 ;;      Temps:          4       0       0       0       0
  2288 ;;      Totals:         4       0       0       0       0
  2289 ;;Total ram usage:        4 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 1
  2292 ;; This function calls:
  2293 ;;		_num_ascii_dec
  2294 ;;		i1___bmul
  2295 ;; This function is called by:
  2296 ;;		_ISR
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           
  2301                           ;psect for function _CONTADOR
  2302  0026                     _CONTADOR:
  2303  0026                     i1l1548:	
  2304                           ;incstack = 0
  2305                           ; Regs used in _CONTADOR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2306                           
  2307                           
  2308                           ;main.c: 199:     if (signo == 43){
  2309  0026  302B               	movlw	43
  2310  0027  1283               	bcf	3,5	;RP0=0, select bank0
  2311  0028  1303               	bcf	3,6	;RP1=0, select bank0
  2312  0029  062F               	xorwf	_signo,w
  2313  002A  1D03               	btfss	3,2
  2314  002B  282D               	goto	u69_21
  2315  002C  282E               	goto	u69_20
  2316  002D                     u69_21:
  2317  002D  2830               	goto	i1l1552
  2318  002E                     u69_20:
  2319  002E                     i1l1550:
  2320                           
  2321                           ;main.c: 200:         sum = 1;
  2322  002E  01AE               	clrf	_sum
  2323  002F  0AAE               	incf	_sum,f
  2324  0030                     i1l1552:
  2325                           
  2326                           ;main.c: 203:     if (signo == 13 && sum == 1){
  2327  0030  300D               	movlw	13
  2328  0031  062F               	xorwf	_signo,w
  2329  0032  1D03               	btfss	3,2
  2330  0033  2835               	goto	u70_21
  2331  0034  2836               	goto	u70_20
  2332  0035                     u70_21:
  2333  0035  2840               	goto	i1l1560
  2334  0036                     u70_20:
  2335  0036                     i1l1554:
  2336  0036  032E               	decf	_sum,w
  2337  0037  1D03               	btfss	3,2
  2338  0038  283A               	goto	u71_21
  2339  0039  283B               	goto	u71_20
  2340  003A                     u71_21:
  2341  003A  2840               	goto	i1l1560
  2342  003B                     u71_20:
  2343  003B                     i1l1556:
  2344                           
  2345                           ;main.c: 204:             sum = 0;
  2346  003B  01AE               	clrf	_sum
  2347  003C                     i1l1558:
  2348                           
  2349                           ;main.c: 205:             A1++;
  2350  003C  3001               	movlw	1
  2351  003D  00F4               	movwf	??_CONTADOR
  2352  003E  0874               	movf	??_CONTADOR,w
  2353  003F  07A3               	addwf	_A1,f
  2354  0040                     i1l1560:
  2355                           
  2356                           ;main.c: 208:     if (signo == 45){
  2357  0040  302D               	movlw	45
  2358  0041  062F               	xorwf	_signo,w
  2359  0042  1D03               	btfss	3,2
  2360  0043  2845               	goto	u72_21
  2361  0044  2846               	goto	u72_20
  2362  0045                     u72_21:
  2363  0045  2848               	goto	i1l1564
  2364  0046                     u72_20:
  2365  0046                     i1l1562:
  2366                           
  2367                           ;main.c: 209:         res = 1;
  2368  0046  01AD               	clrf	_res
  2369  0047  0AAD               	incf	_res,f
  2370  0048                     i1l1564:
  2371                           
  2372                           ;main.c: 212:     if(signo ==13 && res == 1){
  2373  0048  300D               	movlw	13
  2374  0049  062F               	xorwf	_signo,w
  2375  004A  1D03               	btfss	3,2
  2376  004B  284D               	goto	u73_21
  2377  004C  284E               	goto	u73_20
  2378  004D                     u73_21:
  2379  004D  2856               	goto	i1l1572
  2380  004E                     u73_20:
  2381  004E                     i1l1566:
  2382  004E  032D               	decf	_res,w
  2383  004F  1D03               	btfss	3,2
  2384  0050  2852               	goto	u74_21
  2385  0051  2853               	goto	u74_20
  2386  0052                     u74_21:
  2387  0052  2856               	goto	i1l1572
  2388  0053                     u74_20:
  2389  0053                     i1l1568:
  2390                           
  2391                           ;main.c: 213:         res = 0;
  2392  0053  01AD               	clrf	_res
  2393  0054                     i1l1570:
  2394                           
  2395                           ;main.c: 214:         A1--;
  2396  0054  3001               	movlw	1
  2397  0055  02A3               	subwf	_A1,f
  2398  0056                     i1l1572:
  2399                           
  2400                           ;main.c: 216:     if(47<signo && signo<58){
  2401  0056  3030               	movlw	48
  2402  0057  022F               	subwf	_signo,w
  2403  0058  1C03               	skipc
  2404  0059  285B               	goto	u75_21
  2405  005A  285C               	goto	u75_20
  2406  005B                     u75_21:
  2407  005B  28B9               	goto	i1l1590
  2408  005C                     u75_20:
  2409  005C                     i1l1574:
  2410  005C  303A               	movlw	58
  2411  005D  022F               	subwf	_signo,w
  2412  005E  1803               	skipnc
  2413  005F  2861               	goto	u76_21
  2414  0060  2862               	goto	u76_20
  2415  0061                     u76_21:
  2416  0061  28B9               	goto	i1l1590
  2417  0062                     u76_20:
  2418  0062                     i1l1576:
  2419                           
  2420                           ;main.c: 217:         cc++;
  2421  0062  3001               	movlw	1
  2422  0063  00F4               	movwf	??_CONTADOR
  2423  0064  0874               	movf	??_CONTADOR,w
  2424  0065  07FC               	addwf	_cc,f
  2425                           
  2426                           ;main.c: 218:         if (cc==1){
  2427  0066  037C               	decf	_cc,w
  2428  0067  1D03               	btfss	3,2
  2429  0068  286A               	goto	u77_21
  2430  0069  286B               	goto	u77_20
  2431  006A                     u77_21:
  2432  006A  2877               	goto	i1l1580
  2433  006B                     u77_20:
  2434  006B                     i1l1578:
  2435                           
  2436                           ;main.c: 219:             A = num_ascii_dec(signo);
  2437  006B  082F               	movf	_signo,w
  2438  006C  120A  118A  2319  120A  118A  	fcall	_num_ascii_dec
  2439  0071  00F4               	movwf	??_CONTADOR
  2440  0072  0874               	movf	??_CONTADOR,w
  2441  0073  1283               	bcf	3,5	;RP0=0, select bank0
  2442  0074  1303               	bcf	3,6	;RP1=0, select bank0
  2443  0075  00A7               	movwf	_A
  2444                           
  2445                           ;main.c: 220:         }
  2446  0076  28B9               	goto	i1l1590
  2447  0077                     i1l1580:
  2448  0077  3002               	movlw	2
  2449  0078  067C               	xorwf	_cc,w
  2450  0079  1D03               	btfss	3,2
  2451  007A  287C               	goto	u78_21
  2452  007B  287D               	goto	u78_20
  2453  007C                     u78_21:
  2454  007C  2889               	goto	i1l1584
  2455  007D                     u78_20:
  2456  007D                     i1l1582:
  2457                           
  2458                           ;main.c: 222:             B = num_ascii_dec(signo);
  2459  007D  082F               	movf	_signo,w
  2460  007E  120A  118A  2319  120A  118A  	fcall	_num_ascii_dec
  2461  0083  00F4               	movwf	??_CONTADOR
  2462  0084  0874               	movf	??_CONTADOR,w
  2463  0085  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0086  1303               	bcf	3,6	;RP1=0, select bank0
  2465  0087  00A6               	movwf	_B
  2466                           
  2467                           ;main.c: 223:         }
  2468  0088  28B9               	goto	i1l1590
  2469  0089                     i1l1584:
  2470  0089  3003               	movlw	3
  2471  008A  067C               	xorwf	_cc,w
  2472  008B  1D03               	btfss	3,2
  2473  008C  288E               	goto	u79_21
  2474  008D  288F               	goto	u79_20
  2475  008E                     u79_21:
  2476  008E  28B9               	goto	i1l175
  2477  008F                     u79_20:
  2478  008F                     i1l1586:
  2479                           
  2480                           ;main.c: 225:             C = num_ascii_dec(signo);
  2481  008F  082F               	movf	_signo,w
  2482  0090  120A  118A  2319  120A  118A  	fcall	_num_ascii_dec
  2483  0095  00F4               	movwf	??_CONTADOR
  2484  0096  0874               	movf	??_CONTADOR,w
  2485  0097  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0098  1303               	bcf	3,6	;RP1=0, select bank0
  2487  0099  00A5               	movwf	_C
  2488  009A                     i1l1588:
  2489                           
  2490                           ;main.c: 226:             ABC = A*100+B*10+C;
  2491  009A  300A               	movlw	10
  2492  009B  00F4               	movwf	??_CONTADOR
  2493  009C  0874               	movf	??_CONTADOR,w
  2494  009D  00F0               	movwf	i1___bmul@multiplicand
  2495  009E  0826               	movf	_B,w
  2496  009F  120A  118A  240F  120A  118A  	fcall	i1___bmul
  2497  00A4  00F5               	movwf	??_CONTADOR+1
  2498  00A5  3064               	movlw	100
  2499  00A6  00F6               	movwf	??_CONTADOR+2
  2500  00A7  0876               	movf	??_CONTADOR+2,w
  2501  00A8  00F0               	movwf	i1___bmul@multiplicand
  2502  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  2503  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  2504  00AB  0827               	movf	_A,w
  2505  00AC  120A  118A  240F  120A  118A  	fcall	i1___bmul
  2506  00B1  0775               	addwf	??_CONTADOR+1,w
  2507  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  2508  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  2509  00B4  0725               	addwf	_C,w
  2510  00B5  00F7               	movwf	??_CONTADOR+3
  2511  00B6  0877               	movf	??_CONTADOR+3,w
  2512  00B7  00A4               	movwf	_ABC
  2513  00B8  28B9               	goto	i1l1590
  2514  00B9                     i1l175:
  2515  00B9                     i1l1590:
  2516                           
  2517                           ;main.c: 229:     if (signo==10 && cc==3){
  2518  00B9  300A               	movlw	10
  2519  00BA  062F               	xorwf	_signo,w
  2520  00BB  1D03               	btfss	3,2
  2521  00BC  28BE               	goto	u80_21
  2522  00BD  28BF               	goto	u80_20
  2523  00BE                     u80_21:
  2524  00BE  28CA               	goto	i1l1598
  2525  00BF                     u80_20:
  2526  00BF                     i1l1592:
  2527  00BF  3003               	movlw	3
  2528  00C0  067C               	xorwf	_cc,w
  2529  00C1  1D03               	btfss	3,2
  2530  00C2  28C4               	goto	u81_21
  2531  00C3  28C5               	goto	u81_20
  2532  00C4                     u81_21:
  2533  00C4  28CA               	goto	i1l1598
  2534  00C5                     u81_20:
  2535  00C5                     i1l1594:
  2536                           
  2537                           ;main.c: 230:         cc = 0;
  2538  00C5  01FC               	clrf	_cc
  2539  00C6                     i1l1596:
  2540                           
  2541                           ;main.c: 231:         CONT=ABC;
  2542  00C6  0824               	movf	_ABC,w
  2543  00C7  00F4               	movwf	??_CONTADOR
  2544  00C8  0874               	movf	??_CONTADOR,w
  2545  00C9  00AC               	movwf	_CONT
  2546  00CA                     i1l1598:
  2547                           
  2548                           ;main.c: 233:     if (cc==4){
  2549  00CA  3004               	movlw	4
  2550  00CB  067C               	xorwf	_cc,w
  2551  00CC  1D03               	btfss	3,2
  2552  00CD  28CF               	goto	u82_21
  2553  00CE  28D0               	goto	u82_20
  2554  00CF                     u82_21:
  2555  00CF  28D1               	goto	i1l181
  2556  00D0                     u82_20:
  2557  00D0                     i1l1600:
  2558                           
  2559                           ;main.c: 234:         cc=0;
  2560  00D0  01FC               	clrf	_cc
  2561  00D1                     i1l181:
  2562  00D1  0008               	return
  2563  00D2                     __end_of_CONTADOR:
  2564                           
  2565                           	psect	text12
  2566  040F                     __ptext12:	
  2567 ;; *************** function i1___bmul *****************
  2568 ;; Defined at:
  2569 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  multiplier      1    wreg     unsigned char 
  2572 ;;  multiplicand    1    0[COMMON] unsigned char 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  multiplier      1    3[COMMON] unsigned char 
  2575 ;;  product         1    2[COMMON] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      unsigned char 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2585 ;;      Params:         1       0       0       0       0
  2586 ;;      Locals:         2       0       0       0       0
  2587 ;;      Temps:          1       0       0       0       0
  2588 ;;      Totals:         4       0       0       0       0
  2589 ;;Total ram usage:        4 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_CONTADOR
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           
  2599                           ;psect for function i1___bmul
  2600  040F                     i1___bmul:
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  2604                           ;i1___bmul@multiplier stored from wreg
  2605  040F  00F3               	movwf	i1___bmul@multiplier
  2606  0410                     i1l1534:
  2607  0410  01F2               	clrf	i1___bmul@product
  2608  0411                     i1l1536:
  2609  0411  1C73               	btfss	i1___bmul@multiplier,0
  2610  0412  2C14               	goto	u67_21
  2611  0413  2C15               	goto	u67_20
  2612  0414                     u67_21:
  2613  0414  2C19               	goto	i1l1540
  2614  0415                     u67_20:
  2615  0415                     i1l1538:
  2616  0415  0870               	movf	i1___bmul@multiplicand,w
  2617  0416  00F1               	movwf	??i1___bmul
  2618  0417  0871               	movf	??i1___bmul,w
  2619  0418  07F2               	addwf	i1___bmul@product,f
  2620  0419                     i1l1540:
  2621  0419  1003               	clrc
  2622  041A  0DF0               	rlf	i1___bmul@multiplicand,f
  2623  041B                     i1l1542:
  2624  041B  1003               	clrc
  2625  041C  0CF3               	rrf	i1___bmul@multiplier,f
  2626  041D  0873               	movf	i1___bmul@multiplier,w
  2627  041E  1D03               	btfss	3,2
  2628  041F  2C21               	goto	u68_21
  2629  0420  2C22               	goto	u68_20
  2630  0421                     u68_21:
  2631  0421  2C11               	goto	i1l1536
  2632  0422                     u68_20:
  2633  0422                     i1l1544:
  2634  0422  0872               	movf	i1___bmul@product,w
  2635  0423                     i1l338:
  2636  0423  0008               	return
  2637  0424                     __end_ofi1___bmul:
  2638                           
  2639                           	psect	text13
  2640  0319                     __ptext13:	
  2641 ;; *************** function _num_ascii_dec *****************
  2642 ;; Defined at:
  2643 ;;		line 50 in file "ASCII.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  num             1    wreg     unsigned char 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  num             1    2[COMMON] unsigned char 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      unsigned char 
  2650 ;; Registers used:
  2651 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2657 ;;      Params:         0       0       0       0       0
  2658 ;;      Locals:         1       0       0       0       0
  2659 ;;      Temps:          2       0       0       0       0
  2660 ;;      Totals:         3       0       0       0       0
  2661 ;;Total ram usage:        3 bytes
  2662 ;; Hardware stack levels used: 1
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		_CONTADOR
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           
  2671                           ;psect for function _num_ascii_dec
  2672  0319                     _num_ascii_dec:
  2673                           
  2674                           ;incstack = 0
  2675                           ; Regs used in _num_ascii_dec: [wreg-fsr0h+status,2+status,0]
  2676                           ;num_ascii_dec@num stored from wreg
  2677  0319  00F2               	movwf	num_ascii_dec@num
  2678  031A                     i1l1386:
  2679                           
  2680                           ;ASCII.c: 51:  switch(num){
  2681  031A  2B2F               	goto	i1l1456
  2682  031B                     i1l1388:
  2683                           
  2684                           ;ASCII.c: 53:   return 0;
  2685  031B  3000               	movlw	0
  2686  031C  2B57               	goto	i1l202
  2687  031D                     i1l1400:
  2688                           
  2689                           ;ASCII.c: 61:   return 1;
  2690  031D  3001               	movlw	1
  2691  031E  2B57               	goto	i1l202
  2692  031F                     i1l1406:
  2693                           
  2694                           ;ASCII.c: 65:   return 2;
  2695  031F  3002               	movlw	2
  2696  0320  2B57               	goto	i1l202
  2697  0321                     i1l1412:
  2698                           
  2699                           ;ASCII.c: 69:   return 3;
  2700  0321  3003               	movlw	3
  2701  0322  2B57               	goto	i1l202
  2702  0323                     i1l1418:
  2703                           
  2704                           ;ASCII.c: 73:   return 4;
  2705  0323  3004               	movlw	4
  2706  0324  2B57               	goto	i1l202
  2707  0325                     i1l1424:
  2708                           
  2709                           ;ASCII.c: 77:   return 5;
  2710  0325  3005               	movlw	5
  2711  0326  2B57               	goto	i1l202
  2712  0327                     i1l1430:
  2713                           
  2714                           ;ASCII.c: 81:   return 6;
  2715  0327  3006               	movlw	6
  2716  0328  2B57               	goto	i1l202
  2717  0329                     i1l1436:
  2718                           
  2719                           ;ASCII.c: 85:   return 7;
  2720  0329  3007               	movlw	7
  2721  032A  2B57               	goto	i1l202
  2722  032B                     i1l1442:
  2723                           
  2724                           ;ASCII.c: 89:   return 8;
  2725  032B  3008               	movlw	8
  2726  032C  2B57               	goto	i1l202
  2727  032D                     i1l1448:
  2728                           
  2729                           ;ASCII.c: 93:   return 9;
  2730  032D  3009               	movlw	9
  2731  032E  2B57               	goto	i1l202
  2732  032F                     i1l1456:
  2733  032F  0872               	movf	num_ascii_dec@num,w
  2734  0330  00F0               	movwf	??_num_ascii_dec
  2735  0331  01F1               	clrf	??_num_ascii_dec+1
  2736                           
  2737                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2738                           ; Switch size 1, requested type "simple"
  2739                           ; Number of cases is 1, Range of values is 0 to 0
  2740                           ; switch strategies available:
  2741                           ; Name         Instructions Cycles
  2742                           ; simple_byte            4     3 (average)
  2743                           ; direct_byte           11     8 (fixed)
  2744                           ; jumptable            260     6 (fixed)
  2745                           ;	Chosen strategy is simple_byte
  2746  0332  0871               	movf	??_num_ascii_dec+1,w
  2747  0333  3A00               	xorlw	0	; case 0
  2748  0334  1903               	skipnz
  2749  0335  2B37               	goto	i1l1812
  2750  0336  2B1B               	goto	i1l1388
  2751  0337                     i1l1812:
  2752                           
  2753                           ; Switch size 1, requested type "simple"
  2754                           ; Number of cases is 10, Range of values is 48 to 57
  2755                           ; switch strategies available:
  2756                           ; Name         Instructions Cycles
  2757                           ; simple_byte           31    16 (average)
  2758                           ; direct_byte           41    11 (fixed)
  2759                           ; jumptable            263     9 (fixed)
  2760                           ;	Chosen strategy is simple_byte
  2761  0337  0870               	movf	??_num_ascii_dec,w
  2762  0338  3A30               	xorlw	48	; case 48
  2763  0339  1903               	skipnz
  2764  033A  2B1B               	goto	i1l1388
  2765  033B  3A01               	xorlw	1	; case 49
  2766  033C  1903               	skipnz
  2767  033D  2B1D               	goto	i1l1400
  2768  033E  3A03               	xorlw	3	; case 50
  2769  033F  1903               	skipnz
  2770  0340  2B1F               	goto	i1l1406
  2771  0341  3A01               	xorlw	1	; case 51
  2772  0342  1903               	skipnz
  2773  0343  2B21               	goto	i1l1412
  2774  0344  3A07               	xorlw	7	; case 52
  2775  0345  1903               	skipnz
  2776  0346  2B23               	goto	i1l1418
  2777  0347  3A01               	xorlw	1	; case 53
  2778  0348  1903               	skipnz
  2779  0349  2B25               	goto	i1l1424
  2780  034A  3A03               	xorlw	3	; case 54
  2781  034B  1903               	skipnz
  2782  034C  2B27               	goto	i1l1430
  2783  034D  3A01               	xorlw	1	; case 55
  2784  034E  1903               	skipnz
  2785  034F  2B29               	goto	i1l1436
  2786  0350  3A0F               	xorlw	15	; case 56
  2787  0351  1903               	skipnz
  2788  0352  2B2B               	goto	i1l1442
  2789  0353  3A01               	xorlw	1	; case 57
  2790  0354  1903               	skipnz
  2791  0355  2B2D               	goto	i1l1448
  2792  0356  2B1B               	goto	i1l1388
  2793  0357                     i1l202:
  2794  0357  0008               	return
  2795  0358                     __end_of_num_ascii_dec:
  2796  007E                     btemp	set	126	;btemp
  2797  007E                     wtemp0	set	126
  2798                           
  2799                           	psect	config
  2800                           
  2801                           ;Config register CONFIG1 @ 0x2007
  2802                           ;	Oscillator Selection bits
  2803                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2804                           ;	Watchdog Timer Enable bit
  2805                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2806                           ;	Power-up Timer Enable bit
  2807                           ;	PWRTE = OFF, PWRT disabled
  2808                           ;	RE3/MCLR pin function select bit
  2809                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2810                           ;	Code Protection bit
  2811                           ;	CP = OFF, Program memory code protection is disabled
  2812                           ;	Data Code Protection bit
  2813                           ;	CPD = OFF, Data memory code protection is disabled
  2814                           ;	Brown Out Reset Selection bits
  2815                           ;	BOREN = OFF, BOR disabled
  2816                           ;	Internal External Switchover bit
  2817                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2818                           ;	Fail-Safe Clock Monitor Enabled bit
  2819                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2820                           ;	Low Voltage Programming Enable bit
  2821                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2822                           ;	In-Circuit Debugger Mode bit
  2823                           ;	DEBUG = 0x1, unprogrammed default
  2824  2007                     	org	8199
  2825  2007  20D4               	dw	8404
  2826                           
  2827                           ;Config register CONFIG2 @ 0x2008
  2828                           ;	Brown-out Reset Selection bit
  2829                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2830                           ;	Flash Program Memory Self Write Enable bits
  2831                           ;	WRT = OFF, Write protection off
  2832  2008                     	org	8200
  2833  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     19      48
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_CONTADOR
    _CONTADOR->i1___bmul

Critical Paths under _main in BANK0

    _main->_LECT1
    _main->_LECT2
    _LECT2->___awdiv
    _LECT1->___awdiv
    ___awdiv->___wmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3644
                              _LECT1
                              _LECT2
                              _Setup
                           _USARTcon
 ---------------------------------------------------------------------------------
 (1) _USARTcon                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LECT2                                                4     4      0    1822
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (1) _LECT1                                                4     4      0    1822
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     496
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     166
                                              8 COMMON     4     4      0
                           _CONTADOR
                              _envio
 ---------------------------------------------------------------------------------
 (4) _envio                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _CONTADOR                                             4     4      0     166
                                              4 COMMON     4     4      0
                      _num_ascii_dec
                           i1___bmul
 ---------------------------------------------------------------------------------
 (5) i1___bmul                                             4     3      1     144
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) _num_ascii_dec                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LECT1
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
     _num_ascii
   _LECT2
     ___awdiv
     ___bmul
     ___wmul
     _num_ascii
   _Setup
   _USARTcon

 _ISR (ROOT)
   _CONTADOR
     _num_ascii_dec
     i1___bmul
   _envio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      30       5       60.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3E      12        0.0%
ABS                  0      0      3E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Aug 15 20:44:27 2021

                      _A 0027                        _B 0026                        _C 0025  
                      _T 004F           ___bmul@product 003E                       _A1 0023  
                     _A2 0022                       _A3 0021             ___awdiv@sign 0048  
                     _cc 007C                       fsr 0004      ___wmul@multiplicand 003E  
                    _AC1 0038                      _AC2 0032                      _AD1 0037  
                    _AD2 0031                      l312 03C9                      l153 038D  
                    l314 03E1                      l226 040E                      _ABC 0024  
                    l156 01D1                      l159 0151                      l338 03F8  
                    l186 0318                      l465 023A                      _AR1 002B  
                    _AR2 002A                      _AR3 0029                      _AR4 0028  
                    _AU1 0036                      _AU2 0030                      u510 03C3  
                    u511 03C2                      u610 0207                      u611 0206  
                    u540 03DD                      _ISR 023B                      u605 01F9  
                    u541 03DC                      u525 03CA                      u630 0218  
                    u550 03EA                      u631 0217                      u551 03E9  
                    u535 03D1                      u560 03F7                      u625 0208  
                    u561 03F6                      u650 022C                      u570 01D9  
                    u651 022B                      u635 0214                      u571 01D8  
                    u660 0231                      u580 01E4                      u661 0230  
                    u645 0220                      u581 01E3                      u590 01F5  
                    u591 01F4                      u960 02A9                      u961 02A8  
                    u970 02AF                      u971 02AE                      u980 02B5  
                    u981 02B4                      u990 02BD                      u991 02BC  
                    _Un1 0039                      _Un2 0033                      _res 002D  
                    fsr0 0004                      _sum 002E                      indf 0000  
                   ?_ISR 0070                     l1310 02DC                     l1322 02DE  
                   l1500 01E4                     l1340 02E4                     l1308 02DB  
                   l1510 01F8                     l1502 01E9                     l1334 02E2  
                   l1520 021E                     l1512 01FF                     l1504 01ED  
                   l1352 02E8                     l1328 02E0                     l1530 0236  
                   l1522 021F                     l1514 0203                     l1506 01EF  
                   l1370 02EE                     l1346 02E6                     l1524 0226  
                   l1516 0207                     l1508 01F5                     l1364 02EC  
                   l1620 0358                     l1518 0218                     l1526 022C  
                   l1470 03D7                     l1462 03BB                     l1358 02EA  
                   l1630 036F                     l1622 0360                     l1528 0231  
                   l1480 03EA                     l1472 03DD                     l1464 03BF  
                   l1640 0376                     l1632 0370                     l1624 0362  
                   l1490 01D2                     l1482 03EE                     l1466 03C3  
                   l1810 02F8                     l1378 02F0                     l1650 0380  
                   l1642 0377                     l1634 0371                     l1626 036D  
                   l1492 01D5                     l1484 03F0                     l1476 03E5  
                   l1468 03D0                     l1660 038B                     l1652 0384  
                   l1644 037A                     l1636 0372                     l1628 036E  
                   l1740 02A9                     l1494 01D9                     l1486 03F7  
                   l1478 03E6                     l1662 038C                     l1654 0387  
                   l1646 037D                     l1638 0373                     l1670 0406  
                   l1750 02C3                     l1742 02AF                     l1496 01DE  
                   l1680 01B0                     l1656 0388                     l1648 037E  
                   l1672 0409                     l1664 03F9                     l1752 02C4  
                   l1744 02B5                     l1736 0297                     l1498 01E0  
                   l1682 01BB                     l1690 013B                     l1658 038A  
                   l1674 040A                     l1666 0401                     l1754 02C9  
                   l1746 02B7                     l1738 02A1                     l1684 01C6  
                   l1692 0146                     l1676 040B                     l1668 0404  
                   l1756 02CE                     l1748 02BD                     l1678 0152  
                   l1686 00D2                     l1758 02D2                     l1688 0130  
                   u1000 02C3                     u1001 02C2                     _CONT 002C  
                   _TMR0 0001                     _Dec1 003A                     _Dec2 0034  
                   _Cen1 003B                     _Cen2 0035                     _main 0297  
                   btemp 007E                     start 000E        ___bmul@multiplier 003F  
       __end_of_CONTADOR 00D2                    ??_ISR 0078                    ?_main 0070  
        __end_of___awdiv 023B                    _ANSEL 0188          ___awdiv@divisor 0042  
                  _LECT1 0152                    _LECT2 00D2                    _BOTON 0020  
                  i1l202 0357                    i1l140 028E                    i1l181 00D1  
                  i1l166 03BA                    i1l175 00B9                    i1l338 0423  
        ___awdiv@counter 0047                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u70_20 0036  
                  u70_21 0035                    u71_20 003B                    u71_21 003A  
                  u80_20 00BF                    u72_20 0046                    u80_21 00BE  
                  u72_21 0045                    u81_20 00C5                    u73_20 004E  
                  u81_21 00C4                    u73_21 004D                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    u82_20 00D0                    u74_20 0053  
                  u90_20 0265                    u82_21 00CF                    u74_21 0052  
                  u90_21 0264                    u67_20 0415                    u75_20 005C  
                  u83_20 0397                    u91_20 026B                    u67_21 0414  
                  u75_21 005B                    u83_21 0396                    u91_21 026A  
                  u68_20 0422                    u76_20 0062                    u84_20 03A1  
                  u92_20 0270                    u68_21 0421                    u76_21 0061  
                  u84_21 03A0                    u92_21 026F                    u77_20 006B  
                  u69_20 002E                    u85_20 03AB                    u93_20 027F  
                  u77_21 006A                    u69_21 002D                    u85_21 03AA  
                  u93_21 027E                    u78_20 007D                    u86_20 03B5  
                  u94_20 0285                    u78_21 007C                    u86_21 03B4  
                  u94_21 0284                    u79_20 008F                    u95_20 028A  
                  u87_20 0241                    u79_21 008E                    u95_21 0289  
                  u87_21 0240                    u88_20 0250                    u88_21 024F  
                  u89_20 0259                    u89_21 0258                    _TXREG 0019  
                  _Setup 0358                    _envio 038E                    _signo 002F  
       __end_of_USARTcon 040F         __end_ofi1___bmul 0424                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 02D8                   ??_main 004F                   ?_LECT1 0070  
                 ?_LECT2 0070                   ?_Setup 0070                   _ADCON1 009F  
                 ?_envio 0070         ___awdiv@dividend 0044                   _ANSELH 0189  
                 i1l1400 031D                   i1l1412 0321                   i1l1430 0327  
                 i1l1406 031F                   i1l1424 0325                   i1l1600 00D0  
                 i1l1442 032B                   i1l1418 0323                   i1l1610 03A5  
                 i1l1602 038E                   i1l1436 0329                   i1l1540 0419  
                 i1l1612 03AB                   i1l1604 0397                   i1l1700 024A  
                 i1l1542 041B                   i1l1534 0410                   i1l1550 002E  
                 i1l1614 03AF                   i1l1606 039B                   i1l1710 0260  
                 i1l1702 0250                   i1l1448 032D                   i1l1456 032F  
                 i1l1544 0422                   i1l1536 0411                   i1l1560 0040  
                 i1l1552 0030                   i1l1616 03B5                   i1l1608 03A1  
                 i1l1720 0274                   i1l1712 0265                   i1l1704 0255  
                 i1l1386 031A                   i1l1538 0415                   i1l1570 0054  
                 i1l1562 0046                   i1l1554 0036                   i1l1618 03B9  
                 i1l1730 0285                   i1l1722 0276                   i1l1714 0266  
                 i1l1706 0259                   i1l1812 0337                   i1l1388 031B  
                 i1l1580 0077                   i1l1572 0056                   i1l1564 0048  
                 i1l1556 003B                   i1l1548 0026                   i1l1732 028A  
                 i1l1724 027A                   i1l1716 026B                   i1l1708 025A  
                 i1l1582 007D                   i1l1574 005C                   i1l1590 00B9  
                 i1l1566 004E                   i1l1558 003C                   i1l1734 028C  
                 i1l1726 027F                   i1l1718 0270                   i1l1592 00BF  
                 i1l1584 0089                   i1l1576 0062                   i1l1568 0053  
                 i1l1728 0280                   i1l1594 00C5                   i1l1586 008F  
                 i1l1578 006B                   i1l1596 00C6                   i1l1588 009A  
                 i1l1598 00CA                   i1l1694 023B                   i1l1696 0241  
                 i1l1698 0245                   _SPBRGH 009A                   ___bmul 03E2  
                 ___wmul 03BB                ??___awdiv 0046         ___awdiv@quotient 0049  
                 saved_w 007E                ?_CONTADOR 0070  __end_of__initialization 0022  
          __end_of_LECT1 01D2            __end_of_LECT2 0152      ___bmul@multiplicand 003C  
         __pcstackCOMMON 0070            __end_of_Setup 038E             __pidataBANK0 042C  
          __end_of_envio 03BB                ?_USARTcon 0070                ?i1___bmul 0070  
                ??_LECT1 004B                  ??_LECT2 004B                  ??_Setup 003C  
       i1___bmul@product 0072                  ??_envio 0070               ??_CONTADOR 0074  
             __pbssBANK0 0020    __end_of_num_ascii_dec 0358               __pmaintext 0297  
                ?___bmul 003C                  ?___wmul 003C               __pintentry 0004  
             ??_USARTcon 003C               ??i1___bmul 0071       __size_of_num_ascii 0041  
        __size_of___bmul 0017                  ___awdiv 01D2          __size_of___wmul 0027  
                __ptext1 03F9                  __ptext2 0358                  __ptext3 00D2  
                __ptext4 0152                  __ptext5 02D8                  __ptext6 03BB  
                __ptext7 03E2                  __ptext8 01D2                  __ptext9 023B  
           __size_of_ISR 005C      i1___bmul@multiplier 0073                  clrloop0 0425  
   end_of_initialization 0022        __end_of_num_ascii 0319                _RCSTAbits 0018  
              _PORTBbits 0006        __size_of_CONTADOR 00AC                _TXSTAbits 0098  
         __end_of___bmul 03F9           __end_of___wmul 03E2              _BAUDCTLbits 0187  
      __size_of_USARTcon 0016        __size_ofi1___bmul 0015      start_initialization 0011  
            __end_of_ISR 0297                 ??___bmul 003D                 ??___wmul 0040  
            __pdataBANK0 004F              __pbssCOMMON 007C                ___latbits 0002  
          __pcstackBANK0 003C                 ?___awdiv 0042           __size_of_LECT1 0080  
         __size_of_LECT2 0080   __size_of_num_ascii_dec 003F           __size_of_Setup 0036  
         __size_of_envio 002D                 _CONTADOR 0026        interrupt_function 0004  
         ___wmul@product 0040                 _IOCBbits 0096                clear_ram0 0424  
               _PIE1bits 008C    i1___bmul@multiplicand 0070                 _PIR1bits 000C  
              _num_ascii 02D8                 _USARTcon 03F9                 i1___bmul 040F  
      ___wmul@multiplier 003C                 _WPUBbits 0095            _num_ascii_dec 0319  
             ?_num_ascii 0070         __size_of___awdiv 0069         num_ascii_dec@num 0072  
               __ptext10 038E                 __ptext11 0026                 __ptext12 040F  
               __ptext13 0319            __size_of_main 0041           ?_num_ascii_dec 0070  
               _toggleTX 007D               _INTCONbits 000B                 intlevel1 0000  
           num_ascii@num 003E               _OSCCONbits 008F              ??_num_ascii 003C  
             _OPTION_REG 0081          ??_num_ascii_dec 0070  
