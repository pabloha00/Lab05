

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 18 18:34:47 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0018                     _RCSTAbits	set	24
   375  0019                     _TXREG	set	25
   376  0001                     _TMR0	set	1
   377  0009                     _PORTE	set	9
   378  0007                     _PORTC	set	7
   379  0006                     _PORTB	set	6
   380  0005                     _PORTA	set	5
   381  0008                     _PORTD	set	8
   382  0006                     _PORTBbits	set	6
   383  000B                     _INTCONbits	set	11
   384  001A                     _RCREG	set	26
   385  000C                     _PIR1bits	set	12
   386  0099                     _SPBRG	set	153
   387  009A                     _SPBRGH	set	154
   388  0098                     _TXSTAbits	set	152
   389  008C                     _PIE1bits	set	140
   390  0081                     _OPTION_REG	set	129
   391  0095                     _WPUBbits	set	149
   392  009F                     _ADCON1	set	159
   393  008F                     _OSCCONbits	set	143
   394  0096                     _IOCBbits	set	150
   395  0089                     _TRISE	set	137
   396  0088                     _TRISD	set	136
   397  0087                     _TRISC	set	135
   398  0086                     _TRISB	set	134
   399  0085                     _TRISA	set	133
   400  0187                     _BAUDCTLbits	set	391
   401  0189                     _ANSELH	set	393
   402  0188                     _ANSEL	set	392
   403                           
   404                           	psect	cinit
   405  0011                     start_initialization:	
   406                           ; #config settings
   407                           
   408  0011                     __initialization:
   409                           
   410                           ; Clear objects allocated to COMMON
   411  0011  01FC               	clrf	__pbssCOMMON& (0+127)
   412  0012  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   413                           
   414                           ; Clear objects allocated to BANK0
   415  0013  1383               	bcf	3,7	;select IRP bank0
   416  0014  3020               	movlw	low __pbssBANK0
   417  0015  0084               	movwf	4
   418  0016  303A               	movlw	low (__pbssBANK0+26)
   419  0017  120A  118A  241E  120A  118A  	fcall	clear_ram0
   420  001C                     end_of_initialization:	
   421                           ;End of C runtime variable initialization code
   422                           
   423  001C                     __end_of__initialization:
   424  001C  0183               	clrf	3
   425  001D  120A  118A  2A91   	ljmp	_main	;jump to C main() function
   426                           
   427                           	psect	bssCOMMON
   428  007C                     __pbssCOMMON:
   429  007C                     _cc:
   430  007C                     	ds	1
   431  007D                     _toggleTX:
   432  007D                     	ds	1
   433                           
   434                           	psect	bssBANK0
   435  0020                     __pbssBANK0:
   436  0020                     _BOTON:
   437  0020                     	ds	1
   438  0021                     _A1:
   439  0021                     	ds	1
   440  0022                     _ABC:
   441  0022                     	ds	1
   442  0023                     _C:
   443  0023                     	ds	1
   444  0024                     _B:
   445  0024                     	ds	1
   446  0025                     _A:
   447  0025                     	ds	1
   448  0026                     _AR4:
   449  0026                     	ds	1
   450  0027                     _AR3:
   451  0027                     	ds	1
   452  0028                     _AR2:
   453  0028                     	ds	1
   454  0029                     _AR1:
   455  0029                     	ds	1
   456  002A                     _CONT:
   457  002A                     	ds	1
   458  002B                     _res:
   459  002B                     	ds	1
   460  002C                     _sum:
   461  002C                     	ds	1
   462  002D                     _signo:
   463  002D                     	ds	1
   464  002E                     _AU2:
   465  002E                     	ds	1
   466  002F                     _AD2:
   467  002F                     	ds	1
   468  0030                     _AC2:
   469  0030                     	ds	1
   470  0031                     _Un2:
   471  0031                     	ds	1
   472  0032                     _Dec2:
   473  0032                     	ds	1
   474  0033                     _Cen2:
   475  0033                     	ds	1
   476  0034                     _AU1:
   477  0034                     	ds	1
   478  0035                     _AD1:
   479  0035                     	ds	1
   480  0036                     _AC1:
   481  0036                     	ds	1
   482  0037                     _Un1:
   483  0037                     	ds	1
   484  0038                     _Dec1:
   485  0038                     	ds	1
   486  0039                     _Cen1:
   487  0039                     	ds	1
   488                           
   489                           	psect	clrtext
   490  041E                     clear_ram0:	
   491                           ;	Called with FSR containing the base address, and
   492                           ;	W with the last address+1
   493                           
   494  041E  0064               	clrwdt	;clear the watchdog before getting into this loop
   495  041F                     clrloop0:
   496  041F  0180               	clrf	0	;clear RAM location pointed to by FSR
   497  0420  0A84               	incf	4,f	;increment pointer
   498  0421  0604               	xorwf	4,w	;XOR with final address
   499  0422  1903               	btfsc	3,2	;have we reached the end yet?
   500  0423  3400               	retlw	0	;all done for this memory range, return
   501  0424  0604               	xorwf	4,w	;XOR again to restore value
   502  0425  2C1F               	goto	clrloop0	;do the next byte
   503                           
   504                           	psect	cstackCOMMON
   505  0070                     __pcstackCOMMON:
   506  0070                     ?_CONTADOR:
   507  0070                     ?_envio:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ??_envio:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_Setup:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_USARTcon:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_LECT1:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_LECT2:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_num_ascii:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_num_ascii_dec:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ??_num_ascii_dec:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_ISR:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_main:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?i1___bmul:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     i1___bmul@multiplicand:	
   544                           ; 1 bytes @ 0x0
   545                           
   546                           
   547                           ; 1 bytes @ 0x0
   548  0070                     	ds	1
   549  0071                     ??i1___bmul:
   550                           
   551                           ; 1 bytes @ 0x1
   552  0071                     	ds	1
   553  0072                     num_ascii_dec@num:
   554  0072                     i1___bmul@product:	
   555                           ; 1 bytes @ 0x2
   556                           
   557                           
   558                           ; 1 bytes @ 0x2
   559  0072                     	ds	1
   560  0073                     i1___bmul@multiplier:
   561                           
   562                           ; 1 bytes @ 0x3
   563  0073                     	ds	1
   564  0074                     ??_CONTADOR:
   565                           
   566                           ; 1 bytes @ 0x4
   567  0074                     	ds	4
   568  0078                     ??_ISR:
   569                           
   570                           ; 1 bytes @ 0x8
   571  0078                     	ds	4
   572                           
   573                           	psect	cstackBANK0
   574  003A                     __pcstackBANK0:
   575  003A                     ??_Setup:
   576  003A                     ??_USARTcon:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  003A                     ??_num_ascii:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  003A                     ?___bmul:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  003A                     ?___wmul:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  003A                     ___bmul@multiplicand:	
   589                           ; 2 bytes @ 0x0
   590                           
   591  003A                     ___wmul@multiplier:	
   592                           ; 1 bytes @ 0x0
   593                           
   594                           
   595                           ; 2 bytes @ 0x0
   596  003A                     	ds	1
   597  003B                     ??___bmul:
   598                           
   599                           ; 1 bytes @ 0x1
   600  003B                     	ds	1
   601  003C                     num_ascii@num:
   602  003C                     ___bmul@product:	
   603                           ; 1 bytes @ 0x2
   604                           
   605  003C                     ___wmul@multiplicand:	
   606                           ; 1 bytes @ 0x2
   607                           
   608                           
   609                           ; 2 bytes @ 0x2
   610  003C                     	ds	1
   611  003D                     ___bmul@multiplier:
   612                           
   613                           ; 1 bytes @ 0x3
   614  003D                     	ds	1
   615  003E                     ??___wmul:
   616  003E                     ___wmul@product:	
   617                           ; 1 bytes @ 0x4
   618                           
   619                           
   620                           ; 2 bytes @ 0x4
   621  003E                     	ds	2
   622  0040                     ?___awdiv:
   623  0040                     ___awdiv@divisor:	
   624                           ; 2 bytes @ 0x6
   625                           
   626                           
   627                           ; 2 bytes @ 0x6
   628  0040                     	ds	2
   629  0042                     ___awdiv@dividend:
   630                           
   631                           ; 2 bytes @ 0x8
   632  0042                     	ds	2
   633  0044                     ??___awdiv:
   634                           
   635                           ; 1 bytes @ 0xA
   636  0044                     	ds	1
   637  0045                     ___awdiv@counter:
   638                           
   639                           ; 1 bytes @ 0xB
   640  0045                     	ds	1
   641  0046                     ___awdiv@sign:
   642                           
   643                           ; 1 bytes @ 0xC
   644  0046                     	ds	1
   645  0047                     ___awdiv@quotient:
   646                           
   647                           ; 2 bytes @ 0xD
   648  0047                     	ds	2
   649  0049                     ??_LECT1:
   650  0049                     ??_LECT2:	
   651                           ; 1 bytes @ 0xF
   652                           
   653                           
   654                           ; 1 bytes @ 0xF
   655  0049                     	ds	4
   656  004D                     ??_main:
   657                           
   658                           	psect	maintext
   659  0291                     __pmaintext:	
   660                           ; 1 bytes @ 0x13
   661 ;;
   662 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   663 ;;
   664 ;; *************** function _main *****************
   665 ;; Defined at:
   666 ;;		line 107 in file "main.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : B00/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   680 ;;      Params:         0       0       0       0       0
   681 ;;      Locals:         0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0
   683 ;;      Totals:         0       0       0       0       0
   684 ;;Total ram usage:        0 bytes
   685 ;; Hardware stack levels required when called: 5
   686 ;; This function calls:
   687 ;;		_LECT1
   688 ;;		_LECT2
   689 ;;		_Setup
   690 ;;		_USARTcon
   691 ;; This function is called by:
   692 ;;		Startup code after reset
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           
   697                           ;psect for function _main
   698  0291                     _main:
   699  0291                     l1730:	
   700                           ;incstack = 0
   701                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   702                           
   703                           
   704                           ;main.c: 108:     Setup();
   705  0291  120A  118A  2352  120A  118A  	fcall	_Setup
   706                           
   707                           ;main.c: 109:     USARTcon();
   708  0296  120A  118A  23F3  120A  118A  	fcall	_USARTcon
   709  029B                     l1732:
   710                           
   711                           ;main.c: 111:         if(signo != 13 && signo != 43 && signo != 45){
   712  029B  300D               	movlw	13
   713  029C  1283               	bcf	3,5	;RP0=0, select bank0
   714  029D  1303               	bcf	3,6	;RP1=0, select bank0
   715  029E  062D               	xorwf	_signo,w
   716  029F  1903               	btfsc	3,2
   717  02A0  2AA2               	goto	u961
   718  02A1  2AA3               	goto	u960
   719  02A2                     u961:
   720  02A2  2AB1               	goto	l1740
   721  02A3                     u960:
   722  02A3                     l1734:
   723  02A3  302B               	movlw	43
   724  02A4  062D               	xorwf	_signo,w
   725  02A5  1903               	btfsc	3,2
   726  02A6  2AA8               	goto	u971
   727  02A7  2AA9               	goto	u970
   728  02A8                     u971:
   729  02A8  2AB1               	goto	l1740
   730  02A9                     u970:
   731  02A9                     l1736:
   732  02A9  302D               	movlw	45
   733  02AA  062D               	xorwf	_signo,w
   734  02AB  1903               	btfsc	3,2
   735  02AC  2AAE               	goto	u981
   736  02AD  2AAF               	goto	u980
   737  02AE                     u981:
   738  02AE  2AB1               	goto	l1740
   739  02AF                     u980:
   740  02AF                     l1738:
   741                           
   742                           ;main.c: 112:             sum = 0;
   743  02AF  01AC               	clrf	_sum
   744                           
   745                           ;main.c: 113:             res = 0;
   746  02B0  01AB               	clrf	_res
   747  02B1                     l1740:
   748                           
   749                           ;main.c: 115:         if(57<signo && signo<48){
   750  02B1  303A               	movlw	58
   751  02B2  022D               	subwf	_signo,w
   752  02B3  1C03               	skipc
   753  02B4  2AB6               	goto	u991
   754  02B5  2AB7               	goto	u990
   755  02B6                     u991:
   756  02B6  2ABE               	goto	l1746
   757  02B7                     u990:
   758  02B7                     l1742:
   759  02B7  3030               	movlw	48
   760  02B8  022D               	subwf	_signo,w
   761  02B9  1803               	skipnc
   762  02BA  2ABC               	goto	u1001
   763  02BB  2ABD               	goto	u1000
   764  02BC                     u1001:
   765  02BC  2ABE               	goto	l1746
   766  02BD                     u1000:
   767  02BD                     l1744:
   768                           
   769                           ;main.c: 116:             cc = 0;
   770  02BD  01FC               	clrf	_cc
   771  02BE                     l1746:
   772                           
   773                           ;main.c: 118:         LECT1();
   774  02BE  120A  118A  214C  120A  118A  	fcall	_LECT1
   775  02C3                     l1748:
   776                           
   777                           ;main.c: 119:         LECT2();
   778  02C3  120A  118A  20CC  120A  118A  	fcall	_LECT2
   779  02C8                     l1750:
   780                           
   781                           ;main.c: 120:         PORTD = A1;
   782  02C8  1283               	bcf	3,5	;RP0=0, select bank0
   783  02C9  1303               	bcf	3,6	;RP1=0, select bank0
   784  02CA  0821               	movf	_A1,w
   785  02CB  0088               	movwf	8	;volatile
   786  02CC                     l1752:
   787                           
   788                           ;main.c: 121:         PORTA = CONT;
   789  02CC  082A               	movf	_CONT,w
   790  02CD  0085               	movwf	5	;volatile
   791  02CE  2A9B               	goto	l1732
   792  02CF  120A  118A  280E   	ljmp	start
   793  02D2                     __end_of_main:
   794                           
   795                           	psect	text1
   796  03F3                     __ptext1:	
   797 ;; *************** function _USARTcon *****************
   798 ;; Defined at:
   799 ;;		line 3 in file "USART.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, status,2
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       0       0       0       0
   814 ;;      Locals:         0       0       0       0       0
   815 ;;      Temps:          0       0       0       0       0
   816 ;;      Totals:         0       0       0       0       0
   817 ;;Total ram usage:        0 bytes
   818 ;; Hardware stack levels used: 1
   819 ;; Hardware stack levels required when called: 3
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _USARTcon
   829  03F3                     _USARTcon:
   830  03F3                     l1658:	
   831                           ;incstack = 0
   832                           ; Regs used in _USARTcon: [wreg+status,2]
   833                           
   834                           
   835                           ;USART.c: 5:  TXSTAbits.SYNC = 0;
   836  03F3  1683               	bsf	3,5	;RP0=1, select bank1
   837  03F4  1303               	bcf	3,6	;RP1=0, select bank1
   838  03F5  1218               	bcf	24,4	;volatile
   839                           
   840                           ;USART.c: 6:  TXSTAbits.BRGH = 1;
   841  03F6  1518               	bsf	24,2	;volatile
   842                           
   843                           ;USART.c: 7:  TXSTAbits.TX9 = 0;
   844  03F7  1318               	bcf	24,6	;volatile
   845                           
   846                           ;USART.c: 8:  BAUDCTLbits.BRG16 = 0;
   847  03F8  1683               	bsf	3,5	;RP0=1, select bank3
   848  03F9  1703               	bsf	3,6	;RP1=1, select bank3
   849  03FA  1187               	bcf	7,3	;volatile
   850  03FB                     l1660:
   851                           
   852                           ;USART.c: 9:  SPBRGH = 0;
   853  03FB  1683               	bsf	3,5	;RP0=1, select bank1
   854  03FC  1303               	bcf	3,6	;RP1=0, select bank1
   855  03FD  019A               	clrf	26	;volatile
   856  03FE                     l1662:
   857                           
   858                           ;USART.c: 10:  SPBRG = 51;
   859  03FE  3033               	movlw	51
   860  03FF  0099               	movwf	25	;volatile
   861  0400                     l1664:
   862                           
   863                           ;USART.c: 12:  RCSTAbits.SPEN = 1;
   864  0400  1283               	bcf	3,5	;RP0=0, select bank0
   865  0401  1303               	bcf	3,6	;RP1=0, select bank0
   866  0402  1798               	bsf	24,7	;volatile
   867  0403                     l1666:
   868                           
   869                           ;USART.c: 13:  RCSTAbits.RX9 = 0;
   870  0403  1318               	bcf	24,6	;volatile
   871  0404                     l1668:
   872                           
   873                           ;USART.c: 14:  RCSTAbits.CREN = 1;
   874  0404  1618               	bsf	24,4	;volatile
   875  0405                     l1670:
   876                           
   877                           ;USART.c: 15:  TXSTAbits.TXEN = 1;
   878  0405  1683               	bsf	3,5	;RP0=1, select bank1
   879  0406  1303               	bcf	3,6	;RP1=0, select bank1
   880  0407  1698               	bsf	24,5	;volatile
   881  0408                     l220:
   882  0408  0008               	return
   883  0409                     __end_of_USARTcon:
   884                           
   885                           	psect	text2
   886  0352                     __ptext2:	
   887 ;; *************** function _Setup *****************
   888 ;; Defined at:
   889 ;;		line 126 in file "main.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, status,2
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0
   905 ;;      Temps:          0       0       0       0       0
   906 ;;      Totals:         0       0       0       0       0
   907 ;;Total ram usage:        0 bytes
   908 ;; Hardware stack levels used: 1
   909 ;; Hardware stack levels required when called: 3
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _Setup
   919  0352                     _Setup:
   920  0352                     l1614:	
   921                           ;incstack = 0
   922                           ; Regs used in _Setup: [wreg+status,2]
   923                           
   924                           
   925                           ;main.c: 128:     ANSEL = 0;
   926  0352  1683               	bsf	3,5	;RP0=1, select bank3
   927  0353  1703               	bsf	3,6	;RP1=1, select bank3
   928  0354  0188               	clrf	8	;volatile
   929                           
   930                           ;main.c: 129:     ANSELH = 0;
   931  0355  0189               	clrf	9	;volatile
   932                           
   933                           ;main.c: 130:     ANSEL = 0;
   934  0356  0188               	clrf	8	;volatile
   935                           
   936                           ;main.c: 131:     TRISA = 0;
   937  0357  1683               	bsf	3,5	;RP0=1, select bank1
   938  0358  1303               	bcf	3,6	;RP1=0, select bank1
   939  0359  0185               	clrf	5	;volatile
   940  035A                     l1616:
   941                           
   942                           ;main.c: 132:     TRISB = 0b00000011;
   943  035A  3003               	movlw	3
   944  035B  0086               	movwf	6	;volatile
   945  035C                     l1618:
   946                           
   947                           ;main.c: 133:     TRISC = 0b10000000;
   948  035C  3080               	movlw	128
   949  035D  0087               	movwf	7	;volatile
   950                           
   951                           ;main.c: 134:     TRISD = 0;
   952  035E  0188               	clrf	8	;volatile
   953                           
   954                           ;main.c: 135:     TRISE = 0;
   955  035F  0189               	clrf	9	;volatile
   956                           
   957                           ;main.c: 136:     PORTA = 0;
   958  0360  1283               	bcf	3,5	;RP0=0, select bank0
   959  0361  1303               	bcf	3,6	;RP1=0, select bank0
   960  0362  0185               	clrf	5	;volatile
   961                           
   962                           ;main.c: 137:     PORTB = 0;
   963  0363  0186               	clrf	6	;volatile
   964                           
   965                           ;main.c: 138:     PORTC = 0;
   966  0364  0187               	clrf	7	;volatile
   967                           
   968                           ;main.c: 139:     PORTD = 0;
   969  0365  0188               	clrf	8	;volatile
   970                           
   971                           ;main.c: 140:     PORTE = 0;
   972  0366  0189               	clrf	9	;volatile
   973  0367                     l1620:
   974                           
   975                           ;main.c: 141:     INTCONbits.TMR0IF = 0;
   976  0367  110B               	bcf	11,2	;volatile
   977  0368                     l1622:
   978                           
   979                           ;main.c: 142:     INTCONbits.RBIF = 0;
   980  0368  100B               	bcf	11,0	;volatile
   981  0369                     l1624:
   982                           
   983                           ;main.c: 143:     INTCONbits.GIE = 1;
   984  0369  178B               	bsf	11,7	;volatile
   985  036A                     l1626:
   986                           
   987                           ;main.c: 144:     INTCONbits.PEIE = 1;
   988  036A  170B               	bsf	11,6	;volatile
   989  036B                     l1628:
   990                           
   991                           ;main.c: 145:     INTCONbits.T0IE = 0;
   992  036B  128B               	bcf	11,5	;volatile
   993  036C                     l1630:
   994                           
   995                           ;main.c: 146:     INTCONbits.RBIE = 1;
   996  036C  158B               	bsf	11,3	;volatile
   997  036D                     l1632:
   998                           
   999                           ;main.c: 147:     IOCBbits.IOCB0 = 1;
  1000  036D  1683               	bsf	3,5	;RP0=1, select bank1
  1001  036E  1303               	bcf	3,6	;RP1=0, select bank1
  1002  036F  1416               	bsf	22,0	;volatile
  1003  0370                     l1634:
  1004                           
  1005                           ;main.c: 148:     IOCBbits.IOCB1 = 1;
  1006  0370  1496               	bsf	22,1	;volatile
  1007  0371                     l1636:
  1008                           
  1009                           ;main.c: 149:     PIR1bits.ADIF = 0;
  1010  0371  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0372  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0373  130C               	bcf	12,6	;volatile
  1013  0374                     l1638:
  1014                           
  1015                           ;main.c: 150:     OSCCONbits.IRCF0 = 1;
  1016  0374  1683               	bsf	3,5	;RP0=1, select bank1
  1017  0375  1303               	bcf	3,6	;RP1=0, select bank1
  1018  0376  160F               	bsf	15,4	;volatile
  1019  0377                     l1640:
  1020                           
  1021                           ;main.c: 151:     OSCCONbits.IRCF1 = 1;
  1022  0377  168F               	bsf	15,5	;volatile
  1023  0378                     l1642:
  1024                           
  1025                           ;main.c: 152:     OSCCONbits.IRCF2 = 1;
  1026  0378  170F               	bsf	15,6	;volatile
  1027                           
  1028                           ;main.c: 153:     ADCON1 = 0;
  1029  0379  019F               	clrf	31	;volatile
  1030  037A                     l1644:
  1031                           
  1032                           ;main.c: 154:     TMR0 = 236;
  1033  037A  30EC               	movlw	236
  1034  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1035  037C  1303               	bcf	3,6	;RP1=0, select bank0
  1036  037D  0081               	movwf	1	;volatile
  1037  037E                     l1646:
  1038                           
  1039                           ;main.c: 155:     WPUBbits.WPUB0 = 1;
  1040  037E  1683               	bsf	3,5	;RP0=1, select bank1
  1041  037F  1303               	bcf	3,6	;RP1=0, select bank1
  1042  0380  1415               	bsf	21,0	;volatile
  1043  0381                     l1648:
  1044                           
  1045                           ;main.c: 156:     WPUBbits.WPUB1 = 1;
  1046  0381  1495               	bsf	21,1	;volatile
  1047  0382                     l1650:
  1048                           
  1049                           ;main.c: 157:     OPTION_REG = 0b01010111;
  1050  0382  3057               	movlw	87
  1051  0383  0081               	movwf	1	;volatile
  1052  0384                     l1652:
  1053                           
  1054                           ;main.c: 158:     PIE1bits.ADIE = 0;
  1055  0384  130C               	bcf	12,6	;volatile
  1056  0385                     l1654:
  1057                           
  1058                           ;main.c: 159:     PIE1bits.RCIE = 1;
  1059  0385  168C               	bsf	12,5	;volatile
  1060  0386                     l1656:
  1061                           
  1062                           ;main.c: 160:     PIE1bits.TXIE = 1;
  1063  0386  160C               	bsf	12,4	;volatile
  1064  0387                     l147:
  1065  0387  0008               	return
  1066  0388                     __end_of_Setup:
  1067                           
  1068                           	psect	text3
  1069  00CC                     __ptext3:	
  1070 ;; *************** function _LECT2 *****************
  1071 ;; Defined at:
  1072 ;;		line 170 in file "main.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0
  1088 ;;      Temps:          0       4       0       0       0
  1089 ;;      Totals:         0       4       0       0       0
  1090 ;;Total ram usage:        4 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; Hardware stack levels required when called: 4
  1093 ;; This function calls:
  1094 ;;		___awdiv
  1095 ;;		___bmul
  1096 ;;		___wmul
  1097 ;;		_num_ascii
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _LECT2
  1105  00CC                     _LECT2:
  1106  00CC                     l1680:	
  1107                           ;incstack = 0
  1108                           ; Regs used in _LECT2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1109                           
  1110                           
  1111                           ;main.c: 171:     Cen2 = BOTON/100;
  1112  00CC  3064               	movlw	100
  1113  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1114  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1115  00CF  00C0               	movwf	___awdiv@divisor
  1116  00D0  3000               	movlw	0
  1117  00D1  00C1               	movwf	___awdiv@divisor+1
  1118  00D2  0820               	movf	_BOTON,w
  1119  00D3  00C9               	movwf	??_LECT2
  1120  00D4  01CA               	clrf	??_LECT2+1
  1121  00D5  0849               	movf	??_LECT2,w
  1122  00D6  00C2               	movwf	___awdiv@dividend
  1123  00D7  084A               	movf	??_LECT2+1,w
  1124  00D8  00C3               	movwf	___awdiv@dividend+1
  1125  00D9  120A  118A  21CC  120A  118A  	fcall	___awdiv
  1126  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1127  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1128  00E0  0840               	movf	?___awdiv,w
  1129  00E1  00CB               	movwf	??_LECT2+2
  1130  00E2  084B               	movf	??_LECT2+2,w
  1131  00E3  00B3               	movwf	_Cen2
  1132                           
  1133                           ;main.c: 172:     Dec2 = (BOTON-Cen2*100)/10;
  1134  00E4  300A               	movlw	10
  1135  00E5  00C0               	movwf	___awdiv@divisor
  1136  00E6  3000               	movlw	0
  1137  00E7  00C1               	movwf	___awdiv@divisor+1
  1138  00E8  0833               	movf	_Cen2,w
  1139  00E9  00C9               	movwf	??_LECT2
  1140  00EA  01CA               	clrf	??_LECT2+1
  1141  00EB  0849               	movf	??_LECT2,w
  1142  00EC  00BA               	movwf	___wmul@multiplier
  1143  00ED  084A               	movf	??_LECT2+1,w
  1144  00EE  00BB               	movwf	___wmul@multiplier+1
  1145  00EF  309C               	movlw	156
  1146  00F0  00BC               	movwf	___wmul@multiplicand
  1147  00F1  30FF               	movlw	255
  1148  00F2  00BD               	movwf	___wmul@multiplicand+1
  1149  00F3  120A  118A  23B5  120A  118A  	fcall	___wmul
  1150  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1151  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1152  00FA  0820               	movf	_BOTON,w
  1153  00FB  073A               	addwf	?___wmul,w
  1154  00FC  00C2               	movwf	___awdiv@dividend
  1155  00FD  083B               	movf	?___wmul+1,w
  1156  00FE  1803               	skipnc
  1157  00FF  0A3B               	incf	?___wmul+1,w
  1158  0100  00C3               	movwf	___awdiv@dividend+1
  1159  0101  120A  118A  21CC  120A  118A  	fcall	___awdiv
  1160  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0108  0840               	movf	?___awdiv,w
  1163  0109  00CB               	movwf	??_LECT2+2
  1164  010A  084B               	movf	??_LECT2+2,w
  1165  010B  00B2               	movwf	_Dec2
  1166                           
  1167                           ;main.c: 173:     Un2 = (BOTON-Cen2*100-Dec2*10);
  1168  010C  309C               	movlw	156
  1169  010D  00C9               	movwf	??_LECT2
  1170  010E  0849               	movf	??_LECT2,w
  1171  010F  00BA               	movwf	___bmul@multiplicand
  1172  0110  0833               	movf	_Cen2,w
  1173  0111  120A  118A  23DC  120A  118A  	fcall	___bmul
  1174  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1175  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1176  0118  00CA               	movwf	??_LECT2+1
  1177  0119  30F6               	movlw	246
  1178  011A  00CB               	movwf	??_LECT2+2
  1179  011B  084B               	movf	??_LECT2+2,w
  1180  011C  00BA               	movwf	___bmul@multiplicand
  1181  011D  0832               	movf	_Dec2,w
  1182  011E  120A  118A  23DC  120A  118A  	fcall	___bmul
  1183  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1184  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1185  0125  074A               	addwf	??_LECT2+1,w
  1186  0126  0720               	addwf	_BOTON,w
  1187  0127  00CC               	movwf	??_LECT2+3
  1188  0128  084C               	movf	??_LECT2+3,w
  1189  0129  00B1               	movwf	_Un2
  1190  012A                     l1682:
  1191                           
  1192                           ;main.c: 174:     AC2 = num_ascii(Cen2);
  1193  012A  0833               	movf	_Cen2,w
  1194  012B  120A  118A  22D2  120A  118A  	fcall	_num_ascii
  1195  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1197  0132  00C9               	movwf	??_LECT2
  1198  0133  0849               	movf	??_LECT2,w
  1199  0134  00B0               	movwf	_AC2
  1200  0135                     l1684:
  1201                           
  1202                           ;main.c: 175:     AD2 = num_ascii(Dec2);
  1203  0135  0832               	movf	_Dec2,w
  1204  0136  120A  118A  22D2  120A  118A  	fcall	_num_ascii
  1205  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1206  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1207  013D  00C9               	movwf	??_LECT2
  1208  013E  0849               	movf	??_LECT2,w
  1209  013F  00AF               	movwf	_AD2
  1210  0140                     l1686:
  1211                           
  1212                           ;main.c: 176:     AU2 = num_ascii(Un2);
  1213  0140  0831               	movf	_Un2,w
  1214  0141  120A  118A  22D2  120A  118A  	fcall	_num_ascii
  1215  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0148  00C9               	movwf	??_LECT2
  1218  0149  0849               	movf	??_LECT2,w
  1219  014A  00AE               	movwf	_AU2
  1220  014B                     l153:
  1221  014B  0008               	return
  1222  014C                     __end_of_LECT2:
  1223                           
  1224                           	psect	text4
  1225  014C                     __ptext4:	
  1226 ;; *************** function _LECT1 *****************
  1227 ;; Defined at:
  1228 ;;		line 162 in file "main.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1242 ;;      Params:         0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0
  1244 ;;      Temps:          0       4       0       0       0
  1245 ;;      Totals:         0       4       0       0       0
  1246 ;;Total ram usage:        4 bytes
  1247 ;; Hardware stack levels used: 1
  1248 ;; Hardware stack levels required when called: 4
  1249 ;; This function calls:
  1250 ;;		___awdiv
  1251 ;;		___bmul
  1252 ;;		___wmul
  1253 ;;		_num_ascii
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           
  1260                           ;psect for function _LECT1
  1261  014C                     _LECT1:
  1262  014C                     l1672:	
  1263                           ;incstack = 0
  1264                           ; Regs used in _LECT1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1265                           
  1266                           
  1267                           ;main.c: 163:     Cen1 = CONT/100;
  1268  014C  3064               	movlw	100
  1269  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1270  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1271  014F  00C0               	movwf	___awdiv@divisor
  1272  0150  3000               	movlw	0
  1273  0151  00C1               	movwf	___awdiv@divisor+1
  1274  0152  082A               	movf	_CONT,w
  1275  0153  00C9               	movwf	??_LECT1
  1276  0154  01CA               	clrf	??_LECT1+1
  1277  0155  0849               	movf	??_LECT1,w
  1278  0156  00C2               	movwf	___awdiv@dividend
  1279  0157  084A               	movf	??_LECT1+1,w
  1280  0158  00C3               	movwf	___awdiv@dividend+1
  1281  0159  120A  118A  21CC  120A  118A  	fcall	___awdiv
  1282  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1283  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1284  0160  0840               	movf	?___awdiv,w
  1285  0161  00CB               	movwf	??_LECT1+2
  1286  0162  084B               	movf	??_LECT1+2,w
  1287  0163  00B9               	movwf	_Cen1
  1288                           
  1289                           ;main.c: 164:     Dec1 = (CONT-Cen1*100)/10;
  1290  0164  300A               	movlw	10
  1291  0165  00C0               	movwf	___awdiv@divisor
  1292  0166  3000               	movlw	0
  1293  0167  00C1               	movwf	___awdiv@divisor+1
  1294  0168  0839               	movf	_Cen1,w
  1295  0169  00C9               	movwf	??_LECT1
  1296  016A  01CA               	clrf	??_LECT1+1
  1297  016B  0849               	movf	??_LECT1,w
  1298  016C  00BA               	movwf	___wmul@multiplier
  1299  016D  084A               	movf	??_LECT1+1,w
  1300  016E  00BB               	movwf	___wmul@multiplier+1
  1301  016F  309C               	movlw	156
  1302  0170  00BC               	movwf	___wmul@multiplicand
  1303  0171  30FF               	movlw	255
  1304  0172  00BD               	movwf	___wmul@multiplicand+1
  1305  0173  120A  118A  23B5  120A  118A  	fcall	___wmul
  1306  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1308  017A  082A               	movf	_CONT,w
  1309  017B  073A               	addwf	?___wmul,w
  1310  017C  00C2               	movwf	___awdiv@dividend
  1311  017D  083B               	movf	?___wmul+1,w
  1312  017E  1803               	skipnc
  1313  017F  0A3B               	incf	?___wmul+1,w
  1314  0180  00C3               	movwf	___awdiv@dividend+1
  1315  0181  120A  118A  21CC  120A  118A  	fcall	___awdiv
  1316  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0188  0840               	movf	?___awdiv,w
  1319  0189  00CB               	movwf	??_LECT1+2
  1320  018A  084B               	movf	??_LECT1+2,w
  1321  018B  00B8               	movwf	_Dec1
  1322                           
  1323                           ;main.c: 165:     Un1 = (CONT-Cen1*100-Dec1*10);
  1324  018C  309C               	movlw	156
  1325  018D  00C9               	movwf	??_LECT1
  1326  018E  0849               	movf	??_LECT1,w
  1327  018F  00BA               	movwf	___bmul@multiplicand
  1328  0190  0839               	movf	_Cen1,w
  1329  0191  120A  118A  23DC  120A  118A  	fcall	___bmul
  1330  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1331  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1332  0198  00CA               	movwf	??_LECT1+1
  1333  0199  30F6               	movlw	246
  1334  019A  00CB               	movwf	??_LECT1+2
  1335  019B  084B               	movf	??_LECT1+2,w
  1336  019C  00BA               	movwf	___bmul@multiplicand
  1337  019D  0838               	movf	_Dec1,w
  1338  019E  120A  118A  23DC  120A  118A  	fcall	___bmul
  1339  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1340  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1341  01A5  074A               	addwf	??_LECT1+1,w
  1342  01A6  072A               	addwf	_CONT,w
  1343  01A7  00CC               	movwf	??_LECT1+3
  1344  01A8  084C               	movf	??_LECT1+3,w
  1345  01A9  00B7               	movwf	_Un1
  1346  01AA                     l1674:
  1347                           
  1348                           ;main.c: 166:     AC1 = num_ascii(Cen1);
  1349  01AA  0839               	movf	_Cen1,w
  1350  01AB  120A  118A  22D2  120A  118A  	fcall	_num_ascii
  1351  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1352  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1353  01B2  00C9               	movwf	??_LECT1
  1354  01B3  0849               	movf	??_LECT1,w
  1355  01B4  00B6               	movwf	_AC1
  1356  01B5                     l1676:
  1357                           
  1358                           ;main.c: 167:     AD1 = num_ascii(Dec1);
  1359  01B5  0838               	movf	_Dec1,w
  1360  01B6  120A  118A  22D2  120A  118A  	fcall	_num_ascii
  1361  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1362  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1363  01BD  00C9               	movwf	??_LECT1
  1364  01BE  0849               	movf	??_LECT1,w
  1365  01BF  00B5               	movwf	_AD1
  1366  01C0                     l1678:
  1367                           
  1368                           ;main.c: 168:     AU1 = num_ascii(Un1);
  1369  01C0  0837               	movf	_Un1,w
  1370  01C1  120A  118A  22D2  120A  118A  	fcall	_num_ascii
  1371  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1372  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1373  01C8  00C9               	movwf	??_LECT1
  1374  01C9  0849               	movf	??_LECT1,w
  1375  01CA  00B4               	movwf	_AU1
  1376  01CB                     l150:
  1377  01CB  0008               	return
  1378  01CC                     __end_of_LECT1:
  1379                           
  1380                           	psect	text5
  1381  02D2                     __ptext5:	
  1382 ;; *************** function _num_ascii *****************
  1383 ;; Defined at:
  1384 ;;		line 3 in file "ASCII.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  num             1    wreg     unsigned char 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  num             1    2[BANK0 ] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      unsigned char 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       0       0       0       0
  1399 ;;      Locals:         0       1       0       0       0
  1400 ;;      Temps:          0       2       0       0       0
  1401 ;;      Totals:         0       3       0       0       0
  1402 ;;Total ram usage:        3 bytes
  1403 ;; Hardware stack levels used: 1
  1404 ;; Hardware stack levels required when called: 3
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_LECT1
  1409 ;;		_LECT2
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           
  1414                           ;psect for function _num_ascii
  1415  02D2                     _num_ascii:
  1416                           
  1417                           ;incstack = 0
  1418                           ; Regs used in _num_ascii: [wreg-fsr0h+status,2+status,0]
  1419                           ;num_ascii@num stored from wreg
  1420  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1421  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1422  02D4  00BC               	movwf	num_ascii@num
  1423  02D5                     l1302:
  1424                           
  1425                           ;ASCII.c: 4:  switch(num){
  1426  02D5  2AEA               	goto	l1372
  1427  02D6                     l1304:
  1428                           
  1429                           ;ASCII.c: 6:   return 0x30;
  1430  02D6  3030               	movlw	48
  1431  02D7  2B12               	goto	l180
  1432  02D8                     l1316:
  1433                           
  1434                           ;ASCII.c: 14:   return 0x31;
  1435  02D8  3031               	movlw	49
  1436  02D9  2B12               	goto	l180
  1437  02DA                     l1322:
  1438                           
  1439                           ;ASCII.c: 18:   return 0x32;
  1440  02DA  3032               	movlw	50
  1441  02DB  2B12               	goto	l180
  1442  02DC                     l1328:
  1443                           
  1444                           ;ASCII.c: 22:   return 0x33;
  1445  02DC  3033               	movlw	51
  1446  02DD  2B12               	goto	l180
  1447  02DE                     l1334:
  1448                           
  1449                           ;ASCII.c: 26:   return 0x34;
  1450  02DE  3034               	movlw	52
  1451  02DF  2B12               	goto	l180
  1452  02E0                     l1340:
  1453                           
  1454                           ;ASCII.c: 30:   return 0x35;
  1455  02E0  3035               	movlw	53
  1456  02E1  2B12               	goto	l180
  1457  02E2                     l1346:
  1458                           
  1459                           ;ASCII.c: 34:   return 0x36;
  1460  02E2  3036               	movlw	54
  1461  02E3  2B12               	goto	l180
  1462  02E4                     l1352:
  1463                           
  1464                           ;ASCII.c: 38:   return 0x37;
  1465  02E4  3037               	movlw	55
  1466  02E5  2B12               	goto	l180
  1467  02E6                     l1358:
  1468                           
  1469                           ;ASCII.c: 42:   return 0x38;
  1470  02E6  3038               	movlw	56
  1471  02E7  2B12               	goto	l180
  1472  02E8                     l1364:
  1473                           
  1474                           ;ASCII.c: 46:   return 0x39;
  1475  02E8  3039               	movlw	57
  1476  02E9  2B12               	goto	l180
  1477  02EA                     l1372:
  1478  02EA  083C               	movf	num_ascii@num,w
  1479  02EB  00BA               	movwf	??_num_ascii
  1480  02EC  01BB               	clrf	??_num_ascii+1
  1481                           
  1482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1483                           ; Switch size 1, requested type "simple"
  1484                           ; Number of cases is 1, Range of values is 0 to 0
  1485                           ; switch strategies available:
  1486                           ; Name         Instructions Cycles
  1487                           ; simple_byte            4     3 (average)
  1488                           ; direct_byte           11     8 (fixed)
  1489                           ; jumptable            260     6 (fixed)
  1490                           ;	Chosen strategy is simple_byte
  1491  02ED  083B               	movf	??_num_ascii+1,w
  1492  02EE  3A00               	xorlw	0	; case 0
  1493  02EF  1903               	skipnz
  1494  02F0  2AF2               	goto	l1804
  1495  02F1  2AD6               	goto	l1304
  1496  02F2                     l1804:
  1497                           
  1498                           ; Switch size 1, requested type "simple"
  1499                           ; Number of cases is 10, Range of values is 0 to 9
  1500                           ; switch strategies available:
  1501                           ; Name         Instructions Cycles
  1502                           ; simple_byte           31    16 (average)
  1503                           ; direct_byte           38     8 (fixed)
  1504                           ; jumptable            260     6 (fixed)
  1505                           ;	Chosen strategy is simple_byte
  1506  02F2  083A               	movf	??_num_ascii,w
  1507  02F3  3A00               	xorlw	0	; case 0
  1508  02F4  1903               	skipnz
  1509  02F5  2AD6               	goto	l1304
  1510  02F6  3A01               	xorlw	1	; case 1
  1511  02F7  1903               	skipnz
  1512  02F8  2AD8               	goto	l1316
  1513  02F9  3A03               	xorlw	3	; case 2
  1514  02FA  1903               	skipnz
  1515  02FB  2ADA               	goto	l1322
  1516  02FC  3A01               	xorlw	1	; case 3
  1517  02FD  1903               	skipnz
  1518  02FE  2ADC               	goto	l1328
  1519  02FF  3A07               	xorlw	7	; case 4
  1520  0300  1903               	skipnz
  1521  0301  2ADE               	goto	l1334
  1522  0302  3A01               	xorlw	1	; case 5
  1523  0303  1903               	skipnz
  1524  0304  2AE0               	goto	l1340
  1525  0305  3A03               	xorlw	3	; case 6
  1526  0306  1903               	skipnz
  1527  0307  2AE2               	goto	l1346
  1528  0308  3A01               	xorlw	1	; case 7
  1529  0309  1903               	skipnz
  1530  030A  2AE4               	goto	l1352
  1531  030B  3A0F               	xorlw	15	; case 8
  1532  030C  1903               	skipnz
  1533  030D  2AE6               	goto	l1358
  1534  030E  3A01               	xorlw	1	; case 9
  1535  030F  1903               	skipnz
  1536  0310  2AE8               	goto	l1364
  1537  0311  2AD6               	goto	l1304
  1538  0312                     l180:
  1539  0312  0008               	return
  1540  0313                     __end_of_num_ascii:
  1541                           
  1542                           	psect	text6
  1543  03B5                     __ptext6:	
  1544 ;; *************** function ___wmul *****************
  1545 ;; Defined at:
  1546 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1549 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  product         2    4[BANK0 ] unsigned int 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  2    0[BANK0 ] unsigned int 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2, status,0
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1561 ;;      Params:         0       4       0       0       0
  1562 ;;      Locals:         0       2       0       0       0
  1563 ;;      Temps:          0       0       0       0       0
  1564 ;;      Totals:         0       6       0       0       0
  1565 ;;Total ram usage:        6 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; Hardware stack levels required when called: 3
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_LECT1
  1572 ;;		_LECT2
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function ___wmul
  1578  03B5                     ___wmul:
  1579  03B5                     l1456:	
  1580                           ;incstack = 0
  1581                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1582                           
  1583  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1584  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1585  03B7  01BE               	clrf	___wmul@product
  1586  03B8  01BF               	clrf	___wmul@product+1
  1587  03B9                     l1458:
  1588  03B9  1C3A               	btfss	___wmul@multiplier,0
  1589  03BA  2BBC               	goto	u511
  1590  03BB  2BBD               	goto	u510
  1591  03BC                     u511:
  1592  03BC  2BC3               	goto	l306
  1593  03BD                     u510:
  1594  03BD                     l1460:
  1595  03BD  083C               	movf	___wmul@multiplicand,w
  1596  03BE  07BE               	addwf	___wmul@product,f
  1597  03BF  1803               	skipnc
  1598  03C0  0ABF               	incf	___wmul@product+1,f
  1599  03C1  083D               	movf	___wmul@multiplicand+1,w
  1600  03C2  07BF               	addwf	___wmul@product+1,f
  1601  03C3                     l306:
  1602  03C3  3001               	movlw	1
  1603  03C4                     u525:
  1604  03C4  1003               	clrc
  1605  03C5  0DBC               	rlf	___wmul@multiplicand,f
  1606  03C6  0DBD               	rlf	___wmul@multiplicand+1,f
  1607  03C7  3EFF               	addlw	-1
  1608  03C8  1D03               	skipz
  1609  03C9  2BC4               	goto	u525
  1610  03CA                     l1462:
  1611  03CA  3001               	movlw	1
  1612  03CB                     u535:
  1613  03CB  1003               	clrc
  1614  03CC  0CBB               	rrf	___wmul@multiplier+1,f
  1615  03CD  0CBA               	rrf	___wmul@multiplier,f
  1616  03CE  3EFF               	addlw	-1
  1617  03CF  1D03               	skipz
  1618  03D0  2BCB               	goto	u535
  1619  03D1                     l1464:
  1620  03D1  083A               	movf	___wmul@multiplier,w
  1621  03D2  043B               	iorwf	___wmul@multiplier+1,w
  1622  03D3  1D03               	btfss	3,2
  1623  03D4  2BD6               	goto	u541
  1624  03D5  2BD7               	goto	u540
  1625  03D6                     u541:
  1626  03D6  2BB9               	goto	l1458
  1627  03D7                     u540:
  1628  03D7                     l1466:
  1629  03D7  083F               	movf	___wmul@product+1,w
  1630  03D8  00BB               	movwf	?___wmul+1
  1631  03D9  083E               	movf	___wmul@product,w
  1632  03DA  00BA               	movwf	?___wmul
  1633  03DB                     l308:
  1634  03DB  0008               	return
  1635  03DC                     __end_of___wmul:
  1636                           
  1637                           	psect	text7
  1638  03DC                     __ptext7:	
  1639 ;; *************** function ___bmul *****************
  1640 ;; Defined at:
  1641 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  multiplier      1    wreg     unsigned char 
  1644 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1647 ;;  product         1    2[BANK0 ] unsigned char 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      unsigned char 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1657 ;;      Params:         0       1       0       0       0
  1658 ;;      Locals:         0       2       0       0       0
  1659 ;;      Temps:          0       1       0       0       0
  1660 ;;      Totals:         0       4       0       0       0
  1661 ;;Total ram usage:        4 bytes
  1662 ;; Hardware stack levels used: 1
  1663 ;; Hardware stack levels required when called: 3
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_LECT1
  1668 ;;		_LECT2
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           
  1673                           ;psect for function ___bmul
  1674  03DC                     ___bmul:
  1675                           
  1676                           ;incstack = 0
  1677                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1678                           ;___bmul@multiplier stored from wreg
  1679  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1680  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1681  03DE  00BD               	movwf	___bmul@multiplier
  1682  03DF                     l1470:
  1683  03DF  01BC               	clrf	___bmul@product
  1684  03E0                     l1472:
  1685  03E0  1C3D               	btfss	___bmul@multiplier,0
  1686  03E1  2BE3               	goto	u551
  1687  03E2  2BE4               	goto	u550
  1688  03E3                     u551:
  1689  03E3  2BE8               	goto	l1476
  1690  03E4                     u550:
  1691  03E4                     l1474:
  1692  03E4  083A               	movf	___bmul@multiplicand,w
  1693  03E5  00BB               	movwf	??___bmul
  1694  03E6  083B               	movf	??___bmul,w
  1695  03E7  07BC               	addwf	___bmul@product,f
  1696  03E8                     l1476:
  1697  03E8  1003               	clrc
  1698  03E9  0DBA               	rlf	___bmul@multiplicand,f
  1699  03EA                     l1478:
  1700  03EA  1003               	clrc
  1701  03EB  0CBD               	rrf	___bmul@multiplier,f
  1702  03EC  083D               	movf	___bmul@multiplier,w
  1703  03ED  1D03               	btfss	3,2
  1704  03EE  2BF0               	goto	u561
  1705  03EF  2BF1               	goto	u560
  1706  03F0                     u561:
  1707  03F0  2BE0               	goto	l1472
  1708  03F1                     u560:
  1709  03F1                     l1480:
  1710  03F1  083C               	movf	___bmul@product,w
  1711  03F2                     l332:
  1712  03F2  0008               	return
  1713  03F3                     __end_of___bmul:
  1714                           
  1715                           	psect	text8
  1716  01CC                     __ptext8:	
  1717 ;; *************** function ___awdiv *****************
  1718 ;; Defined at:
  1719 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  divisor         2    6[BANK0 ] int 
  1722 ;;  dividend        2    8[BANK0 ] int 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  quotient        2   13[BANK0 ] int 
  1725 ;;  sign            1   12[BANK0 ] unsigned char 
  1726 ;;  counter         1   11[BANK0 ] unsigned char 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  2    6[BANK0 ] int 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1736 ;;      Params:         0       4       0       0       0
  1737 ;;      Locals:         0       4       0       0       0
  1738 ;;      Temps:          0       1       0       0       0
  1739 ;;      Totals:         0       9       0       0       0
  1740 ;;Total ram usage:        9 bytes
  1741 ;; Hardware stack levels used: 1
  1742 ;; Hardware stack levels required when called: 3
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_LECT1
  1747 ;;		_LECT2
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           
  1752                           ;psect for function ___awdiv
  1753  01CC                     ___awdiv:
  1754  01CC                     l1484:	
  1755                           ;incstack = 0
  1756                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1757                           
  1758  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1759  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1760  01CE  01C6               	clrf	___awdiv@sign
  1761  01CF                     l1486:
  1762  01CF  1FC1               	btfss	___awdiv@divisor+1,7
  1763  01D0  29D2               	goto	u571
  1764  01D1  29D3               	goto	u570
  1765  01D2                     u571:
  1766  01D2  29DA               	goto	l1492
  1767  01D3                     u570:
  1768  01D3                     l1488:
  1769  01D3  09C0               	comf	___awdiv@divisor,f
  1770  01D4  09C1               	comf	___awdiv@divisor+1,f
  1771  01D5  0AC0               	incf	___awdiv@divisor,f
  1772  01D6  1903               	skipnz
  1773  01D7  0AC1               	incf	___awdiv@divisor+1,f
  1774  01D8                     l1490:
  1775  01D8  01C6               	clrf	___awdiv@sign
  1776  01D9  0AC6               	incf	___awdiv@sign,f
  1777  01DA                     l1492:
  1778  01DA  1FC3               	btfss	___awdiv@dividend+1,7
  1779  01DB  29DD               	goto	u581
  1780  01DC  29DE               	goto	u580
  1781  01DD                     u581:
  1782  01DD  29E7               	goto	l1498
  1783  01DE                     u580:
  1784  01DE                     l1494:
  1785  01DE  09C2               	comf	___awdiv@dividend,f
  1786  01DF  09C3               	comf	___awdiv@dividend+1,f
  1787  01E0  0AC2               	incf	___awdiv@dividend,f
  1788  01E1  1903               	skipnz
  1789  01E2  0AC3               	incf	___awdiv@dividend+1,f
  1790  01E3                     l1496:
  1791  01E3  3001               	movlw	1
  1792  01E4  00C4               	movwf	??___awdiv
  1793  01E5  0844               	movf	??___awdiv,w
  1794  01E6  06C6               	xorwf	___awdiv@sign,f
  1795  01E7                     l1498:
  1796  01E7  01C7               	clrf	___awdiv@quotient
  1797  01E8  01C8               	clrf	___awdiv@quotient+1
  1798  01E9                     l1500:
  1799  01E9  0840               	movf	___awdiv@divisor,w
  1800  01EA  0441               	iorwf	___awdiv@divisor+1,w
  1801  01EB  1903               	btfsc	3,2
  1802  01EC  29EE               	goto	u591
  1803  01ED  29EF               	goto	u590
  1804  01EE                     u591:
  1805  01EE  2A26               	goto	l1520
  1806  01EF                     u590:
  1807  01EF                     l1502:
  1808  01EF  01C5               	clrf	___awdiv@counter
  1809  01F0  0AC5               	incf	___awdiv@counter,f
  1810  01F1  29FD               	goto	l1508
  1811  01F2                     l1504:
  1812  01F2  3001               	movlw	1
  1813  01F3                     u605:
  1814  01F3  1003               	clrc
  1815  01F4  0DC0               	rlf	___awdiv@divisor,f
  1816  01F5  0DC1               	rlf	___awdiv@divisor+1,f
  1817  01F6  3EFF               	addlw	-1
  1818  01F7  1D03               	skipz
  1819  01F8  29F3               	goto	u605
  1820  01F9                     l1506:
  1821  01F9  3001               	movlw	1
  1822  01FA  00C4               	movwf	??___awdiv
  1823  01FB  0844               	movf	??___awdiv,w
  1824  01FC  07C5               	addwf	___awdiv@counter,f
  1825  01FD                     l1508:
  1826  01FD  1FC1               	btfss	___awdiv@divisor+1,7
  1827  01FE  2A00               	goto	u611
  1828  01FF  2A01               	goto	u610
  1829  0200                     u611:
  1830  0200  29F2               	goto	l1504
  1831  0201                     u610:
  1832  0201                     l1510:
  1833  0201  3001               	movlw	1
  1834  0202                     u625:
  1835  0202  1003               	clrc
  1836  0203  0DC7               	rlf	___awdiv@quotient,f
  1837  0204  0DC8               	rlf	___awdiv@quotient+1,f
  1838  0205  3EFF               	addlw	-1
  1839  0206  1D03               	skipz
  1840  0207  2A02               	goto	u625
  1841  0208  0841               	movf	___awdiv@divisor+1,w
  1842  0209  0243               	subwf	___awdiv@dividend+1,w
  1843  020A  1D03               	skipz
  1844  020B  2A0E               	goto	u635
  1845  020C  0840               	movf	___awdiv@divisor,w
  1846  020D  0242               	subwf	___awdiv@dividend,w
  1847  020E                     u635:
  1848  020E  1C03               	skipc
  1849  020F  2A11               	goto	u631
  1850  0210  2A12               	goto	u630
  1851  0211                     u631:
  1852  0211  2A19               	goto	l1516
  1853  0212                     u630:
  1854  0212                     l1512:
  1855  0212  0840               	movf	___awdiv@divisor,w
  1856  0213  02C2               	subwf	___awdiv@dividend,f
  1857  0214  0841               	movf	___awdiv@divisor+1,w
  1858  0215  1C03               	skipc
  1859  0216  03C3               	decf	___awdiv@dividend+1,f
  1860  0217  02C3               	subwf	___awdiv@dividend+1,f
  1861  0218                     l1514:
  1862  0218  1447               	bsf	___awdiv@quotient,0
  1863  0219                     l1516:
  1864  0219  3001               	movlw	1
  1865  021A                     u645:
  1866  021A  1003               	clrc
  1867  021B  0CC1               	rrf	___awdiv@divisor+1,f
  1868  021C  0CC0               	rrf	___awdiv@divisor,f
  1869  021D  3EFF               	addlw	-1
  1870  021E  1D03               	skipz
  1871  021F  2A1A               	goto	u645
  1872  0220                     l1518:
  1873  0220  3001               	movlw	1
  1874  0221  02C5               	subwf	___awdiv@counter,f
  1875  0222  1D03               	btfss	3,2
  1876  0223  2A25               	goto	u651
  1877  0224  2A26               	goto	u650
  1878  0225                     u651:
  1879  0225  2A01               	goto	l1510
  1880  0226                     u650:
  1881  0226                     l1520:
  1882  0226  0846               	movf	___awdiv@sign,w
  1883  0227  1903               	btfsc	3,2
  1884  0228  2A2A               	goto	u661
  1885  0229  2A2B               	goto	u660
  1886  022A                     u661:
  1887  022A  2A30               	goto	l1524
  1888  022B                     u660:
  1889  022B                     l1522:
  1890  022B  09C7               	comf	___awdiv@quotient,f
  1891  022C  09C8               	comf	___awdiv@quotient+1,f
  1892  022D  0AC7               	incf	___awdiv@quotient,f
  1893  022E  1903               	skipnz
  1894  022F  0AC8               	incf	___awdiv@quotient+1,f
  1895  0230                     l1524:
  1896  0230  0848               	movf	___awdiv@quotient+1,w
  1897  0231  00C1               	movwf	?___awdiv+1
  1898  0232  0847               	movf	___awdiv@quotient,w
  1899  0233  00C0               	movwf	?___awdiv
  1900  0234                     l459:
  1901  0234  0008               	return
  1902  0235                     __end_of___awdiv:
  1903                           
  1904                           	psect	text9
  1905  0235                     __ptext9:	
  1906 ;; *************** function _ISR *****************
  1907 ;; Defined at:
  1908 ;;		line 73 in file "main.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1922 ;;      Params:         0       0       0       0       0
  1923 ;;      Locals:         0       0       0       0       0
  1924 ;;      Temps:          4       0       0       0       0
  1925 ;;      Totals:         4       0       0       0       0
  1926 ;;Total ram usage:        4 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 2
  1929 ;; This function calls:
  1930 ;;		_CONTADOR
  1931 ;;		_envio
  1932 ;; This function is called by:
  1933 ;;		Interrupt level 1
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _ISR
  1939  0235                     _ISR:
  1940  0235                     i1l1688:
  1941                           
  1942                           ;main.c: 74:     if (PIR1bits.RCIF == 1){
  1943  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0237  1E8C               	btfss	12,5	;volatile
  1946  0238  2A3A               	goto	u87_21
  1947  0239  2A3B               	goto	u87_20
  1948  023A                     u87_21:
  1949  023A  2A44               	goto	i1l1694
  1950  023B                     u87_20:
  1951  023B                     i1l1690:
  1952                           
  1953                           ;main.c: 75:         signo = RCREG;
  1954  023B  081A               	movf	26,w	;volatile
  1955  023C  00F8               	movwf	??_ISR
  1956  023D  0878               	movf	??_ISR,w
  1957  023E  00AD               	movwf	_signo
  1958  023F                     i1l1692:
  1959                           
  1960                           ;main.c: 76:         CONTADOR();
  1961  023F  120A  118A  2020  120A  118A  	fcall	_CONTADOR
  1962  0244                     i1l1694:
  1963                           
  1964                           ;main.c: 78:     if (PIR1bits.TXIF == 1){
  1965  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1966  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1967  0246  1E0C               	btfss	12,4	;volatile
  1968  0247  2A49               	goto	u88_21
  1969  0248  2A4A               	goto	u88_20
  1970  0249                     u88_21:
  1971  0249  2A4F               	goto	i1l1698
  1972  024A                     u88_20:
  1973  024A                     i1l1696:
  1974                           
  1975                           ;main.c: 79:         envio();
  1976  024A  120A  118A  2388  120A  118A  	fcall	_envio
  1977  024F                     i1l1698:
  1978                           
  1979                           ;main.c: 81:     if (INTCONbits.RBIF == 1){
  1980  024F  1C0B               	btfss	11,0	;volatile
  1981  0250  2A52               	goto	u89_21
  1982  0251  2A53               	goto	u89_20
  1983  0252                     u89_21:
  1984  0252  2A88               	goto	i1l134
  1985  0253                     u89_20:
  1986  0253                     i1l1700:
  1987                           
  1988                           ;main.c: 82:         INTCONbits.RBIF = 0;
  1989  0253  100B               	bcf	11,0	;volatile
  1990  0254                     i1l1702:
  1991                           
  1992                           ;main.c: 84:         AR1 = PORTBbits.RB0;
  1993  0254  3000               	movlw	0
  1994  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1995  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1996  0257  1806               	btfsc	6,0	;volatile
  1997  0258  3001               	movlw	1
  1998  0259  00A9               	movwf	_AR1
  1999  025A                     i1l1704:
  2000                           
  2001                           ;main.c: 85:         if (AR1==0){
  2002  025A  0829               	movf	_AR1,w
  2003  025B  1D03               	btfss	3,2
  2004  025C  2A5E               	goto	u90_21
  2005  025D  2A5F               	goto	u90_20
  2006  025E                     u90_21:
  2007  025E  2A60               	goto	i1l1708
  2008  025F                     u90_20:
  2009  025F                     i1l1706:
  2010                           
  2011                           ;main.c: 86:             AR2=0;
  2012  025F  01A8               	clrf	_AR2
  2013  0260                     i1l1708:
  2014                           
  2015                           ;main.c: 88:         if (AR2==0){
  2016  0260  0828               	movf	_AR2,w
  2017  0261  1D03               	btfss	3,2
  2018  0262  2A64               	goto	u91_21
  2019  0263  2A65               	goto	u91_20
  2020  0264                     u91_21:
  2021  0264  2A70               	goto	i1l1716
  2022  0265                     u91_20:
  2023  0265                     i1l1710:
  2024                           
  2025                           ;main.c: 89:             if (AR1==1){
  2026  0265  0329               	decf	_AR1,w
  2027  0266  1D03               	btfss	3,2
  2028  0267  2A69               	goto	u92_21
  2029  0268  2A6A               	goto	u92_20
  2030  0269                     u92_21:
  2031  0269  2A70               	goto	i1l1716
  2032  026A                     u92_20:
  2033  026A                     i1l1712:
  2034                           
  2035                           ;main.c: 90:                 BOTON++;
  2036  026A  3001               	movlw	1
  2037  026B  00F8               	movwf	??_ISR
  2038  026C  0878               	movf	??_ISR,w
  2039  026D  07A0               	addwf	_BOTON,f
  2040  026E                     i1l1714:
  2041                           
  2042                           ;main.c: 91:                 AR2=1;
  2043  026E  01A8               	clrf	_AR2
  2044  026F  0AA8               	incf	_AR2,f
  2045  0270                     i1l1716:
  2046                           
  2047                           ;main.c: 94:         AR3 = PORTBbits.RB1;
  2048  0270  3000               	movlw	0
  2049  0271  1886               	btfsc	6,1	;volatile
  2050  0272  3001               	movlw	1
  2051  0273  00A7               	movwf	_AR3
  2052  0274                     i1l1718:
  2053                           
  2054                           ;main.c: 95:         if (AR3==0){
  2055  0274  0827               	movf	_AR3,w
  2056  0275  1D03               	btfss	3,2
  2057  0276  2A78               	goto	u93_21
  2058  0277  2A79               	goto	u93_20
  2059  0278                     u93_21:
  2060  0278  2A7A               	goto	i1l1722
  2061  0279                     u93_20:
  2062  0279                     i1l1720:
  2063                           
  2064                           ;main.c: 96:             AR4=0;
  2065  0279  01A6               	clrf	_AR4
  2066  027A                     i1l1722:
  2067                           
  2068                           ;main.c: 98:         if (AR4==0){
  2069  027A  0826               	movf	_AR4,w
  2070  027B  1D03               	btfss	3,2
  2071  027C  2A7E               	goto	u94_21
  2072  027D  2A7F               	goto	u94_20
  2073  027E                     u94_21:
  2074  027E  2A88               	goto	i1l134
  2075  027F                     u94_20:
  2076  027F                     i1l1724:
  2077                           
  2078                           ;main.c: 99:             if (AR3==1){
  2079  027F  0327               	decf	_AR3,w
  2080  0280  1D03               	btfss	3,2
  2081  0281  2A83               	goto	u95_21
  2082  0282  2A84               	goto	u95_20
  2083  0283                     u95_21:
  2084  0283  2A88               	goto	i1l134
  2085  0284                     u95_20:
  2086  0284                     i1l1726:
  2087                           
  2088                           ;main.c: 100:                 BOTON--;
  2089  0284  3001               	movlw	1
  2090  0285  02A0               	subwf	_BOTON,f
  2091  0286                     i1l1728:
  2092                           
  2093                           ;main.c: 101:                 AR4=1;
  2094  0286  01A6               	clrf	_AR4
  2095  0287  0AA6               	incf	_AR4,f
  2096  0288                     i1l134:
  2097  0288  087B               	movf	??_ISR+3,w
  2098  0289  008A               	movwf	10
  2099  028A  087A               	movf	??_ISR+2,w
  2100  028B  0084               	movwf	4
  2101  028C  0E79               	swapf	??_ISR+1,w
  2102  028D  0083               	movwf	3
  2103  028E  0EFE               	swapf	btemp,f
  2104  028F  0E7E               	swapf	btemp,w
  2105  0290  0009               	retfie
  2106  0291                     __end_of_ISR:
  2107                           
  2108                           	psect	intentry
  2109  0004                     __pintentry:	
  2110                           ;incstack = 0
  2111                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2112                           
  2113  0004                     interrupt_function:
  2114  007E                     saved_w	set	btemp
  2115  0004  00FE               	movwf	btemp
  2116  0005  0E03               	swapf	3,w
  2117  0006  00F9               	movwf	??_ISR+1
  2118  0007  0804               	movf	4,w
  2119  0008  00FA               	movwf	??_ISR+2
  2120  0009  080A               	movf	10,w
  2121  000A  00FB               	movwf	??_ISR+3
  2122  000B  120A  118A  2A35   	ljmp	_ISR
  2123                           
  2124                           	psect	text10
  2125  0388                     __ptext10:	
  2126 ;; *************** function _envio *****************
  2127 ;; Defined at:
  2128 ;;		line 178 in file "main.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;		None
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;		None
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      void 
  2135 ;; Registers used:
  2136 ;;		wreg, status,2, status,0
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2142 ;;      Params:         0       0       0       0       0
  2143 ;;      Locals:         0       0       0       0       0
  2144 ;;      Temps:          1       0       0       0       0
  2145 ;;      Totals:         1       0       0       0       0
  2146 ;;Total ram usage:        1 bytes
  2147 ;; Hardware stack levels used: 1
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_ISR
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           
  2156                           ;psect for function _envio
  2157  0388                     _envio:
  2158  0388                     i1l1596:	
  2159                           ;incstack = 0
  2160                           ; Regs used in _envio: [wreg+status,2+status,0]
  2161                           
  2162                           
  2163                           ;main.c: 179:     toggleTX++;
  2164  0388  3001               	movlw	1
  2165  0389  00F0               	movwf	??_envio
  2166  038A  0870               	movf	??_envio,w
  2167  038B  07FD               	addwf	_toggleTX,f
  2168                           
  2169                           ;main.c: 180:     if (toggleTX == 1){
  2170  038C  037D               	decf	_toggleTX,w
  2171  038D  1D03               	btfss	3,2
  2172  038E  2B90               	goto	u83_21
  2173  038F  2B91               	goto	u83_20
  2174  0390                     u83_21:
  2175  0390  2B95               	goto	i1l1600
  2176  0391                     u83_20:
  2177  0391                     i1l1598:
  2178                           
  2179                           ;main.c: 181:         TXREG = AC2;
  2180  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0393  0830               	movf	_AC2,w
  2183  0394  0099               	movwf	25	;volatile
  2184  0395                     i1l1600:
  2185                           
  2186                           ;main.c: 183:     if (toggleTX == 2){
  2187  0395  3002               	movlw	2
  2188  0396  067D               	xorwf	_toggleTX,w
  2189  0397  1D03               	btfss	3,2
  2190  0398  2B9A               	goto	u84_21
  2191  0399  2B9B               	goto	u84_20
  2192  039A                     u84_21:
  2193  039A  2B9F               	goto	i1l1604
  2194  039B                     u84_20:
  2195  039B                     i1l1602:
  2196                           
  2197                           ;main.c: 184:         TXREG = AD2;
  2198  039B  1283               	bcf	3,5	;RP0=0, select bank0
  2199  039C  1303               	bcf	3,6	;RP1=0, select bank0
  2200  039D  082F               	movf	_AD2,w
  2201  039E  0099               	movwf	25	;volatile
  2202  039F                     i1l1604:
  2203                           
  2204                           ;main.c: 186:     if (toggleTX == 3){
  2205  039F  3003               	movlw	3
  2206  03A0  067D               	xorwf	_toggleTX,w
  2207  03A1  1D03               	btfss	3,2
  2208  03A2  2BA4               	goto	u85_21
  2209  03A3  2BA5               	goto	u85_20
  2210  03A4                     u85_21:
  2211  03A4  2BA9               	goto	i1l1608
  2212  03A5                     u85_20:
  2213  03A5                     i1l1606:
  2214                           
  2215                           ;main.c: 187:         TXREG = AU2;
  2216  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2217  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2218  03A7  082E               	movf	_AU2,w
  2219  03A8  0099               	movwf	25	;volatile
  2220  03A9                     i1l1608:
  2221                           
  2222                           ;main.c: 189:     if (toggleTX == 4){
  2223  03A9  3004               	movlw	4
  2224  03AA  067D               	xorwf	_toggleTX,w
  2225  03AB  1D03               	btfss	3,2
  2226  03AC  2BAE               	goto	u86_21
  2227  03AD  2BAF               	goto	u86_20
  2228  03AE                     u86_21:
  2229  03AE  2BB4               	goto	i1l160
  2230  03AF                     u86_20:
  2231  03AF                     i1l1610:
  2232                           
  2233                           ;main.c: 190:         TXREG = 10;
  2234  03AF  300A               	movlw	10
  2235  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  2236  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  2237  03B2  0099               	movwf	25	;volatile
  2238  03B3                     i1l1612:
  2239                           
  2240                           ;main.c: 191:         toggleTX = 0;
  2241  03B3  01FD               	clrf	_toggleTX
  2242  03B4                     i1l160:
  2243  03B4  0008               	return
  2244  03B5                     __end_of_envio:
  2245                           
  2246                           	psect	text11
  2247  0020                     __ptext11:	
  2248 ;; *************** function _CONTADOR *****************
  2249 ;; Defined at:
  2250 ;;		line 195 in file "main.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2264 ;;      Params:         0       0       0       0       0
  2265 ;;      Locals:         0       0       0       0       0
  2266 ;;      Temps:          4       0       0       0       0
  2267 ;;      Totals:         4       0       0       0       0
  2268 ;;Total ram usage:        4 bytes
  2269 ;; Hardware stack levels used: 1
  2270 ;; Hardware stack levels required when called: 1
  2271 ;; This function calls:
  2272 ;;		_num_ascii_dec
  2273 ;;		i1___bmul
  2274 ;; This function is called by:
  2275 ;;		_ISR
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           
  2280                           ;psect for function _CONTADOR
  2281  0020                     _CONTADOR:
  2282  0020                     i1l1542:	
  2283                           ;incstack = 0
  2284                           ; Regs used in _CONTADOR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2285                           
  2286                           
  2287                           ;main.c: 196:     if (signo == 43){
  2288  0020  302B               	movlw	43
  2289  0021  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0022  1303               	bcf	3,6	;RP1=0, select bank0
  2291  0023  062D               	xorwf	_signo,w
  2292  0024  1D03               	btfss	3,2
  2293  0025  2827               	goto	u69_21
  2294  0026  2828               	goto	u69_20
  2295  0027                     u69_21:
  2296  0027  282A               	goto	i1l1546
  2297  0028                     u69_20:
  2298  0028                     i1l1544:
  2299                           
  2300                           ;main.c: 197:         sum = 1;
  2301  0028  01AC               	clrf	_sum
  2302  0029  0AAC               	incf	_sum,f
  2303  002A                     i1l1546:
  2304                           
  2305                           ;main.c: 200:     if (signo == 13 && sum == 1){
  2306  002A  300D               	movlw	13
  2307  002B  062D               	xorwf	_signo,w
  2308  002C  1D03               	btfss	3,2
  2309  002D  282F               	goto	u70_21
  2310  002E  2830               	goto	u70_20
  2311  002F                     u70_21:
  2312  002F  283A               	goto	i1l1554
  2313  0030                     u70_20:
  2314  0030                     i1l1548:
  2315  0030  032C               	decf	_sum,w
  2316  0031  1D03               	btfss	3,2
  2317  0032  2834               	goto	u71_21
  2318  0033  2835               	goto	u71_20
  2319  0034                     u71_21:
  2320  0034  283A               	goto	i1l1554
  2321  0035                     u71_20:
  2322  0035                     i1l1550:
  2323                           
  2324                           ;main.c: 201:             sum = 0;
  2325  0035  01AC               	clrf	_sum
  2326  0036                     i1l1552:
  2327                           
  2328                           ;main.c: 202:             A1++;
  2329  0036  3001               	movlw	1
  2330  0037  00F4               	movwf	??_CONTADOR
  2331  0038  0874               	movf	??_CONTADOR,w
  2332  0039  07A1               	addwf	_A1,f
  2333  003A                     i1l1554:
  2334                           
  2335                           ;main.c: 205:     if (signo == 45){
  2336  003A  302D               	movlw	45
  2337  003B  062D               	xorwf	_signo,w
  2338  003C  1D03               	btfss	3,2
  2339  003D  283F               	goto	u72_21
  2340  003E  2840               	goto	u72_20
  2341  003F                     u72_21:
  2342  003F  2842               	goto	i1l1558
  2343  0040                     u72_20:
  2344  0040                     i1l1556:
  2345                           
  2346                           ;main.c: 206:         res = 1;
  2347  0040  01AB               	clrf	_res
  2348  0041  0AAB               	incf	_res,f
  2349  0042                     i1l1558:
  2350                           
  2351                           ;main.c: 209:     if(signo ==13 && res == 1){
  2352  0042  300D               	movlw	13
  2353  0043  062D               	xorwf	_signo,w
  2354  0044  1D03               	btfss	3,2
  2355  0045  2847               	goto	u73_21
  2356  0046  2848               	goto	u73_20
  2357  0047                     u73_21:
  2358  0047  2850               	goto	i1l1566
  2359  0048                     u73_20:
  2360  0048                     i1l1560:
  2361  0048  032B               	decf	_res,w
  2362  0049  1D03               	btfss	3,2
  2363  004A  284C               	goto	u74_21
  2364  004B  284D               	goto	u74_20
  2365  004C                     u74_21:
  2366  004C  2850               	goto	i1l1566
  2367  004D                     u74_20:
  2368  004D                     i1l1562:
  2369                           
  2370                           ;main.c: 210:         res = 0;
  2371  004D  01AB               	clrf	_res
  2372  004E                     i1l1564:
  2373                           
  2374                           ;main.c: 211:         A1--;
  2375  004E  3001               	movlw	1
  2376  004F  02A1               	subwf	_A1,f
  2377  0050                     i1l1566:
  2378                           
  2379                           ;main.c: 213:     if(47<signo && signo<58){
  2380  0050  3030               	movlw	48
  2381  0051  022D               	subwf	_signo,w
  2382  0052  1C03               	skipc
  2383  0053  2855               	goto	u75_21
  2384  0054  2856               	goto	u75_20
  2385  0055                     u75_21:
  2386  0055  28B3               	goto	i1l1584
  2387  0056                     u75_20:
  2388  0056                     i1l1568:
  2389  0056  303A               	movlw	58
  2390  0057  022D               	subwf	_signo,w
  2391  0058  1803               	skipnc
  2392  0059  285B               	goto	u76_21
  2393  005A  285C               	goto	u76_20
  2394  005B                     u76_21:
  2395  005B  28B3               	goto	i1l1584
  2396  005C                     u76_20:
  2397  005C                     i1l1570:
  2398                           
  2399                           ;main.c: 214:         cc++;
  2400  005C  3001               	movlw	1
  2401  005D  00F4               	movwf	??_CONTADOR
  2402  005E  0874               	movf	??_CONTADOR,w
  2403  005F  07FC               	addwf	_cc,f
  2404                           
  2405                           ;main.c: 215:         if (cc==1){
  2406  0060  037C               	decf	_cc,w
  2407  0061  1D03               	btfss	3,2
  2408  0062  2864               	goto	u77_21
  2409  0063  2865               	goto	u77_20
  2410  0064                     u77_21:
  2411  0064  2871               	goto	i1l1574
  2412  0065                     u77_20:
  2413  0065                     i1l1572:
  2414                           
  2415                           ;main.c: 216:             A = num_ascii_dec(signo);
  2416  0065  082D               	movf	_signo,w
  2417  0066  120A  118A  2313  120A  118A  	fcall	_num_ascii_dec
  2418  006B  00F4               	movwf	??_CONTADOR
  2419  006C  0874               	movf	??_CONTADOR,w
  2420  006D  1283               	bcf	3,5	;RP0=0, select bank0
  2421  006E  1303               	bcf	3,6	;RP1=0, select bank0
  2422  006F  00A5               	movwf	_A
  2423                           
  2424                           ;main.c: 217:         }
  2425  0070  28B3               	goto	i1l1584
  2426  0071                     i1l1574:
  2427  0071  3002               	movlw	2
  2428  0072  067C               	xorwf	_cc,w
  2429  0073  1D03               	btfss	3,2
  2430  0074  2876               	goto	u78_21
  2431  0075  2877               	goto	u78_20
  2432  0076                     u78_21:
  2433  0076  2883               	goto	i1l1578
  2434  0077                     u78_20:
  2435  0077                     i1l1576:
  2436                           
  2437                           ;main.c: 219:             B = num_ascii_dec(signo);
  2438  0077  082D               	movf	_signo,w
  2439  0078  120A  118A  2313  120A  118A  	fcall	_num_ascii_dec
  2440  007D  00F4               	movwf	??_CONTADOR
  2441  007E  0874               	movf	??_CONTADOR,w
  2442  007F  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0080  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0081  00A4               	movwf	_B
  2445                           
  2446                           ;main.c: 220:         }
  2447  0082  28B3               	goto	i1l1584
  2448  0083                     i1l1578:
  2449  0083  3003               	movlw	3
  2450  0084  067C               	xorwf	_cc,w
  2451  0085  1D03               	btfss	3,2
  2452  0086  2888               	goto	u79_21
  2453  0087  2889               	goto	u79_20
  2454  0088                     u79_21:
  2455  0088  28B3               	goto	i1l169
  2456  0089                     u79_20:
  2457  0089                     i1l1580:
  2458                           
  2459                           ;main.c: 222:             C = num_ascii_dec(signo);
  2460  0089  082D               	movf	_signo,w
  2461  008A  120A  118A  2313  120A  118A  	fcall	_num_ascii_dec
  2462  008F  00F4               	movwf	??_CONTADOR
  2463  0090  0874               	movf	??_CONTADOR,w
  2464  0091  1283               	bcf	3,5	;RP0=0, select bank0
  2465  0092  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0093  00A3               	movwf	_C
  2467  0094                     i1l1582:
  2468                           
  2469                           ;main.c: 223:             ABC = A*100+B*10+C;
  2470  0094  300A               	movlw	10
  2471  0095  00F4               	movwf	??_CONTADOR
  2472  0096  0874               	movf	??_CONTADOR,w
  2473  0097  00F0               	movwf	i1___bmul@multiplicand
  2474  0098  0824               	movf	_B,w
  2475  0099  120A  118A  2409  120A  118A  	fcall	i1___bmul
  2476  009E  00F5               	movwf	??_CONTADOR+1
  2477  009F  3064               	movlw	100
  2478  00A0  00F6               	movwf	??_CONTADOR+2
  2479  00A1  0876               	movf	??_CONTADOR+2,w
  2480  00A2  00F0               	movwf	i1___bmul@multiplicand
  2481  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  2482  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  2483  00A5  0825               	movf	_A,w
  2484  00A6  120A  118A  2409  120A  118A  	fcall	i1___bmul
  2485  00AB  0775               	addwf	??_CONTADOR+1,w
  2486  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  2487  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  2488  00AE  0723               	addwf	_C,w
  2489  00AF  00F7               	movwf	??_CONTADOR+3
  2490  00B0  0877               	movf	??_CONTADOR+3,w
  2491  00B1  00A2               	movwf	_ABC
  2492  00B2  28B3               	goto	i1l1584
  2493  00B3                     i1l169:
  2494  00B3                     i1l1584:
  2495                           
  2496                           ;main.c: 226:     if (signo==10 && cc==3){
  2497  00B3  300A               	movlw	10
  2498  00B4  062D               	xorwf	_signo,w
  2499  00B5  1D03               	btfss	3,2
  2500  00B6  28B8               	goto	u80_21
  2501  00B7  28B9               	goto	u80_20
  2502  00B8                     u80_21:
  2503  00B8  28C4               	goto	i1l1592
  2504  00B9                     u80_20:
  2505  00B9                     i1l1586:
  2506  00B9  3003               	movlw	3
  2507  00BA  067C               	xorwf	_cc,w
  2508  00BB  1D03               	btfss	3,2
  2509  00BC  28BE               	goto	u81_21
  2510  00BD  28BF               	goto	u81_20
  2511  00BE                     u81_21:
  2512  00BE  28C4               	goto	i1l1592
  2513  00BF                     u81_20:
  2514  00BF                     i1l1588:
  2515                           
  2516                           ;main.c: 227:         cc = 0;
  2517  00BF  01FC               	clrf	_cc
  2518  00C0                     i1l1590:
  2519                           
  2520                           ;main.c: 228:         CONT=ABC;
  2521  00C0  0822               	movf	_ABC,w
  2522  00C1  00F4               	movwf	??_CONTADOR
  2523  00C2  0874               	movf	??_CONTADOR,w
  2524  00C3  00AA               	movwf	_CONT
  2525  00C4                     i1l1592:
  2526                           
  2527                           ;main.c: 230:     if (cc==4){
  2528  00C4  3004               	movlw	4
  2529  00C5  067C               	xorwf	_cc,w
  2530  00C6  1D03               	btfss	3,2
  2531  00C7  28C9               	goto	u82_21
  2532  00C8  28CA               	goto	u82_20
  2533  00C9                     u82_21:
  2534  00C9  28CB               	goto	i1l175
  2535  00CA                     u82_20:
  2536  00CA                     i1l1594:
  2537                           
  2538                           ;main.c: 231:         cc=0;
  2539  00CA  01FC               	clrf	_cc
  2540  00CB                     i1l175:
  2541  00CB  0008               	return
  2542  00CC                     __end_of_CONTADOR:
  2543                           
  2544                           	psect	text12
  2545  0409                     __ptext12:	
  2546 ;; *************** function i1___bmul *****************
  2547 ;; Defined at:
  2548 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  multiplier      1    wreg     unsigned char 
  2551 ;;  multiplicand    1    0[COMMON] unsigned char 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  multiplier      1    3[COMMON] unsigned char 
  2554 ;;  product         1    2[COMMON] unsigned char 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      unsigned char 
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2564 ;;      Params:         1       0       0       0       0
  2565 ;;      Locals:         2       0       0       0       0
  2566 ;;      Temps:          1       0       0       0       0
  2567 ;;      Totals:         4       0       0       0       0
  2568 ;;Total ram usage:        4 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_CONTADOR
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           
  2578                           ;psect for function i1___bmul
  2579  0409                     i1___bmul:
  2580                           
  2581                           ;incstack = 0
  2582                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  2583                           ;i1___bmul@multiplier stored from wreg
  2584  0409  00F3               	movwf	i1___bmul@multiplier
  2585  040A                     i1l1528:
  2586  040A  01F2               	clrf	i1___bmul@product
  2587  040B                     i1l1530:
  2588  040B  1C73               	btfss	i1___bmul@multiplier,0
  2589  040C  2C0E               	goto	u67_21
  2590  040D  2C0F               	goto	u67_20
  2591  040E                     u67_21:
  2592  040E  2C13               	goto	i1l1534
  2593  040F                     u67_20:
  2594  040F                     i1l1532:
  2595  040F  0870               	movf	i1___bmul@multiplicand,w
  2596  0410  00F1               	movwf	??i1___bmul
  2597  0411  0871               	movf	??i1___bmul,w
  2598  0412  07F2               	addwf	i1___bmul@product,f
  2599  0413                     i1l1534:
  2600  0413  1003               	clrc
  2601  0414  0DF0               	rlf	i1___bmul@multiplicand,f
  2602  0415                     i1l1536:
  2603  0415  1003               	clrc
  2604  0416  0CF3               	rrf	i1___bmul@multiplier,f
  2605  0417  0873               	movf	i1___bmul@multiplier,w
  2606  0418  1D03               	btfss	3,2
  2607  0419  2C1B               	goto	u68_21
  2608  041A  2C1C               	goto	u68_20
  2609  041B                     u68_21:
  2610  041B  2C0B               	goto	i1l1530
  2611  041C                     u68_20:
  2612  041C                     i1l1538:
  2613  041C  0872               	movf	i1___bmul@product,w
  2614  041D                     i1l332:
  2615  041D  0008               	return
  2616  041E                     __end_ofi1___bmul:
  2617                           
  2618                           	psect	text13
  2619  0313                     __ptext13:	
  2620 ;; *************** function _num_ascii_dec *****************
  2621 ;; Defined at:
  2622 ;;		line 50 in file "ASCII.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;  num             1    wreg     unsigned char 
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  num             1    2[COMMON] unsigned char 
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      unsigned char 
  2629 ;; Registers used:
  2630 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2636 ;;      Params:         0       0       0       0       0
  2637 ;;      Locals:         1       0       0       0       0
  2638 ;;      Temps:          2       0       0       0       0
  2639 ;;      Totals:         3       0       0       0       0
  2640 ;;Total ram usage:        3 bytes
  2641 ;; Hardware stack levels used: 1
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_CONTADOR
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           
  2650                           ;psect for function _num_ascii_dec
  2651  0313                     _num_ascii_dec:
  2652                           
  2653                           ;incstack = 0
  2654                           ; Regs used in _num_ascii_dec: [wreg-fsr0h+status,2+status,0]
  2655                           ;num_ascii_dec@num stored from wreg
  2656  0313  00F2               	movwf	num_ascii_dec@num
  2657  0314                     i1l1380:
  2658                           
  2659                           ;ASCII.c: 51:  switch(num){
  2660  0314  2B29               	goto	i1l1450
  2661  0315                     i1l1382:
  2662                           
  2663                           ;ASCII.c: 53:   return 0;
  2664  0315  3000               	movlw	0
  2665  0316  2B51               	goto	i1l196
  2666  0317                     i1l1394:
  2667                           
  2668                           ;ASCII.c: 61:   return 1;
  2669  0317  3001               	movlw	1
  2670  0318  2B51               	goto	i1l196
  2671  0319                     i1l1400:
  2672                           
  2673                           ;ASCII.c: 65:   return 2;
  2674  0319  3002               	movlw	2
  2675  031A  2B51               	goto	i1l196
  2676  031B                     i1l1406:
  2677                           
  2678                           ;ASCII.c: 69:   return 3;
  2679  031B  3003               	movlw	3
  2680  031C  2B51               	goto	i1l196
  2681  031D                     i1l1412:
  2682                           
  2683                           ;ASCII.c: 73:   return 4;
  2684  031D  3004               	movlw	4
  2685  031E  2B51               	goto	i1l196
  2686  031F                     i1l1418:
  2687                           
  2688                           ;ASCII.c: 77:   return 5;
  2689  031F  3005               	movlw	5
  2690  0320  2B51               	goto	i1l196
  2691  0321                     i1l1424:
  2692                           
  2693                           ;ASCII.c: 81:   return 6;
  2694  0321  3006               	movlw	6
  2695  0322  2B51               	goto	i1l196
  2696  0323                     i1l1430:
  2697                           
  2698                           ;ASCII.c: 85:   return 7;
  2699  0323  3007               	movlw	7
  2700  0324  2B51               	goto	i1l196
  2701  0325                     i1l1436:
  2702                           
  2703                           ;ASCII.c: 89:   return 8;
  2704  0325  3008               	movlw	8
  2705  0326  2B51               	goto	i1l196
  2706  0327                     i1l1442:
  2707                           
  2708                           ;ASCII.c: 93:   return 9;
  2709  0327  3009               	movlw	9
  2710  0328  2B51               	goto	i1l196
  2711  0329                     i1l1450:
  2712  0329  0872               	movf	num_ascii_dec@num,w
  2713  032A  00F0               	movwf	??_num_ascii_dec
  2714  032B  01F1               	clrf	??_num_ascii_dec+1
  2715                           
  2716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2717                           ; Switch size 1, requested type "simple"
  2718                           ; Number of cases is 1, Range of values is 0 to 0
  2719                           ; switch strategies available:
  2720                           ; Name         Instructions Cycles
  2721                           ; simple_byte            4     3 (average)
  2722                           ; direct_byte           11     8 (fixed)
  2723                           ; jumptable            260     6 (fixed)
  2724                           ;	Chosen strategy is simple_byte
  2725  032C  0871               	movf	??_num_ascii_dec+1,w
  2726  032D  3A00               	xorlw	0	; case 0
  2727  032E  1903               	skipnz
  2728  032F  2B31               	goto	i1l1806
  2729  0330  2B15               	goto	i1l1382
  2730  0331                     i1l1806:
  2731                           
  2732                           ; Switch size 1, requested type "simple"
  2733                           ; Number of cases is 10, Range of values is 48 to 57
  2734                           ; switch strategies available:
  2735                           ; Name         Instructions Cycles
  2736                           ; simple_byte           31    16 (average)
  2737                           ; direct_byte           41    11 (fixed)
  2738                           ; jumptable            263     9 (fixed)
  2739                           ;	Chosen strategy is simple_byte
  2740  0331  0870               	movf	??_num_ascii_dec,w
  2741  0332  3A30               	xorlw	48	; case 48
  2742  0333  1903               	skipnz
  2743  0334  2B15               	goto	i1l1382
  2744  0335  3A01               	xorlw	1	; case 49
  2745  0336  1903               	skipnz
  2746  0337  2B17               	goto	i1l1394
  2747  0338  3A03               	xorlw	3	; case 50
  2748  0339  1903               	skipnz
  2749  033A  2B19               	goto	i1l1400
  2750  033B  3A01               	xorlw	1	; case 51
  2751  033C  1903               	skipnz
  2752  033D  2B1B               	goto	i1l1406
  2753  033E  3A07               	xorlw	7	; case 52
  2754  033F  1903               	skipnz
  2755  0340  2B1D               	goto	i1l1412
  2756  0341  3A01               	xorlw	1	; case 53
  2757  0342  1903               	skipnz
  2758  0343  2B1F               	goto	i1l1418
  2759  0344  3A03               	xorlw	3	; case 54
  2760  0345  1903               	skipnz
  2761  0346  2B21               	goto	i1l1424
  2762  0347  3A01               	xorlw	1	; case 55
  2763  0348  1903               	skipnz
  2764  0349  2B23               	goto	i1l1430
  2765  034A  3A0F               	xorlw	15	; case 56
  2766  034B  1903               	skipnz
  2767  034C  2B25               	goto	i1l1436
  2768  034D  3A01               	xorlw	1	; case 57
  2769  034E  1903               	skipnz
  2770  034F  2B27               	goto	i1l1442
  2771  0350  2B15               	goto	i1l1382
  2772  0351                     i1l196:
  2773  0351  0008               	return
  2774  0352                     __end_of_num_ascii_dec:
  2775  007E                     btemp	set	126	;btemp
  2776  007E                     wtemp0	set	126
  2777                           
  2778                           	psect	config
  2779                           
  2780                           ;Config register CONFIG1 @ 0x2007
  2781                           ;	Oscillator Selection bits
  2782                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2783                           ;	Watchdog Timer Enable bit
  2784                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2785                           ;	Power-up Timer Enable bit
  2786                           ;	PWRTE = OFF, PWRT disabled
  2787                           ;	RE3/MCLR pin function select bit
  2788                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2789                           ;	Code Protection bit
  2790                           ;	CP = OFF, Program memory code protection is disabled
  2791                           ;	Data Code Protection bit
  2792                           ;	CPD = OFF, Data memory code protection is disabled
  2793                           ;	Brown Out Reset Selection bits
  2794                           ;	BOREN = OFF, BOR disabled
  2795                           ;	Internal External Switchover bit
  2796                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2797                           ;	Fail-Safe Clock Monitor Enabled bit
  2798                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2799                           ;	Low Voltage Programming Enable bit
  2800                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2801                           ;	In-Circuit Debugger Mode bit
  2802                           ;	DEBUG = 0x1, unprogrammed default
  2803  2007                     	org	8199
  2804  2007  20D4               	dw	8404
  2805                           
  2806                           ;Config register CONFIG2 @ 0x2008
  2807                           ;	Brown-out Reset Selection bit
  2808                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2809                           ;	Flash Program Memory Self Write Enable bits
  2810                           ;	WRT = OFF, Write protection off
  2811  2008                     	org	8200
  2812  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     19      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_CONTADOR
    _CONTADOR->i1___bmul

Critical Paths under _main in BANK0

    _main->_LECT1
    _main->_LECT2
    _LECT2->___awdiv
    _LECT1->___awdiv
    ___awdiv->___wmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3644
                              _LECT1
                              _LECT2
                              _Setup
                           _USARTcon
 ---------------------------------------------------------------------------------
 (1) _USARTcon                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LECT2                                                4     4      0    1822
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (1) _LECT1                                                4     4      0    1822
                                             15 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                             ___wmul
                          _num_ascii
 ---------------------------------------------------------------------------------
 (2) _num_ascii                                            3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     496
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     166
                                              8 COMMON     4     4      0
                           _CONTADOR
                              _envio
 ---------------------------------------------------------------------------------
 (4) _envio                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _CONTADOR                                             4     4      0     166
                                              4 COMMON     4     4      0
                      _num_ascii_dec
                           i1___bmul
 ---------------------------------------------------------------------------------
 (5) i1___bmul                                             4     3      1     144
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) _num_ascii_dec                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LECT1
     ___awdiv
       ___wmul (ARG)
     ___bmul
     ___wmul
     _num_ascii
   _LECT2
     ___awdiv
     ___bmul
     ___wmul
     _num_ascii
   _Setup
   _USARTcon

 _ISR (ROOT)
   _CONTADOR
     _num_ascii_dec
     i1___bmul
   _envio

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      2D       5       56.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3B      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 18 18:34:47 2021

                      _A 0025                        _B 0024                        _C 0023  
         ___bmul@product 003C                       _A1 0021             ___awdiv@sign 0046  
                     _cc 007C                       fsr 0004      ___wmul@multiplicand 003C  
                    _AC1 0036                      _AC2 0030                      _AD1 0035  
                    _AD2 002F                      l220 0408                      l150 01CB  
                    l153 014B                      l306 03C3                      l147 0387  
                    _ABC 0022                      l332 03F2                      l308 03DB  
                    l180 0312                      _AR1 0029                      _AR2 0028  
                    l459 0234                      _AR3 0027                      _AR4 0026  
                    _AU1 0034                      _AU2 002E                      u510 03BD  
                    u511 03BC                      u610 0201                      u611 0200  
                    u540 03D7                      _ISR 0235                      u605 01F3  
                    u541 03D6                      u525 03C4                      u630 0212  
                    u550 03E4                      u631 0211                      u551 03E3  
                    u535 03CB                      u560 03F1                      u625 0202  
                    u561 03F0                      u650 0226                      u570 01D3  
                    u651 0225                      u635 020E                      u571 01D2  
                    u660 022B                      u580 01DE                      u661 022A  
                    u645 021A                      u581 01DD                      u590 01EF  
                    u591 01EE                      u960 02A3                      u961 02A2  
                    u970 02A9                      u971 02A8                      u980 02AF  
                    u981 02AE                      u990 02B7                      u991 02B6  
                    _Un1 0037                      _Un2 0031                      _res 002B  
                    fsr0 0004                      _sum 002C                      indf 0000  
                   ?_ISR 0070                     l1302 02D5                     l1304 02D6  
                   l1322 02DA                     l1500 01E9                     l1340 02E0  
                   l1316 02D8                     l1510 0201                     l1502 01EF  
                   l1334 02DE                     l1512 0212                     l1504 01F2  
                   l1520 0226                     l1352 02E4                     l1328 02DC  
                   l1522 022B                     l1514 0218                     l1506 01F9  
                   l1346 02E2                     l1524 0230                     l1516 0219  
                   l1508 01FD                     l1460 03BD                     l1364 02E8  
                   l1372 02EA                     l1620 0367                     l1518 0220  
                   l1470 03DF                     l1462 03CA                     l1358 02E6  
                   l1630 036C                     l1622 0368                     l1614 0352  
                   l1480 03F1                     l1472 03E0                     l1464 03D1  
                   l1456 03B5                     l1640 0377                     l1632 036D  
                   l1624 0369                     l1616 035A                     l1490 01D8  
                   l1474 03E4                     l1466 03D7                     l1458 03B9  
                   l1650 0382                     l1642 0378                     l1634 0370  
                   l1626 036A                     l1618 035C                     l1730 0291  
                   l1492 01DA                     l1484 01CC                     l1476 03E8  
                   l1804 02F2                     l1652 0384                     l1644 037A  
                   l1636 0371                     l1628 036B                     l1660 03FB  
                   l1740 02B1                     l1732 029B                     l1494 01DE  
                   l1486 01CF                     l1478 03EA                     l1654 0385  
                   l1646 037E                     l1638 0374                     l1670 0405  
                   l1662 03FE                     l1750 02C8                     l1742 02B7  
                   l1734 02A3                     l1496 01E3                     l1488 01D3  
                   l1672 014C                     l1680 00CC                     l1656 0386  
                   l1648 0381                     l1664 0400                     l1752 02CC  
                   l1744 02BD                     l1736 02A9                     l1498 01E7  
                   l1674 01AA                     l1682 012A                     l1666 0403  
                   l1658 03F3                     l1746 02BE                     l1738 02AF  
                   l1676 01B5                     l1684 0135                     l1668 0404  
                   l1748 02C3                     l1678 01C0                     l1686 0140  
                   u1000 02BD                     u1001 02BC                     _CONT 002A  
                   _TMR0 0001                     _Dec1 0038                     _Dec2 0032  
                   _Cen1 0039                     _Cen2 0033                     _main 0291  
                   btemp 007E                     start 000E        ___bmul@multiplier 003D  
       __end_of_CONTADOR 00CC                    ??_ISR 0078                    ?_main 0070  
        __end_of___awdiv 0235                    _ANSEL 0188          ___awdiv@divisor 0040  
                  _LECT1 014C                    _LECT2 00CC                    _BOTON 0020  
                  i1l134 0288                    i1l160 03B4                    i1l332 041D  
                  i1l175 00CB                    i1l169 00B3                    i1l196 0351  
        ___awdiv@counter 0045                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u70_20 0030  
                  u70_21 002F                    u71_20 0035                    u71_21 0034  
                  u80_20 00B9                    u72_20 0040                    u80_21 00B8  
                  u72_21 003F                    u81_20 00BF                    u73_20 0048  
                  u81_21 00BE                    u73_21 0047                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    u82_20 00CA                    u74_20 004D  
                  u90_20 025F                    u82_21 00C9                    u74_21 004C  
                  u90_21 025E                    u67_20 040F                    u75_20 0056  
                  u83_20 0391                    u91_20 0265                    u67_21 040E  
                  u75_21 0055                    u83_21 0390                    u91_21 0264  
                  u68_20 041C                    u76_20 005C                    u84_20 039B  
                  u92_20 026A                    u68_21 041B                    u76_21 005B  
                  u84_21 039A                    u92_21 0269                    u77_20 0065  
                  u69_20 0028                    u85_20 03A5                    u93_20 0279  
                  u77_21 0064                    u69_21 0027                    u85_21 03A4  
                  u93_21 0278                    u78_20 0077                    u86_20 03AF  
                  u94_20 027F                    u78_21 0076                    u86_21 03AE  
                  u94_21 027E                    u79_20 0089                    u95_20 0284  
                  u87_20 023B                    u79_21 0088                    u95_21 0283  
                  u87_21 023A                    u88_20 024A                    u88_21 0249  
                  u89_20 0253                    u89_21 0252                    _TXREG 0019  
                  _Setup 0352                    _envio 0388                    _signo 002D  
       __end_of_USARTcon 0409         __end_ofi1___bmul 041E                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 02D2                   ??_main 004D                   ?_LECT1 0070  
                 ?_LECT2 0070                   ?_Setup 0070                   _ADCON1 009F  
                 ?_envio 0070         ___awdiv@dividend 0042                   _ANSELH 0189  
                 i1l1400 0319                   i1l1412 031D                   i1l1430 0323  
                 i1l1406 031B                   i1l1424 0321                   i1l1600 0395  
                 i1l1442 0327                   i1l1418 031F                   i1l1450 0329  
                 i1l1530 040B                   i1l1610 03AF                   i1l1602 039B  
                 i1l1436 0325                   i1l1380 0314                   i1l1532 040F  
                 i1l1612 03B3                   i1l1604 039F                   i1l1700 0253  
                 i1l1382 0315                   i1l1534 0413                   i1l1550 0035  
                 i1l1542 0020                   i1l1606 03A5                   i1l1710 0265  
                 i1l1702 0254                   i1l1536 0415                   i1l1528 040A  
                 i1l1560 0048                   i1l1552 0036                   i1l1544 0028  
                 i1l1608 03A9                   i1l1720 0279                   i1l1712 026A  
                 i1l1704 025A                   i1l1394 0317                   i1l1538 041C  
                 i1l1570 005C                   i1l1562 004D                   i1l1554 003A  
                 i1l1546 002A                   i1l1722 027A                   i1l1714 026E  
                 i1l1706 025F                   i1l1580 0089                   i1l1572 0065  
                 i1l1564 004E                   i1l1556 0040                   i1l1548 0030  
                 i1l1724 027F                   i1l1716 0270                   i1l1708 0260  
                 i1l1806 0331                   i1l1590 00C0                   i1l1582 0094  
                 i1l1574 0071                   i1l1566 0050                   i1l1558 0042  
                 i1l1726 0284                   i1l1718 0274                   i1l1592 00C4  
                 i1l1576 0077                   i1l1568 0056                   i1l1584 00B3  
                 i1l1728 0286                   i1l1594 00CA                   i1l1586 00B9  
                 i1l1578 0083                   i1l1690 023B                   i1l1588 00BF  
                 i1l1596 0388                   i1l1692 023F                   i1l1598 0391  
                 i1l1694 0244                   i1l1696 024A                   i1l1688 0235  
                 i1l1698 024F                   _SPBRGH 009A                   ___bmul 03DC  
                 ___wmul 03B5                ??___awdiv 0044         ___awdiv@quotient 0047  
                 saved_w 007E                ?_CONTADOR 0070  __end_of__initialization 001C  
          __end_of_LECT1 01CC            __end_of_LECT2 014C      ___bmul@multiplicand 003A  
         __pcstackCOMMON 0070            __end_of_Setup 0388            __end_of_envio 03B5  
              ?_USARTcon 0070                ?i1___bmul 0070                  ??_LECT1 0049  
                ??_LECT2 0049                  ??_Setup 003A         i1___bmul@product 0072  
                ??_envio 0070               ??_CONTADOR 0074               __pbssBANK0 0020  
  __end_of_num_ascii_dec 0352               __pmaintext 0291                  ?___bmul 003A  
                ?___wmul 003A               __pintentry 0004               ??_USARTcon 003A  
             ??i1___bmul 0071       __size_of_num_ascii 0041          __size_of___bmul 0017  
                ___awdiv 01CC          __size_of___wmul 0027                  __ptext1 03F3  
                __ptext2 0352                  __ptext3 00CC                  __ptext4 014C  
                __ptext5 02D2                  __ptext6 03B5                  __ptext7 03DC  
                __ptext8 01CC                  __ptext9 0235             __size_of_ISR 005C  
    i1___bmul@multiplier 0073                  clrloop0 041F     end_of_initialization 001C  
      __end_of_num_ascii 0313                _RCSTAbits 0018                _PORTBbits 0006  
      __size_of_CONTADOR 00AC                _TXSTAbits 0098           __end_of___bmul 03F3  
         __end_of___wmul 03DC              _BAUDCTLbits 0187        __size_of_USARTcon 0016  
      __size_ofi1___bmul 0015      start_initialization 0011              __end_of_ISR 0291  
               ??___bmul 003B                 ??___wmul 003E              __pbssCOMMON 007C  
              ___latbits 0002            __pcstackBANK0 003A                 ?___awdiv 0040  
         __size_of_LECT1 0080           __size_of_LECT2 0080   __size_of_num_ascii_dec 003F  
         __size_of_Setup 0036           __size_of_envio 002D                 _CONTADOR 0020  
      interrupt_function 0004           ___wmul@product 003E                 _IOCBbits 0096  
              clear_ram0 041E                 _PIE1bits 008C    i1___bmul@multiplicand 0070  
               _PIR1bits 000C                _num_ascii 02D2                 _USARTcon 03F3  
               i1___bmul 0409        ___wmul@multiplier 003A                 _WPUBbits 0095  
          _num_ascii_dec 0313               ?_num_ascii 0070         __size_of___awdiv 0069  
       num_ascii_dec@num 0072                 __ptext10 0388                 __ptext11 0020  
               __ptext12 0409                 __ptext13 0313            __size_of_main 0041  
         ?_num_ascii_dec 0070                 _toggleTX 007D               _INTCONbits 000B  
               intlevel1 0000             num_ascii@num 003C               _OSCCONbits 008F  
            ??_num_ascii 003A               _OPTION_REG 0081          ??_num_ascii_dec 0070  
